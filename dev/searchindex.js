Search.setIndex({"docnames": ["_examples/README", "_examples/build_coastal_model", "_examples/build_from_py", "_examples/build_riverine_model", "_examples/run_sfincs_model", "_examples/sfincs_results_animation", "_examples/sfincs_results_hmax", "_examples/update_model", "_generated/hydromt_sfincs.SfincsModel", "_generated/hydromt_sfincs.SfincsModel.build", "_generated/hydromt_sfincs.SfincsModel.config", "_generated/hydromt_sfincs.SfincsModel.crs", "_generated/hydromt_sfincs.SfincsModel.forcing", "_generated/hydromt_sfincs.SfincsModel.get_config", "_generated/hydromt_sfincs.SfincsModel.get_model_time", "_generated/hydromt_sfincs.SfincsModel.get_spatial_attrs", "_generated/hydromt_sfincs.SfincsModel.mask", "_generated/hydromt_sfincs.SfincsModel.plot_basemap", "_generated/hydromt_sfincs.SfincsModel.plot_forcing", "_generated/hydromt_sfincs.SfincsModel.read", "_generated/hydromt_sfincs.SfincsModel.read_config", "_generated/hydromt_sfincs.SfincsModel.read_forcing", "_generated/hydromt_sfincs.SfincsModel.read_results", "_generated/hydromt_sfincs.SfincsModel.read_states", "_generated/hydromt_sfincs.SfincsModel.read_staticgeoms", "_generated/hydromt_sfincs.SfincsModel.read_staticmaps", "_generated/hydromt_sfincs.SfincsModel.region", "_generated/hydromt_sfincs.SfincsModel.res", "_generated/hydromt_sfincs.SfincsModel.results", "_generated/hydromt_sfincs.SfincsModel.root", "_generated/hydromt_sfincs.SfincsModel.set_config", "_generated/hydromt_sfincs.SfincsModel.set_forcing", "_generated/hydromt_sfincs.SfincsModel.set_forcing_1d", "_generated/hydromt_sfincs.SfincsModel.set_results", "_generated/hydromt_sfincs.SfincsModel.set_root", "_generated/hydromt_sfincs.SfincsModel.set_states", "_generated/hydromt_sfincs.SfincsModel.set_staticgeoms", "_generated/hydromt_sfincs.SfincsModel.set_staticmaps", "_generated/hydromt_sfincs.SfincsModel.setup_bounds", "_generated/hydromt_sfincs.SfincsModel.setup_cn_infiltration", "_generated/hydromt_sfincs.SfincsModel.setup_config", "_generated/hydromt_sfincs.SfincsModel.setup_gauges", "_generated/hydromt_sfincs.SfincsModel.setup_h_forcing", "_generated/hydromt_sfincs.SfincsModel.setup_manning_roughness", "_generated/hydromt_sfincs.SfincsModel.setup_mask", "_generated/hydromt_sfincs.SfincsModel.setup_merge_topobathy", "_generated/hydromt_sfincs.SfincsModel.setup_p_forcing", "_generated/hydromt_sfincs.SfincsModel.setup_p_forcing_from_grid", "_generated/hydromt_sfincs.SfincsModel.setup_q_forcing", "_generated/hydromt_sfincs.SfincsModel.setup_q_forcing_from_grid", "_generated/hydromt_sfincs.SfincsModel.setup_river_bathymetry", "_generated/hydromt_sfincs.SfincsModel.setup_river_hydrography", "_generated/hydromt_sfincs.SfincsModel.setup_river_inflow", "_generated/hydromt_sfincs.SfincsModel.setup_river_outflow", "_generated/hydromt_sfincs.SfincsModel.setup_structures", "_generated/hydromt_sfincs.SfincsModel.setup_topobathy", "_generated/hydromt_sfincs.SfincsModel.states", "_generated/hydromt_sfincs.SfincsModel.staticgeoms", "_generated/hydromt_sfincs.SfincsModel.staticmaps", "_generated/hydromt_sfincs.SfincsModel.update", "_generated/hydromt_sfincs.SfincsModel.update_spatial_attrs", "_generated/hydromt_sfincs.SfincsModel.write", "_generated/hydromt_sfincs.SfincsModel.write_config", "_generated/hydromt_sfincs.SfincsModel.write_forcing", "_generated/hydromt_sfincs.SfincsModel.write_states", "_generated/hydromt_sfincs.SfincsModel.write_staticgeoms", "_generated/hydromt_sfincs.SfincsModel.write_staticmaps", "_generated/hydromt_sfincs.plots.plot_basemap", "_generated/hydromt_sfincs.plots.plot_forcing", "_generated/hydromt_sfincs.read_ascii_map", "_generated/hydromt_sfincs.read_binary_map", "_generated/hydromt_sfincs.read_binary_map_index", "_generated/hydromt_sfincs.read_inp", "_generated/hydromt_sfincs.read_sfincs_his_results", "_generated/hydromt_sfincs.read_sfincs_map_results", "_generated/hydromt_sfincs.read_structures", "_generated/hydromt_sfincs.read_timeseries", "_generated/hydromt_sfincs.read_xy", "_generated/hydromt_sfincs.utils.gdf2structures", "_generated/hydromt_sfincs.utils.get_spatial_attrs", "_generated/hydromt_sfincs.utils.mask_bounds", "_generated/hydromt_sfincs.utils.mask_topobathy", "_generated/hydromt_sfincs.utils.parse_datetime", "_generated/hydromt_sfincs.utils.structures2gdf", "_generated/hydromt_sfincs.workflows.burn_river_zb", "_generated/hydromt_sfincs.workflows.cn_to_s", "_generated/hydromt_sfincs.workflows.get_rivbank_dz", "_generated/hydromt_sfincs.workflows.get_river_bathymetry", "_generated/hydromt_sfincs.workflows.landuse", "_generated/hydromt_sfincs.workflows.merge_topobathy", "_generated/hydromt_sfincs.workflows.river_boundary_points", "_generated/hydromt_sfincs.workflows.snap_discharge", "_generated/hydromt_sfincs.write_ascii_map", "_generated/hydromt_sfincs.write_binary_map", "_generated/hydromt_sfincs.write_binary_map_index", "_generated/hydromt_sfincs.write_inp", "_generated/hydromt_sfincs.write_structures", "_generated/hydromt_sfincs.write_timeseries", "_generated/hydromt_sfincs.write_xy", "api", "changelog", "dev_guide/contributors", "dev_guide/dev_install", "dev_guide/intro", "dev_guide/roadmap", "getting_started/example_index", "getting_started/faq", "getting_started/installation", "getting_started/intro", "index", "user_guide/intro", "user_guide/process_analyze", "user_guide/sfincs", "user_guide/sfincs_build_update", "user_guide/sfincs_coastal", "user_guide/sfincs_riverine"], "filenames": ["_examples/README.rst", "_examples/build_coastal_model.ipynb", "_examples/build_from_py.ipynb", "_examples/build_riverine_model.ipynb", "_examples/run_sfincs_model.ipynb", "_examples/sfincs_results_animation.ipynb", "_examples/sfincs_results_hmax.ipynb", "_examples/update_model.ipynb", "_generated/hydromt_sfincs.SfincsModel.rst", "_generated/hydromt_sfincs.SfincsModel.build.rst", "_generated/hydromt_sfincs.SfincsModel.config.rst", "_generated/hydromt_sfincs.SfincsModel.crs.rst", "_generated/hydromt_sfincs.SfincsModel.forcing.rst", "_generated/hydromt_sfincs.SfincsModel.get_config.rst", "_generated/hydromt_sfincs.SfincsModel.get_model_time.rst", "_generated/hydromt_sfincs.SfincsModel.get_spatial_attrs.rst", "_generated/hydromt_sfincs.SfincsModel.mask.rst", "_generated/hydromt_sfincs.SfincsModel.plot_basemap.rst", "_generated/hydromt_sfincs.SfincsModel.plot_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.read.rst", "_generated/hydromt_sfincs.SfincsModel.read_config.rst", "_generated/hydromt_sfincs.SfincsModel.read_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.read_results.rst", "_generated/hydromt_sfincs.SfincsModel.read_states.rst", "_generated/hydromt_sfincs.SfincsModel.read_staticgeoms.rst", "_generated/hydromt_sfincs.SfincsModel.read_staticmaps.rst", "_generated/hydromt_sfincs.SfincsModel.region.rst", "_generated/hydromt_sfincs.SfincsModel.res.rst", "_generated/hydromt_sfincs.SfincsModel.results.rst", "_generated/hydromt_sfincs.SfincsModel.root.rst", "_generated/hydromt_sfincs.SfincsModel.set_config.rst", "_generated/hydromt_sfincs.SfincsModel.set_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.set_forcing_1d.rst", "_generated/hydromt_sfincs.SfincsModel.set_results.rst", "_generated/hydromt_sfincs.SfincsModel.set_root.rst", "_generated/hydromt_sfincs.SfincsModel.set_states.rst", "_generated/hydromt_sfincs.SfincsModel.set_staticgeoms.rst", "_generated/hydromt_sfincs.SfincsModel.set_staticmaps.rst", "_generated/hydromt_sfincs.SfincsModel.setup_bounds.rst", "_generated/hydromt_sfincs.SfincsModel.setup_cn_infiltration.rst", "_generated/hydromt_sfincs.SfincsModel.setup_config.rst", "_generated/hydromt_sfincs.SfincsModel.setup_gauges.rst", "_generated/hydromt_sfincs.SfincsModel.setup_h_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.setup_manning_roughness.rst", "_generated/hydromt_sfincs.SfincsModel.setup_mask.rst", "_generated/hydromt_sfincs.SfincsModel.setup_merge_topobathy.rst", "_generated/hydromt_sfincs.SfincsModel.setup_p_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.setup_p_forcing_from_grid.rst", "_generated/hydromt_sfincs.SfincsModel.setup_q_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.setup_q_forcing_from_grid.rst", "_generated/hydromt_sfincs.SfincsModel.setup_river_bathymetry.rst", "_generated/hydromt_sfincs.SfincsModel.setup_river_hydrography.rst", "_generated/hydromt_sfincs.SfincsModel.setup_river_inflow.rst", "_generated/hydromt_sfincs.SfincsModel.setup_river_outflow.rst", "_generated/hydromt_sfincs.SfincsModel.setup_structures.rst", "_generated/hydromt_sfincs.SfincsModel.setup_topobathy.rst", "_generated/hydromt_sfincs.SfincsModel.states.rst", "_generated/hydromt_sfincs.SfincsModel.staticgeoms.rst", "_generated/hydromt_sfincs.SfincsModel.staticmaps.rst", "_generated/hydromt_sfincs.SfincsModel.update.rst", "_generated/hydromt_sfincs.SfincsModel.update_spatial_attrs.rst", "_generated/hydromt_sfincs.SfincsModel.write.rst", "_generated/hydromt_sfincs.SfincsModel.write_config.rst", "_generated/hydromt_sfincs.SfincsModel.write_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.write_states.rst", "_generated/hydromt_sfincs.SfincsModel.write_staticgeoms.rst", "_generated/hydromt_sfincs.SfincsModel.write_staticmaps.rst", "_generated/hydromt_sfincs.plots.plot_basemap.rst", "_generated/hydromt_sfincs.plots.plot_forcing.rst", "_generated/hydromt_sfincs.read_ascii_map.rst", "_generated/hydromt_sfincs.read_binary_map.rst", "_generated/hydromt_sfincs.read_binary_map_index.rst", "_generated/hydromt_sfincs.read_inp.rst", "_generated/hydromt_sfincs.read_sfincs_his_results.rst", "_generated/hydromt_sfincs.read_sfincs_map_results.rst", "_generated/hydromt_sfincs.read_structures.rst", "_generated/hydromt_sfincs.read_timeseries.rst", "_generated/hydromt_sfincs.read_xy.rst", "_generated/hydromt_sfincs.utils.gdf2structures.rst", "_generated/hydromt_sfincs.utils.get_spatial_attrs.rst", "_generated/hydromt_sfincs.utils.mask_bounds.rst", "_generated/hydromt_sfincs.utils.mask_topobathy.rst", "_generated/hydromt_sfincs.utils.parse_datetime.rst", "_generated/hydromt_sfincs.utils.structures2gdf.rst", "_generated/hydromt_sfincs.workflows.burn_river_zb.rst", "_generated/hydromt_sfincs.workflows.cn_to_s.rst", "_generated/hydromt_sfincs.workflows.get_rivbank_dz.rst", "_generated/hydromt_sfincs.workflows.get_river_bathymetry.rst", "_generated/hydromt_sfincs.workflows.landuse.rst", "_generated/hydromt_sfincs.workflows.merge_topobathy.rst", "_generated/hydromt_sfincs.workflows.river_boundary_points.rst", "_generated/hydromt_sfincs.workflows.snap_discharge.rst", "_generated/hydromt_sfincs.write_ascii_map.rst", "_generated/hydromt_sfincs.write_binary_map.rst", "_generated/hydromt_sfincs.write_binary_map_index.rst", "_generated/hydromt_sfincs.write_inp.rst", "_generated/hydromt_sfincs.write_structures.rst", "_generated/hydromt_sfincs.write_timeseries.rst", "_generated/hydromt_sfincs.write_xy.rst", "api.rst", "changelog.rst", "dev_guide/contributors.rst", "dev_guide/dev_install.rst", "dev_guide/intro.rst", "dev_guide/roadmap.rst", "getting_started/example_index.rst", "getting_started/faq.rst", "getting_started/installation.rst", "getting_started/intro.rst", "index.rst", "user_guide/intro.rst", "user_guide/process_analyze.rst", "user_guide/sfincs.rst", "user_guide/sfincs_build_update.rst", "user_guide/sfincs_coastal.rst", "user_guide/sfincs_riverine.rst"], "titles": ["&lt;no title&gt;", "Make a coastal sfincs model from scratch using hydromt", "Build a model from python", "Build a riverine SFINCS model from scratch", "Run a SFINCS model", "Sfincs results: animation", "Sfincs results: maximum water depth", "Update existing Sfincs model with boundary conditions and forcing", "hydromt_sfincs.SfincsModel", "hydromt_sfincs.SfincsModel.build", "hydromt_sfincs.SfincsModel.config", "hydromt_sfincs.SfincsModel.crs", "hydromt_sfincs.SfincsModel.forcing", "hydromt_sfincs.SfincsModel.get_config", "hydromt_sfincs.SfincsModel.get_model_time", "hydromt_sfincs.SfincsModel.get_spatial_attrs", "hydromt_sfincs.SfincsModel.mask", "hydromt_sfincs.SfincsModel.plot_basemap", "hydromt_sfincs.SfincsModel.plot_forcing", "hydromt_sfincs.SfincsModel.read", "hydromt_sfincs.SfincsModel.read_config", "hydromt_sfincs.SfincsModel.read_forcing", "hydromt_sfincs.SfincsModel.read_results", "hydromt_sfincs.SfincsModel.read_states", "hydromt_sfincs.SfincsModel.read_staticgeoms", "hydromt_sfincs.SfincsModel.read_staticmaps", "hydromt_sfincs.SfincsModel.region", "hydromt_sfincs.SfincsModel.res", "hydromt_sfincs.SfincsModel.results", "hydromt_sfincs.SfincsModel.root", "hydromt_sfincs.SfincsModel.set_config", "hydromt_sfincs.SfincsModel.set_forcing", "hydromt_sfincs.SfincsModel.set_forcing_1d", "hydromt_sfincs.SfincsModel.set_results", "hydromt_sfincs.SfincsModel.set_root", "hydromt_sfincs.SfincsModel.set_states", "hydromt_sfincs.SfincsModel.set_staticgeoms", "hydromt_sfincs.SfincsModel.set_staticmaps", "hydromt_sfincs.SfincsModel.setup_bounds", "hydromt_sfincs.SfincsModel.setup_cn_infiltration", "hydromt_sfincs.SfincsModel.setup_config", "hydromt_sfincs.SfincsModel.setup_gauges", "hydromt_sfincs.SfincsModel.setup_h_forcing", "hydromt_sfincs.SfincsModel.setup_manning_roughness", "hydromt_sfincs.SfincsModel.setup_mask", "hydromt_sfincs.SfincsModel.setup_merge_topobathy", "hydromt_sfincs.SfincsModel.setup_p_forcing", "hydromt_sfincs.SfincsModel.setup_p_forcing_from_grid", "hydromt_sfincs.SfincsModel.setup_q_forcing", "hydromt_sfincs.SfincsModel.setup_q_forcing_from_grid", "hydromt_sfincs.SfincsModel.setup_river_bathymetry", "hydromt_sfincs.SfincsModel.setup_river_hydrography", "hydromt_sfincs.SfincsModel.setup_river_inflow", "hydromt_sfincs.SfincsModel.setup_river_outflow", "hydromt_sfincs.SfincsModel.setup_structures", "hydromt_sfincs.SfincsModel.setup_topobathy", "hydromt_sfincs.SfincsModel.states", "hydromt_sfincs.SfincsModel.staticgeoms", "hydromt_sfincs.SfincsModel.staticmaps", "hydromt_sfincs.SfincsModel.update", "hydromt_sfincs.SfincsModel.update_spatial_attrs", "hydromt_sfincs.SfincsModel.write", "hydromt_sfincs.SfincsModel.write_config", "hydromt_sfincs.SfincsModel.write_forcing", "hydromt_sfincs.SfincsModel.write_states", "hydromt_sfincs.SfincsModel.write_staticgeoms", "hydromt_sfincs.SfincsModel.write_staticmaps", "hydromt_sfincs.plots.plot_basemap", "hydromt_sfincs.plots.plot_forcing", "hydromt_sfincs.read_ascii_map", "hydromt_sfincs.read_binary_map", "hydromt_sfincs.read_binary_map_index", "hydromt_sfincs.read_inp", "hydromt_sfincs.read_sfincs_his_results", "hydromt_sfincs.read_sfincs_map_results", "hydromt_sfincs.read_structures", "hydromt_sfincs.read_timeseries", "hydromt_sfincs.read_xy", "hydromt_sfincs.utils.gdf2structures", "hydromt_sfincs.utils.get_spatial_attrs", "hydromt_sfincs.utils.mask_bounds", "hydromt_sfincs.utils.mask_topobathy", "hydromt_sfincs.utils.parse_datetime", "hydromt_sfincs.utils.structures2gdf", "hydromt_sfincs.workflows.burn_river_zb", "hydromt_sfincs.workflows.cn_to_s", "hydromt_sfincs.workflows.get_rivbank_dz", "hydromt_sfincs.workflows.get_river_bathymetry", "hydromt_sfincs.workflows.landuse", "hydromt_sfincs.workflows.merge_topobathy", "hydromt_sfincs.workflows.river_boundary_points", "hydromt_sfincs.workflows.snap_discharge", "hydromt_sfincs.write_ascii_map", "hydromt_sfincs.write_binary_map", "hydromt_sfincs.write_binary_map_index", "hydromt_sfincs.write_inp", "hydromt_sfincs.write_structures", "hydromt_sfincs.write_timeseries", "hydromt_sfincs.write_xy", "API reference", "What\u2019s new", "Contributors", "Developer\u2019s environment", "Developments", "Roadmap", "Examples", "Frequently asked questions", "Installation Guide", "Getting started", "HydroMT-SFINCS: SFINCS plugin for HydroMT", "User guide", "Postprocessing and visualization", "Model methods and components", "Building or update a model", "Setting up a coastal model", "Setting up a riverine model"], "terms": {"thi": [0, 1, 2, 3, 5, 6, 7, 9, 13, 36, 37, 38, 42, 44, 45, 48, 50, 51, 52, 53, 55, 57, 59, 62, 89, 100, 105, 106, 107, 109, 110, 112, 113, 115], "folder": [0, 1, 2, 3, 4, 7, 8, 24, 29, 34, 59, 88, 100, 102, 105], "contain": [0, 1, 3, 4, 5, 7, 8, 9, 32, 59, 78, 79, 87, 88, 102, 105, 106, 112], "sever": [0, 1, 3, 7, 33, 80, 81, 105, 111, 112], "ipython": [0, 5, 105], "notebook": [0, 1, 3, 4, 5, 7, 100, 105], "exampl": [0, 1, 2, 3, 4, 7, 13, 30, 96, 100, 108, 114, 115], "hydromt": [0, 2, 5, 6, 7, 22, 41, 42, 46, 48, 49, 73, 74, 88, 100, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115], "sfinc": [0, 8, 15, 21, 23, 24, 25, 38, 44, 49, 50, 51, 52, 53, 60, 62, 66, 69, 70, 72, 73, 74, 76, 77, 79, 82, 92, 93, 94, 95, 96, 97, 100, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115], "To": [0, 1, 2, 3, 105, 107, 109, 114, 115], "run": [0, 3, 7, 9, 52, 53, 59, 100, 105, 109, 113], "start": [0, 1, 2, 3, 4, 14, 100, 105, 107], "binder": [0, 4, 105], "badg": [0, 105, 109], "abov": [0, 1, 2, 3, 7, 44, 81, 86, 100, 105, 107], "your": [0, 1, 2, 3, 4, 5, 7, 9, 105, 109], "local": [0, 1, 3, 4, 7, 42, 50, 51, 87, 91, 105, 110], "machin": [0, 1, 105], "creat": [0, 1, 2, 3, 6, 17, 34, 44, 67, 102, 105, 107, 112], "conda": [0, 5, 102, 105, 107, 109], "environ": [0, 3, 100, 105, 109], "base": [0, 1, 2, 6, 7, 9, 42, 43, 44, 45, 47, 48, 49, 50, 53, 59, 60, 63, 64, 65, 81, 86, 87, 88, 89, 90, 100, 102, 105, 109, 110, 112, 115], "yml": [0, 1, 3, 6, 7, 42, 46, 48, 102, 105, 113], "root": [0, 1, 2, 3, 5, 6, 7, 8, 13, 34, 62, 100, 105], "repositori": [0, 3, 7, 102, 105], "jupyt": [0, 1, 4, 105], "follow": [0, 1, 2, 3, 6, 7, 79, 102, 105, 109, 112], "step": [0, 4, 5, 102, 105, 109], "from": [0, 4, 5, 6, 7, 8, 9, 19, 20, 22, 23, 25, 37, 38, 39, 42, 43, 44, 45, 47, 48, 50, 51, 54, 59, 62, 66, 74, 76, 78, 79, 80, 81, 82, 84, 86, 89, 95, 97, 100, 102, 105, 107, 109, 110, 112, 113, 114, 115], "env": [0, 1, 3, 102, 105], "f": [0, 1, 3, 4, 5, 6, 7, 102, 105], "activ": [0, 1, 3, 4, 38, 44, 53, 80, 81, 102, 105, 107, 109], "pip": [0, 7, 102, 105, 107], "instal": [0, 5, 7, 102, 105, 108, 109], "hydromt_sfinc": [0, 1, 2, 3, 5, 6, 7, 102, 105, 107], "For": [1, 2, 3, 4, 5, 6, 7, 17, 18, 32, 54, 67, 68, 70, 78, 86, 93, 96, 105, 106, 107, 109], "interact": [1, 2, 3, 4, 5, 6, 7, 105], "onlin": [1, 2, 3, 4, 5, 6, 7, 109], "version": [1, 2, 3, 4, 5, 6, 7, 27, 36, 57, 58, 100], "click": [1, 2, 3, 4, 5, 6, 7, 112], "here": [1, 2, 3, 4, 5, 6, 7, 104, 107], "demonstr": [1, 3, 4, 7], "how": [1, 2, 3, 4, 5, 6, 7, 103, 106], "prepar": [1, 3, 4, 7, 88, 112], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 38, 42, 44, 45, 47, 48, 49, 50, 53, 54, 55, 59, 64, 76, 78, 79, 80, 81, 87, 88, 92, 93, 94, 97, 100, 109, 111, 112, 115], "doe": [1, 4, 5, 7, 91, 109], "code": [1, 3, 4, 7, 23, 25, 55, 102, 109, 115], "execut": [1, 3, 4, 7, 9, 107, 115], "we": [1, 2, 3, 4, 5, 6, 7, 100, 107, 109, 114], "schemat": [1, 2, 7, 19, 59, 61, 109, 110, 112, 113, 114, 115], "featur": [1, 86, 103], "onli": [1, 2, 3, 7, 9, 17, 32, 38, 42, 44, 47, 48, 49, 50, 52, 54, 67, 80, 81, 91, 100, 115], "simul": [1, 4, 109], "flood": [1, 5, 6, 109, 114, 115], "do": [1, 4, 7, 100, 107], "consid": [1, 7, 74], "ani": [1, 5, 7, 13, 44, 55, 80, 81, 109], "riverin": [1, 2, 105, 113], "merit": 1, "hydro": [1, 109], "dataset": [1, 2, 3, 6, 7, 12, 17, 28, 31, 33, 35, 37, 42, 45, 48, 49, 55, 56, 58, 67, 73, 74, 87, 88, 89, 91, 100, 109, 112, 115], "elev": [1, 2, 3, 38, 42, 43, 44, 45, 50, 51, 54, 55, 78, 80, 81, 84, 86, 87, 89, 100, 114], "includ": [1, 2, 3, 6, 7, 9, 21, 24, 25, 38, 44, 59, 66, 80, 81], "boundari": [1, 2, 3, 4, 17, 38, 42, 44, 48, 49, 50, 52, 53, 67, 80, 90, 91, 100, 114, 115], "condit": [1, 17, 38, 39, 44, 48, 49, 67, 114, 115], "global": [1, 6, 7, 100, 109, 110, 114, 115], "tide": [1, 7], "surg": [1, 7], "impos": 1, "number": [1, 3, 4, 39, 45, 49, 85, 89, 91, 100, 114, 115], "point": [1, 2, 3, 4, 5, 6, 7, 32, 41, 42, 48, 49, 50, 52, 53, 73, 77, 90, 91, 98, 100, 109, 115], "where": [1, 2, 4, 5, 6, 7, 9, 45, 52, 53, 59, 89, 90, 93, 94, 102, 114], "forc": [1, 3, 18, 21, 31, 32, 33, 35, 42, 46, 47, 48, 49, 52, 63, 68, 100], "expect": [1, 49], "all": [1, 2, 3, 4, 9, 17, 37, 38, 42, 44, 59, 65, 66, 67, 90, 100, 115], "line": [1, 3, 4, 5, 7, 44, 50, 54, 80, 81, 90, 106, 109, 112], "which": [1, 2, 3, 4, 7, 44, 48, 50, 51, 55, 62, 78, 109, 112, 113], "ar": [1, 2, 3, 4, 5, 6, 7, 9, 21, 24, 25, 32, 38, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 59, 62, 63, 65, 66, 78, 80, 81, 86, 88, 89, 90, 96, 100, 102, 107, 109, 112, 113], "command": [1, 3, 4, 7, 106, 107, 109, 112], "within": [1, 2, 3, 4, 7, 44, 45, 48, 49, 50, 52, 53, 80, 81, 87, 89, 90, 91, 100, 115], "except": [1, 2, 4], "lab": [1, 4], "log": [1, 3, 7], "messag": [1, 3, 4, 7], "shown": [1, 3, 4, 7, 114, 115], "after": [1, 3, 4, 9, 38, 44, 45, 48, 52, 53, 55, 59, 80, 81, 89, 107], "you": [1, 2, 3, 4, 7, 100, 102, 103, 106, 107, 109, 112], "can": [1, 2, 3, 4, 5, 6, 7, 9, 13, 30, 33, 42, 44, 48, 59, 100, 102, 106, 107, 109, 110, 112, 113, 114, 115], "also": [1, 2, 3, 5, 6, 7, 38, 44, 80, 81, 100], "copi": [1, 3, 7, 100], "past": [1, 3], "shell": [1, 3], "more": [1, 2, 3, 7, 92, 106, 107, 109, 113], "direct": [1, 2, 3, 50, 51, 84, 87, 90, 115], "feedback": [1, 3, 7], "let": [1, 2, 3, 7], "u": [1, 4, 7], "see": [1, 2, 3, 4, 5, 6, 7, 9, 38, 41, 42, 46, 48, 49, 92, 100, 107, 109, 112, 113, 114], "what": [1, 4], "provid": [1, 3, 5, 7, 23, 25, 42, 47, 49, 50, 51, 54, 88, 89, 91, 103, 109, 111, 112, 113, 114, 115], "1": [1, 2, 3, 4, 5, 6, 7, 13, 30, 38, 43, 44, 49, 50, 52, 87, 91, 96, 109, 112, 115], "help": [1, 3, 7, 112], "usag": [1, 3, 7], "option": [1, 3, 7, 8, 9, 13, 17, 20, 22, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 59, 62, 67, 70, 73, 74, 77, 79, 80, 81, 83, 84, 86, 87, 89, 90, 91, 92, 93, 96, 97, 100, 113], "arg": [1, 13, 30], "show": [1, 2, 3, 5, 6, 7], "exit": [1, 3, 7], "print": [1, 3, 4, 6, 7], "availab": 1, "plugin": [1, 3, 7, 102, 104, 110, 111, 112, 113], "clip": [1, 3, 7, 42, 48], "updat": [1, 2, 3, 5, 6, 9, 30, 32, 38, 40, 44, 45, 50, 51, 60, 100, 105, 109, 110, 112], "With": [1, 3, 110, 112], "flag": [1, 3], "ask": 1, "recogn": [1, 2, 3], "should": [1, 2, 3, 4, 7, 32, 55, 78, 79, 91, 92, 93, 94, 100, 102, 113], "mention": [1, 21, 23, 24, 25], "2": [1, 2, 3, 4, 5, 6, 7, 13, 17, 30, 38, 42, 44, 67, 114], "0": [1, 2, 3, 4, 5, 6, 7, 38, 42, 43, 44, 45, 49, 50, 52, 53, 54, 70, 74, 79, 81, 86, 87, 89, 90, 91, 93, 94, 96, 114, 115], "dev0": [1, 3, 7], "gener": [1, 2, 3, 7, 88, 106], "6": [1, 2, 3, 4, 5, 6, 7, 54, 96], "dev": [1, 3, 7], "grid_model": [1, 3, 7], "lumped_model": [1, 3, 7], "network_model": [1, 3, 7], "It": [1, 4, 109], "look": [1, 2, 3, 4, 7], "like": [1, 43], "have": [1, 2, 3, 4, 6, 7, 37, 49, 84, 91, 93, 94, 100, 102, 115], "want": [1, 7, 102, 114], "work": [1, 3, 7, 51, 106, 112, 113], "call": [1, 4, 8, 55, 107], "avail": [1, 2, 3, 4, 7, 17, 49, 67, 107, 109, 110, 112, 113], "3": [1, 2, 3, 4, 5, 6, 7, 17, 38, 43, 44, 53, 67, 100], "model_root": [1, 3, 7, 17, 18, 114, 115], "region": [1, 3, 6, 7, 9, 11, 17, 38, 42, 44, 55, 67, 80, 81, 89, 90, 100, 112, 114, 115], "wflow": [1, 3, 7, 113], "subbasin": [1, 3], "coordin": [1, 2, 3, 5, 6, 7, 11, 15, 23, 25, 37, 42, 47, 48, 49, 55, 73, 74, 77, 78, 79, 83], "snap": [1, 3, 49, 91, 100], "cell": [1, 2, 3, 5, 38, 42, 43, 44, 45, 49, 50, 51, 52, 53, 74, 80, 81, 84, 86, 87, 89, 90, 91, 93, 94, 100, 114, 115], "stream": [1, 3, 115], "order": [1, 3, 5, 6, 9, 59, 112, 113], "gt": [1, 2, 3, 4, 5], "4": [1, 2, 3, 4, 5, 6, 7, 38, 44, 80, 81, 100], "path": [1, 3, 4, 5, 6, 7, 8, 13, 17, 18, 29, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 59, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 88, 92, 93, 94, 95, 96, 97, 98, 113, 114, 115], "34": [1, 2, 3, 4, 7], "39": [1, 2, 3, 4, 6, 7], "7": [1, 2, 3, 4, 5, 6, 7, 97], "24": [1, 3, 4], "62": [1, 3], "09": [1, 3], "strord": [1, 3], "wflow_config": [1, 3, 7], "ini": [1, 3, 7, 9, 59, 113, 114, 115], "d": [1, 2, 3, 5, 7, 13, 30, 76, 82, 87, 90, 91, 97, 109, 113], "deltares_data": [1, 3, 7, 8], "data_catalog": [1, 3, 6, 7, 42, 46, 48], "v": [1, 3, 4, 7], "bbox": [1, 3, 113, 114, 115], "6891": [1, 3], "52": [1, 3], "9750": [1, 3], "9576": [1, 3], "53": [1, 3], "1994": [1, 3], "sfincs_config": [1, 3], "r": [1, 2, 3, 4, 5, 6, 7, 8, 34], "re": [1, 2, 3, 9, 55], "float": [1, 3, 9, 38, 42, 43, 44, 45, 47, 49, 50, 52, 53, 54, 55, 70, 74, 78, 80, 81, 84, 86, 87, 89, 90, 91], "resolut": [1, 3, 7, 9, 27, 47, 51, 55, 88, 109, 114], "src": [1, 2, 3, 4, 6, 17, 24, 32, 48, 49, 52, 65, 67, 100, 112], "deprec": [1, 3, 27, 36, 57, 58], "opt": [1, 3, 7, 8, 9, 59], "text": [1, 3, 6, 7, 100], "method": [1, 2, 3, 5, 6, 7, 8, 9, 17, 36, 38, 44, 45, 47, 48, 49, 50, 52, 53, 55, 59, 67, 87, 89, 100, 114, 115], "specif": [1, 2, 3, 7, 9, 59, 109, 112], "keyword": [1, 3, 7], "argument": [1, 3, 7, 9, 33, 38, 59, 100, 114, 115], "document": [1, 3, 7, 107, 109, 112, 113], "inform": [1, 3, 4, 7, 103, 107, 109], "about": [1, 3, 7, 107, 109, 113], "config": [1, 2, 3, 7, 8, 13, 15, 20, 30, 32, 40, 42, 48, 60, 62, 63, 64, 65, 66, 79, 106, 112], "configur": [1, 7, 9, 10, 19, 21, 23, 24, 25, 59, 61, 79, 112], "file": [1, 3, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 34, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 59, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 88, 92, 93, 94, 95, 96, 97, 98, 100, 102, 112, 114, 115], "implement": [1, 3, 7, 100, 109], "yaml": [1, 3, 7, 113], "catalog": [1, 3, 6, 7, 113], "OR": [1, 3, 7], "name": [1, 2, 3, 7, 9, 17, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 59, 67, 91, 96], "predefin": [1, 3, 7], "dd": [1, 3, 7], "deltar": [1, 3, 7, 102, 109], "shortcut": [1, 3, 7], "add": [1, 3, 5, 6, 17, 31, 33, 35, 37, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67], "q": [1, 3, 7, 86, 100, 114, 115], "quiet": [1, 3, 7], "decreas": [1, 3, 7], "verbos": [1, 3, 7], "increas": [1, 3, 7], "": [1, 2, 3, 5, 6, 7, 13, 30, 43, 44, 48, 49, 50, 76, 80, 81, 82, 85, 87, 92, 93, 94, 97, 109], "try": 1, "entir": [1, 7], "just": 1, "awesom": 1, "In": [1, 2, 3, 4, 34, 100, 107, 113, 115], "section": [1, 7, 113, 114, 115], "bound": [1, 2, 3, 38, 44, 80, 81, 114, 115], "box": [1, 3, 114, 115], "veri": [1, 7], "intuit": 1, "exactli": [1, 2], "store": [1, 2, 31, 33, 35], "texel_sfinc": 1, "68": 1, "97": [1, 3], "96": 1, "20": [1, 2, 4, 86, 96, 115], "2022": [1, 3, 4, 7, 109], "11": [1, 2, 3, 4, 5, 6, 7, 17, 67], "29": [1, 3, 7], "04": [1, 2, 3, 7], "12": [1, 2, 3, 4, 7], "35": [1, 4], "002": 1, "depfil": [1, 2, 3, 112], "dep": [1, 2, 3, 4, 7, 17, 25, 42, 45, 50, 51, 54, 55, 67, 100], "found": [1, 2, 3, 6, 13, 20, 50, 62], "mskfile": [1, 2, 3, 112], "msk": [1, 2, 3, 4, 6, 7, 17, 25, 38, 42, 44, 53, 67, 70, 93, 94, 100], "indexfil": [1, 2, 3], "ind": [1, 2, 3, 4, 7, 70, 71], "might": [1, 4, 109], "taken": [1, 2, 50, 66, 78], "few": [1, 7], "second": [1, 9, 38, 42, 44, 45, 59, 76, 80, 81, 89, 97, 115], "miser": 1, "crash": 1, "happen": 1, "wa": [1, 100], "did": [1, 3], "find": [1, 2, 109], "therefor": [1, 109], "automat": 1, "download": [1, 3, 6, 102], "sampl": [1, 7], "now": [1, 3, 7, 100], "home": [1, 3, 6, 7], "under": [1, 7], "hydromt_data": [1, 3, 6, 7], "tri": 1, "texel": 1, "ala": 1, "cover": [1, 3, 43, 114, 115], "area": [1, 2, 3, 7, 26, 38, 44, 45, 49, 50, 51, 52, 53, 80, 81, 87, 90, 91, 100, 115], "outsid": [1, 38, 44, 45, 89], "extent": [1, 6, 45], "setup": [1, 4, 5, 7, 8, 9, 39, 41, 42, 43, 46, 47, 48, 49, 51, 52, 53, 54, 55, 59, 100, 114, 115], "own": [1, 2], "connect": [1, 3, 38, 44, 50, 80, 81, 84, 100], "network": 1, "adapt": 1, "fit": [1, 49, 91], "piav": [1, 3], "basin": [1, 3], "its": [1, 3, 44, 80, 81, 109, 112, 113], "surround": [1, 44, 45, 81, 100], "itali": [1, 6], "A": [1, 100, 109, 114, 115], "good": 1, "place": 1, "csv": [1, 2, 3, 7, 42, 43, 46, 48, 114, 115], "format": [1, 4, 5, 6, 22, 49, 76, 82, 92, 96, 97, 98, 100, 109, 110], "http": [1, 6, 102, 109], "boundingbox": 1, "klokantech": 1, "com": [1, 6, 101, 102], "vv": [1, 3, 113, 114, 115], "extra": [1, 3, 7], "5": [1, 2, 3, 4, 5, 6, 7, 42, 96, 100, 114, 115], "venice_sfinc": [1, 7], "05": [1, 2, 49, 91], "45": [1, 2, 3, 4, 7], "30": [1, 4, 17, 67], "85": [1, 4], "65": [1, 3, 4], "36": [1, 3], "882": 1, "debug": [1, 3, 7], "write": [1, 3, 7, 8, 9, 20, 34, 53, 59, 62, 63, 64, 65, 66, 92, 93, 94, 95, 96, 97, 98, 100, 112], "new": [1, 2, 3, 7, 13, 30, 31, 33, 35, 37, 38, 41, 45, 53, 54, 89, 102, 103, 114], "runner": [1, 3, 6, 7], "doc": [1, 3, 7], "_exampl": [1, 3, 7], "info": [1, 2, 3, 4, 7, 113], "main": [1, 3, 7], "instanc": [1, 2, 3, 7, 17, 67, 109], "user": [1, 3, 7, 108, 113], "set": [1, 2, 3, 6, 7, 9, 32, 38, 42, 44, 46, 48, 49, 50, 59, 81, 100, 109, 110, 113], "896": 1, "model_api": [1, 3, 7], "initi": [1, 2, 3, 4, 7, 34, 38, 44, 80, 81, 114, 115], "v0": [1, 3, 6, 7], "setup_region": [1, 3, 55, 100, 112, 113, 115], "897": 1, "hydrography_fn": [1, 3, 51, 52, 53, 100, 115], "merit_hydro": [1, 3, 52, 53, 114, 115], "basin_index_fn": [1, 3, 115], "merit_hydro_index": [1, 3, 115], "basin_mask": [1, 3], "pars": [1, 3, 7, 9, 14, 20, 59, 72, 73, 74, 76, 77, 82], "kind": [1, 3], "901": 1, "902": 1, "default": [1, 2, 3, 8, 9, 13, 17, 20, 22, 31, 33, 35, 38, 39, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 59, 67, 70, 73, 74, 80, 81, 82, 84, 86, 87, 89, 90, 91, 92, 93, 97, 98, 100, 110], "read": [1, 3, 4, 7, 8, 20, 21, 22, 23, 24, 25, 34, 69, 70, 71, 72, 73, 74, 75, 76, 77, 100, 112, 114, 115], "usr": [1, 3], "share": [1, 3], "miniconda": [1, 3], "lib": [1, 3], "python3": [1, 3], "9": [1, 2, 3, 4, 7], "site": [1, 3], "packag": [1, 3, 5, 107, 109, 110, 112], "inp": [1, 2, 3, 4, 6, 7, 8, 15, 21, 23, 24, 25, 60, 72, 79, 95, 100, 112], "903": 1, "without": [1, 3, 39], "mean": [1, 3, 4, 7, 42, 47, 114], "e": [1, 2, 3, 7, 30, 38, 42, 44, 45, 48, 49, 50, 51, 53, 74, 80, 81, 92, 93, 94, 102, 112, 115], "output": [1, 3, 7, 17, 18, 47, 70, 73, 74, 76, 93, 94, 96, 97, 98, 110, 112, 114], "full": [1, 2, 3, 9, 59, 112], "given": [1, 3, 13, 17, 18, 30, 32, 44, 81, 97], "describ": [1, 3, 38, 44, 75, 78, 80, 81, 83, 96, 114], "give": [1, 3, 7], "some": [1, 2, 3, 7, 106, 107], "displai": [1, 3, 5, 7], "screen": [1, 3, 7], "note": [1, 2, 3, 6, 13, 27, 38, 42, 44, 45, 46, 48, 50, 51, 52, 53, 55, 58, 79, 80, 81, 89, 92, 93, 94, 107, 112, 113, 115], "As": [1, 3, 115], "specifi": [1, 3], "ha": [1, 2, 3, 4, 7, 39, 49, 54, 89, 91, 100, 109, 114], "been": [1, 2, 3, 6, 49, 100, 109], "need": [1, 2, 3, 7], "newli": 1, "gi": [1, 2, 3, 6, 7, 24, 65, 66, 100, 110], "geometri": [1, 2, 3, 17, 24, 26, 38, 41, 44, 50, 52, 53, 54, 67, 78, 80, 81, 91, 98, 114, 115], "save": [1, 2, 3, 5, 6, 17, 18, 21, 22, 23, 24, 25, 100], "geojson": [1, 3, 8, 24, 65, 115], "l": [1, 2, 7], "mani": [1, 100, 109], "instead": [1, 3, 23, 25, 41, 54, 100], "If": [1, 2, 3, 7, 9, 13, 17, 18, 20, 24, 31, 32, 33, 35, 38, 41, 42, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 59, 65, 66, 67, 80, 81, 84, 87, 89, 90, 102, 109], "don": 1, "t": [1, 2, 5, 32, 109], "done": [1, 2, 4, 34], "determin": [1, 3, 7, 90, 100, 115], "compon": [1, 2, 3, 5, 7, 43, 51, 55, 59, 100, 105, 110, 113], "typic": [1, 2, 91, 109, 114, 115], "up": [1, 109, 110], "each": [1, 3, 5, 7, 31, 33, 35, 51, 53, 86, 113, 114, 115], "setup_": [1, 9, 59], "refer": [1, 3, 7, 8, 11, 15, 23, 25, 42, 45, 50, 55, 73, 74, 77, 79, 83, 87, 100, 108, 109], "end": [1, 2, 3, 9, 14, 59, 115], "_fn": [1, 3], "sourc": [1, 2, 3, 6, 8, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 32, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 109, 113, 114, 115], "case": [1, 2, 4, 51, 55], "user_root": [1, 3], "fn_ini": [1, 3, 4, 7], "sfincs_coast": [1, 7, 113, 114], "open": [1, 2, 3, 7, 8, 17, 52, 53, 67, 100, 109], "txt": [1, 3, 4, 7], "setup_config": [1, 3, 7, 112, 114, 115], "tref": [1, 2, 3, 7, 76, 97, 114, 115], "20100201": [1, 7, 114], "000000": [1, 2, 3, 7, 114, 115], "tstart": [1, 2, 3, 7, 14, 42, 48, 114, 115], "tstop": [1, 2, 3, 7, 14, 42, 48, 114, 115], "20100210": [1, 7, 114], "alpha": [1, 2, 3, 114, 115], "zsini": [1, 2, 3, 23, 64, 114, 115], "setup_topobathi": [1, 3, 100, 112, 113, 114, 115], "topobathy_fn": [1, 3, 45, 55, 114, 115], "topobathi": [1, 3, 45, 55, 89, 114, 115], "basemap": [1, 3, 17, 55, 67, 100, 114, 115], "elevtn": [1, 3, 45, 87, 114, 115], "cr": [1, 2, 3, 7, 15, 22, 23, 25, 47, 51, 55, 73, 74, 77, 79, 83, 114, 115], "utm": [1, 2, 3, 55, 114], "must": [1, 2, 37, 54, 55, 114], "zone": [1, 2, 3, 55, 114], "setup_merge_topobathi": [1, 100, 112, 114], "gebco": [1, 114], "bathymetri": [1, 3, 45, 50, 51, 55, 84, 87, 89, 100, 112, 114, 115], "mask_fn": [1, 38, 44, 45, 100, 114], "osm_coastlin": [1, 114], "sea": [1, 43, 114], "polygon": [1, 38, 44, 45, 90, 100, 114], "offset_fn": [1, 7, 42, 45, 114], "dtu10mdt_egm96": [1, 7, 114], "dynam": [1, 7, 42, 112, 114], "topographi": [1, 7, 42, 100, 112, 114], "account": [1, 114], "differ": [1, 6, 7, 42, 45, 51, 91, 100, 107, 114], "vertic": [1, 38, 42, 44, 45, 80, 81, 89, 100, 114], "datum": [1, 2, 45, 89, 114], "between": [1, 2, 3, 5, 7, 42, 45, 49, 91, 100, 107, 114], "current": [1, 2, 7, 45, 59, 114], "merge_method": [1, 45, 89, 114], "valid": [1, 2, 44, 45, 50, 81, 86, 89, 90, 100, 114], "invalid": [1, 45, 89, 93, 94, 114], "nodata": [1, 2, 3, 6, 44, 45, 74, 85, 89, 114], "valu": [1, 2, 3, 5, 6, 8, 9, 13, 30, 32, 42, 43, 44, 45, 49, 50, 54, 59, 70, 74, 86, 89, 92, 93, 94, 97, 100, 110, 114, 115], "merge_buff": [1, 45, 89, 114], "buffer": [1, 3, 6, 7, 38, 42, 45, 50, 52, 89, 114], "fill": [1, 50, 100, 114], "linear": [1, 45, 89, 114], "interpol": [1, 3, 45, 55, 89, 100, 114], "setup_mask": [1, 2, 38, 52, 53, 100, 112, 114], "elv_min": [1, 38, 44, 45, 80, 81, 89, 114], "minimum": [1, 3, 6, 38, 44, 45, 50, 52, 53, 74, 80, 81, 86, 87, 89, 90, 114, 115], "setup_cn_infiltr": [1, 3, 100, 112, 114, 115], "cn_fn": [1, 3, 39, 114, 115], "gcn250": [1, 3, 39, 114, 115], "curv": [1, 3, 39, 85, 100, 114, 115], "antecedent_runoff_condit": [1, 3, 39, 114, 115], "avg": [1, 3, 39, 114, 115], "dry": [1, 3, 39, 114, 115], "wet": [1, 3, 39, 114, 115], "setup_manning_rough": [1, 3, 100, 112, 114, 115], "lulc_fn": [1, 3, 7, 43, 114, 115], "vito": [1, 3, 7, 114, 115], "land": [1, 3, 43, 114, 115], "map_fn": [1, 3, 43, 114, 115], "none": [1, 2, 3, 5, 6, 7, 8, 9, 13, 15, 17, 18, 20, 23, 25, 31, 32, 33, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 67, 73, 74, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 114, 115], "map": [1, 2, 3, 5, 6, 7, 16, 17, 37, 38, 39, 42, 43, 44, 45, 50, 51, 52, 53, 55, 58, 64, 66, 67, 69, 70, 71, 74, 86, 87, 88, 92, 93, 94, 100, 112, 114, 115], "lulc": [1, 3, 43, 88, 114, 115], "_map": [1, 2, 3, 114, 115], "setup_bound": [1, 2, 44, 53, 100, 112, 114], "btype": [1, 38, 90, 114], "waterlevel": [1, 2, 7, 17, 23, 32, 38, 42, 44, 52, 53, 64, 67, 112, 114, 115], "type": [1, 2, 7, 13, 17, 18, 32, 38, 54, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 93, 96, 114], "outflow": [1, 2, 3, 38, 44, 53, 90, 100, 114, 115], "setup_h_forc": [1, 7, 112, 114], "geodataset_fn": [1, 3, 7, 42, 48, 114, 115], "gtsm_locat": [1, 114], "gaug": [1, 3, 5, 6, 7, 41, 42, 48, 49, 100, 114, 115], "locat": [1, 2, 3, 4, 5, 6, 7, 13, 32, 41, 42, 46, 48, 49, 52, 53, 90, 91, 100, 102, 113, 114, 115], "timeseries_fn": [1, 3, 7, 42, 48, 114, 115], "gtsm_timeseri": [1, 114], "time": [1, 2, 4, 5, 7, 14, 22, 32, 42, 46, 47, 48, 49, 73, 74, 76, 97, 109, 114], "seri": [1, 7, 42, 48, 49, 114], "1e4": [1, 114], "around": [1, 3, 7, 42, 45, 49, 52, 91, 100, 114], "select": [1, 7, 37, 38, 42, 44, 48, 80, 81, 100, 114], "setup_p_forcing_from_grid": [1, 7, 100, 112, 114], "precip_fn": [1, 7, 46, 47, 114], "era5_hourli": [1, 7, 114], "grid": [1, 2, 3, 4, 5, 6, 7, 39, 42, 43, 45, 47, 49, 51, 55, 58, 74, 88, 89, 91, 113, 114, 115], "precipit": [1, 2, 46, 47, 114, 115], "precip": [1, 2, 7, 21, 32, 46, 47, 63, 76, 97, 100, 114], "dst_re": [1, 7, 47, 114], "m": [1, 3, 5, 6, 7, 38, 42, 43, 45, 47, 50, 51, 52, 53, 55, 76, 82, 87, 90, 97, 114, 115], "aggreg": [1, 7, 47, 100, 114], "true": [1, 2, 3, 7, 8, 9, 13, 17, 31, 33, 35, 38, 41, 44, 47, 50, 51, 52, 53, 54, 59, 65, 66, 67, 80, 81, 84, 87, 89, 90, 114], "return": [1, 3, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 47, 56, 58, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 114], "spatial": [1, 2, 7, 18, 37, 42, 45, 46, 47, 68, 87, 89, 100, 109, 114], "uniform": [1, 7, 42, 45, 46, 47, 89, 100, 114], "forward": 1, "basic": 1, "requir": [1, 3, 5, 31, 32, 33, 34, 35, 39, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 78, 96, 100, 109, 115], "domain": [1, 2, 3, 38, 44, 47, 48, 50, 51, 52, 53, 80, 87, 90, 100, 115], "These": [1, 3, 4, 78, 103], "minim": [1, 30, 49, 53, 100, 115], "demand": 1, "static": [1, 7, 58, 105], "layer": [1, 2, 7, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 87], "mai": [1, 7, 50, 107], "alter": [1, 7], "suppli": [1, 78], "addit": [1, 3, 78, 114, 115], "merg": [1, 42, 45, 87, 89, 100], "depth": [1, 3, 50, 74, 87, 100, 105, 115], "potenti": [1, 39, 85], "maximum": [1, 38, 39, 44, 45, 49, 80, 81, 85, 87, 89, 91, 100, 105, 110], "soil": [1, 39, 85, 100], "retent": [1, 39, 85, 100], "man": [1, 2, 3, 7, 25, 43, 50, 87], "rough": [1, 3, 43, 100, 112], "consist": [1, 100, 110], "lookup": 1, "tabl": [1, 43, 88, 112], "relat": [1, 87, 88, 107], "class": [1, 8, 43, 88], "sec": 1, "edg": [1, 38, 74, 80, 100], "water": [1, 2, 4, 7, 42, 74, 100, 105, 109], "level": [1, 2, 3, 4, 5, 7, 9, 13, 30, 42, 50, 59, 84, 87, 100, 112], "data_sourc": [1, 113], "netcdf": [1, 2, 3, 7, 21, 42, 47, 48, 49, 63, 73, 74], "compound": [1, 109], "quit": 1, "essenti": 1, "150": 1, "8": [1, 2, 3, 4, 6, 7, 38, 44, 64, 80, 81, 92], "venice_sfincs_150": 1, "38": [1, 3, 7], "950": 1, "951": 1, "966": [1, 3], "967": 1, "971": 1, "972": 1, "973": 1, "reproj_method": [1, 3, 45, 55, 89], "bilinear": [1, 3, 45, 55, 89], "032": 1, "artifact_data": [1, 3, 6, 7, 8], "archiv": [1, 3, 7], "217": [1, 3], "tar": 1, "gz": 1, "510": 1, "unpack": 1, "40": [1, 3, 4, 109], "377": 1, "443": 1, "datacatalog": [1, 3, 7], "rasterdataset": [1, 2, 3, 6, 7, 47, 74], "raster": [1, 3, 6, 7, 45, 50, 51, 52, 53, 55, 84, 90], "variabl": [1, 2, 3, 5, 6, 17, 31, 33, 35, 37, 42, 45, 47, 48, 49, 50, 51, 67, 74, 87, 91, 100], "tif": [1, 2, 3, 6], "490": 1, "geom": [1, 2, 3, 6, 7, 17, 36, 41, 42, 48, 49, 50, 52, 53, 54, 57, 67, 87, 115], "282": 1, "863": 1, "668": 1, "561": 1, "elv_max": [1, 38, 44, 45, 80, 81, 89], "max_width": [1, 45, 89, 100], "offset_const": [1, 45], "interp_method": [1, 45, 89, 100], "565": 1, "584": [1, 3], "031": 1, "862": [1, 3], "667": 1, "601": 1, "geodatafram": [1, 2, 3, 7, 17, 26, 32, 36, 67, 77, 78, 80, 81, 83, 84, 86, 87, 90, 91, 98], "vector": [1, 2, 3, 7, 90], "gpkg": 1, "661": 1, "679": 1, "41": 1, "084": [1, 4], "1075": 1, "174": 1, "warn": [1, 3, 7, 8, 74, 79, 81, 84, 87, 88, 89, 90, 91], "replac": [1, 3, 7, 45, 58, 89, 100], "staticmap": [1, 2, 3, 5, 6, 7, 17, 25, 27, 37, 43, 44, 60, 66, 67, 100, 112], "176": 1, "include_mask_fn": [1, 38, 44, 100], "exclude_mask_fn": [1, 38, 44, 100], "fill_area": [1, 44, 81, 100], "10": [1, 2, 3, 4, 6, 7, 44, 52, 81, 96, 109, 115], "drop_area": [1, 44, 81, 100], "all_touch": [1, 44, 80, 81], "reset_mask": [1, 44, 100], "fals": [1, 2, 3, 5, 6, 7, 13, 17, 31, 33, 35, 38, 41, 44, 47, 50, 51, 52, 53, 54, 67, 80, 81], "188": 1, "util": [1, 2, 74, 100], "gap": [1, 45], "rang": [1, 2, 44, 45, 81, 89, 100, 109], "lt": [1, 2, 3, 5], "km2": [1, 3, 44, 49, 50, 51, 52, 53, 81, 87, 90, 91, 115], "190": 1, "mask": [1, 2, 3, 5, 38, 43, 44, 50, 52, 53, 80, 81, 84, 86, 87, 93, 94, 100], "79345": 1, "197": 1, "198": 1, "deriv": [1, 3, 42, 50, 51, 100], "208": 1, "209": 1, "229": [1, 7], "852": 1, "286": 1, "riv_man": [1, 3, 43], "03": [1, 3, 43], "lnd_man": [1, 3, 43], "sea_man": [1, 3, 43, 100], "288": [1, 3], "306": 1, "333": 1, "landus": [1, 3, 7, 43, 112], "n": [1, 2, 3, 5, 6, 43, 92, 93, 94, 100, 107], "averag": [1, 3, 4, 7], "resampl": [1, 3], "999": [1, 3], "413": 1, "mask_buff": [1, 38], "reset_bound": [1, 38, 100], "418": 1, "422": 1, "epsg": [1, 2, 3, 7, 23, 25, 55, 79, 115], "4326": [1, 2, 3, 7, 115], "454": 1, "455": 1, "456": 1, "10000": [1, 3, 50, 87], "467": 1, "geodataset": [1, 2, 7, 42, 48, 73, 100], "824": 1, "32633": [1, 2, 7], "278900": 1, "000": [1, 7], "5008550": 1, "342400": 1, "5059900": 1, "847": 1, "slice": 1, "dim": [1, 7, 32], "datetim": [1, 32, 76, 82, 97], "2010": 1, "853": 1, "bnd": [1, 2, 4, 7, 24, 32, 42, 65, 100, 112], "bz": [1, 2, 4, 7, 32, 42, 76, 97, 100], "854": 1, "nc": [1, 3, 4, 5, 6, 7, 22, 73, 74, 100, 112], "869": 1, "876": [1, 3], "895": 1, "convert": [1, 2, 45, 78, 83, 85, 89, 110], "unit": [1, 2, 5, 6, 7, 91], "942": 1, "binari": [1, 3, 25, 66, 70, 71, 93, 94, 109], "indic": [1, 3, 5, 6, 13, 30, 84], "sc": [1, 2, 3, 7, 25, 39], "42": 1, "004": 1, "subfold": [1, 3, 7, 24, 65, 66], "079": 1, "095": 1, "107": 1, "notic": [1, 100], "written": [1, 4, 65, 66, 100, 112], "One": 1, "input": [1, 3, 4, 7, 47, 51, 53, 55, 109], "defin": [1, 2, 3, 7, 38, 44, 50, 80, 81, 87, 90, 100, 113, 114, 115], "fn_inp": 1, "mmax": [1, 2, 79], "425": 1, "nmax": [1, 2, 79], "272": 1, "dx": [1, 2, 79], "dy": [1, 2, 79], "x0": [1, 2, 79], "268650": [1, 7], "y0": [1, 2, 79], "5018550": [1, 7], "rotat": [1, 2, 79], "inputformat": [1, 2], "bin": [1, 2], "outputformat": [1, 2], "net": [1, 2], "dtout": [1, 2, 5], "3600": [1, 2], "dthisout": [1, 2], "600": [1, 2], "dtmaxout": [1, 2, 3, 115], "86400": [1, 2, 3, 115], "advect": [1, 2], "huthresh": [1, 2], "theta": [1, 2], "min_lev_hmax": [1, 2], "scsfile": [1, 39, 100, 112], "manningfil": [1, 43, 112], "precipfil": [1, 46, 47, 112], "bzsfile": [1, 112], "bndfile": [1, 112], "closer": [1, 3], "python": [1, 3, 100, 105, 109, 112], "script": [1, 3], "load": [1, 2, 3], "modul": [1, 3], "matplotlib": [1, 3, 5, 6, 7], "inlin": [1, 3, 7], "import": [1, 2, 3, 4, 5, 6, 7, 112, 113], "sfincsmodel": [1, 2, 3, 5, 6, 7, 100, 114, 115], "memori": [1, 3], "lagoon": 1, "well": [1, 7, 24, 91], "repres": [1, 2, 7, 76], "better": [1, 100], "achiev": 1, "coastlin": 1, "shapefil": 1, "osm": [1, 67], "togeth": [1, 100], "mod": [1, 2, 3, 5, 6, 7], "mode": [1, 2, 3, 4, 5, 6, 7, 8, 20, 34], "plot_basemap": [1, 2, 3, 5, 6, 7], "figsiz": [1, 3, 5, 6, 7, 17, 67], "13": [1, 2, 3, 4, 7], "shade": [1, 17, 67], "figur": [1, 3, 5, 17, 18, 67], "size": [1, 3, 5, 17, 22, 49, 67, 73, 74, 91], "1300x700": 1, "ax": [1, 3, 5, 6, 17, 18, 67, 68], "geoaxessubplot": [1, 3], "titl": [1, 3], "center": [1, 3, 44, 80, 81], "xlabel": [1, 3], "x": [1, 2, 3, 5, 6, 7, 42, 47, 48, 49, 78, 96], "33n": [1, 2, 3], "ylabel": [1, 3], "y": [1, 2, 3, 5, 6, 7, 42, 47, 48, 49, 76, 78, 82, 96, 97, 100], "exist": [1, 2, 34, 38, 41, 44, 45, 53, 54, 59, 89, 105, 113], "g": [1, 2, 3, 7, 42, 48, 49, 115], "sfincs_update_model": 1, "ipynb": 1, "an": [2, 3, 4, 5, 6, 49, 100, 102, 105, 109, 112, 113, 114, 115], "geopanda": [2, 17, 32, 67, 78, 80, 81, 83, 84, 87, 90, 91, 98], "gpd": [2, 77, 84, 86, 87], "panda": [2, 7, 32, 97], "pd": [2, 7, 76, 97], "xarrai": [2, 5, 6, 7, 12, 28, 31, 32, 33, 35, 37, 56, 58, 81, 84, 87, 88, 89, 90, 91], "xr": [2, 5, 6, 17, 18, 67, 68, 73, 80, 81, 84, 86, 87, 89], "preprocess": 2, "manual": [2, 109], "same": [2, 7, 45, 51, 78, 91, 100, 107], "proper": 2, "metadata": [2, 3, 115], "project": [2, 55, 100, 109], "system": [2, 4, 11, 15, 23, 25, 55, 73, 74, 77, 79, 83, 109], "meter": [2, 3], "understand": 2, "i": [2, 3, 4, 5, 6, 7, 9, 13, 17, 18, 20, 22, 23, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 55, 59, 62, 64, 65, 66, 68, 74, 76, 79, 80, 81, 86, 87, 89, 91, 96, 97, 100, 107, 112, 113, 114, 115], "object": [2, 17, 18, 67, 68, 73, 74, 84, 87], "intern": 2, "us": [2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 33, 36, 37, 38, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 70, 80, 81, 87, 89, 90, 91, 93, 100, 102, 107, 110, 112, 113, 114, 115], "set_staticmap": 2, "dict": [2, 8, 9, 10, 12, 17, 18, 28, 56, 59, 67, 68, 72, 75, 78, 79, 83, 95, 96], "set_staticgeom": 2, "dataarrai": [2, 12, 18, 28, 31, 32, 33, 35, 37, 56, 68, 80, 81, 84, 86, 87, 88, 89, 90, 91], "geodataarrai": [2, 100], "xy": [2, 24, 32, 65, 77, 98], "set_forc": 2, "conveni": 2, "set_forcing_1d": [2, 100], "1d": [2, 32, 70, 71, 78, 100], "dict_valu": 2, "qinf": [2, 6, 25], "_geom": 2, "ob": [2, 3, 4, 5, 6, 7, 24, 41, 65], "weir": [2, 4, 24, 54, 65, 78, 96, 100], "thd": [2, 24, 54, 65, 96, 100, 112], "_forc": 2, "di": [2, 3, 4, 21, 32, 48, 49, 52, 63, 76, 97, 100], "netampr": [2, 7, 21, 63], "first": [2, 3, 4, 6, 7, 9, 42, 45, 46, 48, 52, 53, 59, 76, 89, 102, 113, 114, 115], "make": [2, 3, 5, 7, 102, 107, 109, 110], "directori": [2, 7, 100], "sake": 2, "export": 2, "practic": 2, "could": 2, "qgi": 2, "mod0": 2, "sfincs_riverin": [2, 3, 5, 6, 115], "write_rast": [2, 6], "gis_data": 2, "check": [2, 3, 7, 34, 82, 100], "content": [2, 7], "our": [2, 7, 107, 109], "meta": [2, 6, 49], "geotiff": [2, 8, 49, 66], "attribut": [2, 6, 8, 15, 21, 22, 23, 24, 25, 31, 33, 35, 50, 60, 63, 64, 65, 66, 79, 87, 112], "rio": 2, "blockys": 2, "264450": 2, "5073200": 2, "289150": 2, "5091850": 2, "colorinterp": 2, "grai": 2, "compress": [2, 6], "deflat": 2, "count": 2, "descript": [2, 9], "null": 2, "driver": [2, 6], "gtiff": 2, "dtype": [2, 70, 93], "float32": 2, "height": [2, 15, 79, 86], "373": 2, "index": [2, 32, 42, 43, 46, 48, 66, 70, 71, 76, 93, 94, 97], "interleav": 2, "band": 2, "lnglat": 2, "124685403666371": 2, "86010307727549": 2, "mask_flag": 2, "9999": [2, 70, 85], "50": [2, 3, 4, 49, 50, 87, 91, 115], "shape": [2, 15, 44, 70, 79, 80, 81], "494": 2, "tile": 2, "transform": [2, 15, 79], "width": [2, 3, 15, 45, 50, 52, 53, 79, 87, 89, 97, 100, 115], "singl": [2, 9, 59, 100, 109], "open_rast": 2, "ident": [2, 6, 13, 30, 37], "open_mfrast": 2, "basenam": [2, 17, 18], "da_dep": 2, "x27": 2, "dask": 2, "arrai": [2, 69, 70, 71, 78, 92, 93, 94], "getitem": 2, "chunksiz": [2, 22, 73, 74], "chunktyp": 2, "numpi": [2, 5, 6, 92], "ndarrai": [2, 69, 70, 71, 86, 92, 93, 94], "float64": 2, "645e": 2, "891e": 2, "092e": 2, "06": 2, "073e": 2, "spatial_ref": [2, 5], "int64": 2, "area_or_point": 2, "_fillvalu": 2, "0xarrai": 2, "373x": 2, "494dask": 2, "np": [2, 5, 6, 69, 70, 71, 86, 92, 93, 94], "chunk": [2, 22, 73, 74], "byte": 2, "719": 2, "77": 2, "kib": 2, "graph": 2, "float642": 2, "05arrai": 2, "264475": 2, "264525": 2, "264575": 2, "289025": 2, "289075": 2, "289125": 2, "float645": 2, "06arrai": 2, "5091825": 2, "5091775": 2, "5091725": 2, "5073325": 2, "5073275": 2, "5073225": 2, "crs_wkt": 2, "projc": 2, "quot": 2, "wg": 2, "84": 2, "geogc": 2, "wgs_1984": 2, "spheroid": 2, "6378137": 2, "298": 2, "257223563": 2, "author": 2, "7030": 2, "6326": 2, "primem": 2, "greenwich": 2, "8901": 2, "degre": 2, "0174532925199433": 2, "9122": 2, "transverse_merc": 2, "paramet": [2, 7, 8, 9, 13, 15, 17, 18, 22, 23, 25, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 62, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 110], "latitude_of_origin": 2, "central_meridian": 2, "15": [2, 3, 4], "scale_factor": 2, "9996": 2, "false_east": 2, "500000": 2, "false_north": 2, "metr": 2, "9001": 2, "axi": 2, "east": 2, "north": 2, "semi_major_axi": 2, "0semi_minor_axi": 2, "6356752": 2, "314245179inverse_flatten": 2, "257223563reference_ellipsoid_nam": 2, "84longitude_of_prime_meridian": 2, "0prime_meridian_nam": 2, "greenwichgeographic_crs_nam": 2, "84horizontal_datum_nam": 2, "world": [2, 109], "geodet": 2, "1984projected_crs_nam": 2, "33ngrid_mapping_nam": 2, "transverse_mercatorlatitude_of_projection_origin": 2, "0longitude_of_central_meridian": 2, "0false_east": 2, "0false_north": 2, "0scale_factor_at_central_meridian": 2, "9996spatial_ref": 2, "geotransform": 2, "xpandasindexpandasindex": 2, "float64index": 2, "264625": 2, "264675": 2, "264725": 2, "264775": 2, "264825": 2, "264875": 2, "264925": 2, "288675": 2, "288725": 2, "288775": 2, "288825": 2, "288875": 2, "288925": 2, "288975": 2, "length": [2, 3, 30, 50, 52, 53, 78, 87, 90, 115], "ypandasindexpandasindex": 2, "5091675": 2, "5091625": 2, "5091575": 2, "5091525": 2, "5091475": 2, "5091425": 2, "5091375": 2, "5073675": 2, "5073625": 2, "5073575": 2, "5073525": 2, "5073475": 2, "5073425": 2, "5073375": 2, "area_fillvalu": 2, "sfincs_from_pi": 2, "w": [2, 8, 34, 92, 93, 94], "still": 2, "empti": [2, 7], "len": 2, "otherwis": [2, 7, 49, 50, 87], "orient": [2, 6, 92, 93, 94, 100], "while": [2, 38, 44], "kept": [2, 44, 81, 100], "flip": 2, "compar": [2, 3, 7, 100], "dimens": [2, 5, 6, 22, 73, 74, 100], "datasetdimens": 2, "494y": 2, "373coordin": 2, "0x_dim": 2, "xy_dim": 2, "float32dask": 2, "next": [2, 3, 5, 100], "modifi": 2, "read_config": [2, 112], "laod": 2, "update_spatial_attr": [2, 100], "inspect": 2, "20000101": 2, "20000102": 2, "75": [2, 4], "manning_land": 2, "manning_sea": 2, "02": 2, "rgh_lev_land": 2, "leav": [2, 109], "applic": [2, 9, 109, 113], "setup_river_outflow": [2, 3, 100, 112, 115], "river": [2, 3, 5, 43, 50, 51, 52, 53, 84, 86, 87, 90, 100, 115], "both": [2, 32, 38, 42, 51, 91, 100, 107], "downstream": [2, 50, 51, 115], "setup_river_hydrographi": [2, 3, 43, 50, 52, 53, 100, 115], "hydrographi": [2, 3, 51, 52, 53, 100, 113, 115], "visual": [2, 105, 110], "_": [2, 3, 5, 7], "fn_out": [2, 5, 6, 17, 18], "vmax": [2, 5, 6], "500": 2, "combin": [2, 32, 38, 42, 44, 45, 47, 48, 50, 51, 55], "timeseri": [2, 3, 7, 18, 32, 42, 46, 48, 49, 52, 68, 73, 76, 97, 115], "staticgeom": [2, 3, 7, 17, 24, 49, 52, 53, 65, 67, 91, 100, 112], "similarli": 2, "bzd": [2, 21, 63, 100], "setup_q_forc": [2, 3, 112, 113, 115], "recommend": [2, 45, 107, 109], "inflow": [2, 3, 52, 90], "flow": [2, 3, 50, 51, 53, 84, 87, 90, 115], "setup_river_inflow": [2, 3, 48, 49, 51, 53, 100, 112, 113, 115], "14": [2, 3, 4, 7], "three": 2, "simpl": [2, 5, 7], "triangular": 2, "hydrograph": 2, "264891": 2, "264903": 2, "71": 2, "277443": 2, "57": 2, "5083000": 2, "61": 2, "5085039": 2, "90": [2, 4], "5091621": 2, "70": [2, 4], "pnt": 2, "points_from_xi": 2, "one": [2, 3, 5, 9, 44, 47, 59, 74, 80, 81, 105, 113], "020": 2, "610": 2, "710": 2, "900": 2, "570": [2, 3], "700": 2, "set_config": 2, "20210101": [2, 3, 115], "20210102": [2, 3, 115], "date_rang": 2, "parse_datetim": 2, "period": [2, 7], "datafram": [2, 32, 76, 91, 97], "column": [2, 3, 32, 42, 43, 46, 48, 49, 50, 54, 76, 78, 84, 87, 91, 115], "100": [2, 3, 4, 22, 50, 55, 73, 74, 86, 87, 96], "80": [2, 4], "250": [2, 5], "300": 2, "2021": 2, "01": [2, 3, 87], "00": 2, "16": [2, 3, 4], "17": [2, 4], "datetime64": 2, "01t12": 2, "649e": 2, "774e": 2, "083e": 2, "085e": 2, "standard_nam": 2, "m3": [2, 3, 48, 49, 50], "1xarrai": 2, "3time": 2, "3100": 2, "80arrai": 2, "02arrai": 2, "01t00": 2, "000000000": 2, "02t00": 2, "int641": 2, "3arrai": 2, "int640crs_wkt": 2, "index_dim": 2, "indexx_dim": 2, "ytime_dim": 2, "timearrai": 2, "timepandasindexpandasindex": 2, "datetimeindex": 2, "freq": 2, "indexpandasindexpandasindex": 2, "int64index": 2, "dischargeunit": 2, "18": [2, 4], "retriev": [2, 5, 6], "to_gdf": 2, "19": [2, 4], "disfil": [2, 112], "srcfile": [2, 112], "entri": [2, 42, 48], "tip": [2, 106], "rerun": 2, "plot_forc": [2, 3, 7], "satisfi": 2, "disk": [2, 59], "seper": 2, "writen": 2, "individu": 2, "write_": [2, 9, 59], "write_staticmap": 2, "write_config": [2, 100, 112], "etc": 2, "21": [2, 4], "interac": 3, "get": [3, 4, 6, 7, 13, 15, 74, 112], "api": [3, 108, 109], "overview": [3, 7, 100, 112], "sfincs_test_bas": 3, "78": 3, "28": [3, 4], "94": 3, "013": 3, "014": 3, "028": 3, "ignor": 3, "033": 3, "034": 3, "error": [3, 4, 49, 91], "configuraton": 3, "non": [3, 81, 105], "pass": [3, 7, 17, 67, 100, 114, 115], "path_to_ini_fil": [3, 7], "build_configur": 3, "header": [3, 7, 42, 43, 112], "correspond": [3, 7, 113, 114, 115], "explain": [3, 7], "model_compon": [3, 7], "hydrolog": [3, 50, 87, 100, 115], "setup_river_bathymetri": [3, 100, 112, 115], "amp": 3, "those": [3, 24, 115], "flwdir": [3, 50, 51, 52, 53, 84, 87, 90, 100, 115], "uparea": [3, 49, 50, 51, 52, 53, 87, 91, 100, 115], "river_geom_fn": [3, 50, 115], "rivers_lin2019_v1": [3, 115], "qbankful": [3, 50, 87, 115], "rivwth": [3, 50, 87, 115], "river_upa": [3, 50, 52, 53, 87, 90, 100, 115], "25": [3, 4, 50, 52, 53, 86, 87, 90, 115], "mimimum": [3, 50, 52, 53, 87, 90, 115], "upstream": [3, 49, 50, 51, 52, 53, 87, 90, 91, 115], "threshold": [3, 38, 44, 50, 52, 53, 80, 81, 86, 87, 90, 100, 115], "river_len": [3, 50, 52, 53, 87, 90, 100, 115], "1000": [3, 50, 52, 53, 87, 90, 115], "insid": [3, 5, 38, 44, 115], "rivdph_method": [3, 50, 87, 115], "gvf": [3, 50, 87, 115], "gradual": [3, 87, 115], "vari": [3, 45, 47, 87, 89, 115], "rivwth_method": [3, 50, 87, 115], "min_rivwth": [3, 50, 87, 115], "min_rivdph": [3, 50, 87, 115], "outflow_width": [3, 100, 115], "2500": [3, 115], "setup_gaug": [3, 7, 112, 115], "gauges_fn": [3, 7, 41, 115], "riverine_gaug": [3, 115], "observ": [3, 4, 5, 6, 7, 41, 115], "when": [3, 4, 7, 8, 100, 115], "discharg": [3, 6, 32, 48, 49, 50, 52, 53, 87, 91, 100, 112, 113, 114, 115], "discharge_input_sfinc": [3, 115], "url": 3, "path_to_yml_fil": 3, "By": [3, 9, 39, 45, 49, 51, 52, 53, 55, 59, 74, 89, 90, 91, 98], "p": [3, 109, 114, 115], "drive": 3, "acc": 3, "pre": [3, 4, 48, 49], "background": [3, 5, 17, 67], "core": [3, 81, 84, 87, 89, 91, 100, 106, 107, 112, 113], "sfincs_test_ful": 3, "947": 3, "964": 3, "965": 3, "970": 3, "021": [3, 7], "022": [3, 7], "088": 3, "135": 3, "961": 3, "772": 3, "948": 3, "207": 3, "adjust_dem": [3, 51], "327": 3, "780": 3, "280": 3, "940": 3, "345": 3, "reproject": [3, 45, 47, 51, 55, 89, 100], "destin": [3, 47, 51, 59], "655": 3, "flw": 3, "syntheth": 3, "23": [3, 4], "430": 3, "calcul": [3, 6, 54], "688": 3, "org": [3, 109], "max": [3, 6, 45, 89], "3938": 3, "3956": 3, "60": [3, 4], "702": 3, "705": 3, "river_mask_fn": [3, 50], "706": 3, "qbankfull_fn": [3, 50], "rivbank": [3, 50, 87], "rivbankq": [3, 50, 87], "segment_length": [3, 50, 87], "3000": [3, 50], "smooth_length": [3, 50, 87], "constrain_rivb": [3, 50, 87], "constrain_estuari": [3, 50, 87], "dig_river_d4": [3, 50], "plot_riv_profil": [3, 50], "767": 3, "overwrit": [3, 7, 37, 41, 54], "768": 3, "27": [3, 4], "bankful": [3, 50, 87, 100], "surfac": [3, 5], "bank": [3, 50, 86, 87], "712": 3, "smooth": [3, 50, 87, 89, 109], "solver": 3, "successfulli": 3, "reach": 3, "integr": 3, "interv": [3, 5], "201": 3, "burn": [3, 50, 84, 115], "bedlevel": [3, 50, 84, 87], "dem": [3, 84, 100, 115], "213": 3, "37": 3, "421": 3, "correct": [3, 42, 50, 87, 107], "d4": [3, 50, 84, 100], "bed": [3, 50, 84, 87], "851": 3, "857": 3, "rivmsk": [3, 5, 43, 50, 87, 100], "859": 3, "river_width": [3, 52, 53, 100], "2000": [3, 52, 53], "keep_rivers_geom": [3, 52, 53], "098": 3, "118": 3, "214": 3, "216": 3, "close": [3, 4, 5, 52, 100], "append_bound": [3, 53], "459": 3, "703": 3, "307": 3, "704": 3, "724": 3, "762": 3, "cn": [3, 39], "782": 3, "800": 3, "819": 3, "constant": [3, 43, 50, 52, 100], "873": 3, "874": 3, "887": 3, "907": 3, "949": 3, "989": 3, "133": 3, "526": 3, "528": 3, "562": 3, "previou": 3, "ad": [3, 33, 42, 45, 47, 53], "two": [3, 7, 30, 74, 89], "suffici": [3, 100], "final": [3, 102], "process": [3, 9, 38, 44, 59, 80, 81, 109], "o": [3, 4, 5, 6, 7, 100, 113], "walk": 3, "blue": [3, 5], "minor": 3, "red": 3, "triangl": 3, "1400x910": 3, "600x300": 3, "axessubplot": 3, "scratch": [4, 7, 9, 105], "complet": [4, 9, 19, 61, 109, 113], "On": 4, "window": [4, 49, 91, 100], "alreadi": 4, "charleston_subgrid_example_basicforc": 4, "cours": 4, "bat": 4, "sfincs_ex": 4, "ex": 4, "sfincs_log": 4, "echo": 4, "nbsphinx": 4, "math": 4, "_ex": 4, "whether": [4, 100], "welcom": 4, "build": [4, 7, 59, 100, 105, 109, 110, 112, 114, 115], "revis": 4, "rev": 4, "v2": 4, "date": 4, "subgrid": 4, "meteo": 4, "data": [4, 5, 6, 8, 31, 32, 33, 35, 37, 38, 39, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 69, 70, 80, 87, 88, 89, 90, 92, 93, 100, 106, 109, 110, 111, 114, 115], "regular": 4, "mesh": 4, "z": [4, 5, 6, 54, 78, 96], "119864": 4, "238715": 4, "sbg": 4, "remain": [4, 50], "26": 4, "22": 4, "55": 4, "95": 4, "finish": [4, 109], "total": 4, "567": 4, "489": 4, "078": 4, "392": 4, "momentum": 4, "continu": [4, 7], "531": 4, "432": 4, "875": 4, "off": 4, "yet": [4, 46, 79], "run_path": 4, "cur_dir": 4, "getcwd": 4, "chdir": 4, "take": [4, 100], "minut": 4, "so": [4, 109], "longer": 4, "than": [4, 6, 7, 38, 43, 44, 45, 100], "316": 4, "239": 4, "077": 4, "402": 4, "602": 4, "809": 4, "379": 4, "actual": 4, "situat": 4, "dir_list": 4, "listdir": 4, "run_output": 4, "sfincs_hi": [4, 5, 6, 22, 73, 100, 112], "sfincs_map": [4, 5, 6, 22, 74, 100, 112], "earlier": 4, "addition": [4, 8, 22, 74], "result": [4, 7, 22, 31, 33, 35, 100, 105, 109, 111, 112], "common": 4, "cartopi": 5, "interfac": [5, 109, 112], "geograph": 5, "satellit": 5, "imageri": 5, "depend": [5, 6, 54, 107, 109], "join": [5, 6], "pyplot": [5, 6, 7], "plt": [5, 6, 7], "stagger": [5, 6, 22, 74], "sgrid": [5, 6], "convent": [5, 6], "face": [5, 6, 74], "translat": [5, 6, 22], "node": [5, 6], "sfincs_root": [5, 6], "rel": [5, 6, 13, 49, 50, 62, 91], "simpli": [5, 6, 50], "read_result": [5, 6, 100], "h": [5, 6, 42, 76, 82, 97, 100, 109, 114, 115], "everi": [5, 7, 113], "4th": 5, "hour": 5, "attr": [5, 6, 7], "long_nam": [5, 6], "sel": 5, "col": 5, "col_wrap": 5, "facetgrid": 5, "0x7f47b6f80820": 5, "point_h": [5, 6], "h_point": 5, "renam": [5, 100], "station": 5, "station_id": 5, "astyp": 5, "int": [5, 15, 17, 22, 23, 25, 45, 49, 52, 53, 55, 67, 70, 73, 74, 77, 79, 80, 81, 83, 86, 89, 91], "color": 5, "overland": [5, 6], "viridi": [5, 6], "colormap": 5, "product": 5, "setup_river_geomerti": 5, "hmin": [5, 6, 74], "da_h": 5, "zb": [5, 6, 22, 50, 74, 84, 87], "drop": [5, 22, 74, 100], "perman": [5, 6], "bodi": 5, "da_hriv": 5, "hmax": [5, 6, 22, 74], "fig": [5, 6, 17, 18, 67, 68], "sfincs_h": 5, "mp4": 5, "ffmpeg": 5, "c": [5, 7, 13, 30, 107, 109], "forg": [5, 107, 109], "frame": 5, "cbar_kwarg": [5, 6], "shrink": [5, 6], "anchor": [5, 6], "def": 5, "update_plot": 5, "cax_h": 5, "cax_hriv": 5, "da_hi": 5, "isel": 5, "dt": [5, 82], "strftime": 5, "b": [5, 13, 30], "item": 5, "set_titl": [5, 6], "set_arrai": 5, "ravel": 5, "da_hrivi": 5, "bmap": [5, 6, 17, 67], "sat": [5, 6, 17, 67], "plot_bound": [5, 6, 17, 67], "vmin": [5, 6], "cmap": [5, 6], "cm": [5, 6, 100], "bone": 5, "prevent": 5, "doubl": 5, "funcanim": 5, "arang": 5, "farg": 5, "fp": 5, "dpi": [5, 6], "200": 5, "html": 5, "to_html5_video": 5, "browser": 5, "support": [5, 9, 59, 79, 100], "video": 5, "tag": 5, "list": [6, 9, 17, 59, 67, 74, 75, 78, 83, 96, 113], "kei": [6, 7, 9, 13, 30, 59, 79], "zsmax": [6, 22, 74], "cuminf": 6, "total_runtim": 6, "average_dt": 6, "point_zb": 6, "point_z": 6, "point_u": 6, "point_v": 6, "point_qinf": 6, "lzw": 6, "reindex": 6, "revers": 6, "chang": [6, 50, 102, 113], "to_rast": 6, "occur": 6, "gswo": 6, "northen": 6, "from_yml": 6, "get_rasterdataset": 6, "gswo_mask": 6, "reproject_lik": 6, "data_typ": 6, "categori": 6, "paper_doi": 6, "1038": 6, "nature20584": 6, "paper_ref": 6, "pekel": 6, "et": 6, "al": 6, "2016": 6, "source_url": 6, "appspot": 6, "source_vers": 6, "v1_1_2019": 6, "255": [6, 7], "da_hmax": 6, "comput": [6, 22, 47, 74], "da_hmax_fld": 6, "colorbar": 6, "label": 6, "later": [6, 100], "top": [6, 53], "png": [6, 17, 18], "mimum": 6, "cax_fld": 6, "savefig": 6, "225": 6, "bbox_inch": 6, "tight": 6, "perform": 7, "append": [7, 8, 34, 41, 45, 54, 89], "introduc": 7, "function": 7, "test": [7, 107, 109], "deliv": 7, "block": 7, "below": [7, 44, 81, 100, 105, 107, 112, 114, 115], "vx": 7, "denot": 7, "seem": 7, "miss": [7, 50, 51, 70, 89], "ensur": [7, 84, 100], "rather": 7, "rebuild": 7, "thing": 7, "intercomparison": 7, "underli": 7, "impact": 7, "possibl": [7, 111], "dure": 7, "sequenc": 7, "sfincs_update_precip": [7, 113], "directli": [7, 50, 102, 112], "part": [7, 100, 112], "extend": [7, 38], "made": 7, "sure": [7, 107], "coverag": 7, "identifi": [7, 86], "pleas": [7, 107, 109], "user_hom": 7, "inde": 7, "present": [7, 22, 24, 74, 104, 109], "edit": [7, 8, 53, 102], "overwritten": [7, 59], "landcov": [7, 43], "setup_lulcmap": 7, "outlin": [7, 17, 67], "model_out": [7, 59], "out": [7, 50, 53, 90], "left": 7, "sfincs_coastal_precip": [7, 113], "32": 7, "138": 7, "dir": 7, "153": 7, "244": 7, "249": 7, "276": 7, "342": 7, "556": 7, "589": 7, "625": 7, "669": 7, "701": 7, "origin": [7, 45, 91, 92, 93, 94], "venice_sfincs_precip": 7, "analysi": [7, 109], "plot": [7, 17, 18, 100], "familiar": 7, "straighforward": 7, "other": [7, 24, 38, 44, 55, 80, 81], "pop": 7, "focu": [7, 109], "manipul": 7, "logic": [7, 38, 44], "accumul": 7, "rainfal": 7, "over": [7, 47], "precip_sum": 7, "sum": 7, "mm": [7, 46, 47], "anoth": [7, 43], "measur": 7, "sfincs_update_forc": 7, "venice_gaug": 7, "gtsmv3_eu_era5": 7, "mdt_fn": 7, "mdt": [7, 42], "fn_gaug": 7, "df": [7, 76, 97], "read_csv": 7, "id": [7, 46, 48], "1001": 7, "venice1": 7, "513886": 7, "508725": 7, "1002": 7, "venice2": 7, "443603": 7, "495637": 7, "1003": 7, "venice3": 7, "347785": 7, "423504": 7, "1004": 7, "venice4": 7, "312603": 7, "443641": 7, "further": 7, "detail": [7, 42, 46, 48, 100], "latitud": 7, "longitud": 7, "pair": [7, 9, 59], "sfincs_coastal_forc": 7, "037": 7, "127": 7, "132": 7, "155": 7, "230": 7, "332400": 7, "5059350": 7, "243": 7, "258": 7, "288900": 7, "5049900": 7, "337": 7, "338": 7, "523": 7, "592": 7, "594": 7, "621": 7, "681": 7, "again": 7, "tidal": 7, "gtsm": 7, "config_fn": [8, 20, 62], "write_gi": [8, 65, 66], "data_lib": 8, "logger": [8, 74, 79, 81, 84, 87, 88, 89, 90, 91], "model": [8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 26, 27, 28, 29, 34, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 67, 68, 80, 81, 87, 88, 90, 100, 105, 109, 110, 111], "str": [8, 10, 12, 17, 18, 20, 28, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98], "filenam": [8, 62, 63, 64, 65, 66], "bool": [8, 9, 13, 17, 31, 33, 35, 38, 41, 44, 47, 50, 51, 52, 53, 54, 59, 67, 80, 81, 84, 86, 87, 90], "cli": 8, "librari": 8, "__init__": 8, "appear": [9, 59], "read_": [9, 59], "skip": [9, 43, 59], "parse_region": [9, 112], "configread": [9, 59], "nest": [9, 10, 59], "dictionari": [9, 10, 13, 30, 40, 59, 72, 75, 78, 83, 95, 96], "method1": [9, 59], "argument1": [9, 59], "value1": [9, 59], "argument2": [9, 59], "value2": [9, 59], "method2": [9, 59], "properti": [10, 11, 12, 16, 26, 27, 28, 29, 56, 57, 58, 65, 66], "union": [10, 12, 28, 31, 33, 35, 36, 56, 59, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 89, 92, 93, 94, 95, 96, 97], "embed": 11, "fallback": 13, "abs_path": 13, "tupl": [13, 14, 15, 17, 27, 30, 67, 70, 74, 79, 87], "string": [13, 30, 76, 82, 97, 98], "multipl": [13, 30, 100], "key1": [13, 30], "key2": [13, 30], "absolut": [13, 49, 91], "deafult": [13, 45, 74], "assum": [13, 76], "self": [13, 30], "geospati": [15, 42, 48, 60, 79, 109], "affin": [15, 79], "pyproj": [15, 74, 79], "plot_region": [17, 67], "plot_geom": [17, 67], "zoomlevel": [17, 67], "geom_kwarg": [17, 67], "legend_kwarg": [17, 67], "kwarg": [17, 18, 22, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 73, 74, 84, 87], "style": [17, 67], "per": [17, 67], "markers": [17, 67], "legend": [17, 67], "distribut": [18, 47, 68], "avarag": [18, 68], "known": [21, 24, 25], "ascii": [21, 23, 63, 64, 69, 76, 77, 92, 97], "sfincsgrid": [22, 74], "fn_map": [22, 74, 88], "fn_hi": [22, 73], "rasterdataarrai": 22, "along": [22, 73, 74], "state": [23, 35, 64, 100, 107, 112], "inifil": [23, 112], "structur": [24, 34, 54, 65, 75, 78, 83, 96, 100], "interest": [26, 90, 91, 100], "futur": [27, 36, 50, 57, 58], "99": 30, "split_dataset": [31, 33, 35], "split": [31, 33, 35, 100], "staticgom": 32, "accordingli": 32, "dummi": [32, 42, 52], "zero": [32, 38, 43, 45, 100], "either": [33, 42, 48, 50, 52, 53, 78, 115], "geoseri": 36, "set_geom": 36, "inact": [38, 44, 81], "geomtri": [38, 44, 77], "exclud": [38, 44, 80, 81], "larger": [38, 44, 45], "equal": [38, 44, 89], "threshhold": [38, 44, 50, 52, 53], "smaller": [38, 43, 44, 51, 100], "AND": [38, 44], "oper": [38, 44], "constrain": [38, 80], "last": [38, 44, 45, 80, 81, 89], "critera": [38, 44, 80, 81], "thu": [38, 44, 80, 81, 100], "overrul": [38, 44, 80, 81], "criteria": [38, 44, 80, 81, 91], "reset": [38, 44, 53], "befor": [38, 42, 45, 55, 89, 100, 113], "detect": [38, 51, 80], "horizont": [38, 44, 80, 81, 100], "diagon": [38, 44, 80, 81, 100], "moistur": [39, 85, 100], "inch": [39, 85, 100], "anteced": 39, "runoff": 39, "cn_dry": 39, "cn_avg": 39, "cn_wet": 39, "cfdict": 40, "open_vector": [41, 49], "accept": [41, 49], "5000": [42, 87], "plu": [42, 54], "match": [42, 100], "offset": [42, 45, 89], "egm": 42, "msl": 42, "ref": [42, 45, 50, 51, 55], "row": [42, 46, 48], "interpret": 42, "open_timeseries_from_t": [42, 46, 48], "tabul": [42, 46, 48], "km": [42, 52], "coeffici": [43, 78], "superseed": 43, "cannot": [44, 46, 51], "undon": 44, "contigu": [44, 81, 100], "touch": [44, 80, 81], "bresenham": [44, 80, 81], "algorithm": [44, 80, 81], "previous": [44, 49, 100], "cap": [45, 89], "linearli": [45, 89], "appli": [45, 89], "Not": [45, 49], "min": [45, 89], "pixel": [45, 89], "wise": [45, 89], "cubic": [45, 89], "nearest": [45, 50, 86, 89], "hole": [45, 89], "rio_idw": [45, 89], "hr": [46, 47], "through": [46, 48], "netamprfil": [47, 112], "median": 47, "discharge_fn": 49, "locs_fn": 49, "uparea_fn": [49, 91], "wdw": [49, 91], "rel_error": [49, 91, 100], "abs_error": [49, 91, 100], "best": [49, 51, 52, 53, 91, 110], "neighbor": [49, 50, 87], "dermin": 49, "src_snap": 49, "gdal": 49, "experiment": 50, "segment": [50, 84, 86, 87], "half": [50, 52, 53], "rivdph": 50, "estim": [50, 52, 84, 86, 87, 100], "profil": 50, "percentil": 50, "subtract": 50, "propag": 50, "powlaw": [50, 87], "approxim": [50, 87], "quantil": [50, 86, 87], "5e3": [50, 87], "10e3": [50, 87], "fix": [50, 87, 97, 100], "estuari": [50, 87], "slope": 50, "downward": 50, "dig": 50, "setup_riv": 51, "contribut": [51, 103], "incom": 51, "roughli": 51, "higher": 51, "d8": [51, 90, 100], "adjust": [51, 110], "lower": [51, 74], "enter": 52, "rivers_in": 52, "centerlin": [52, 53], "avoid": [52, 100], "instabl": 52, "nearbi": 52, "keep": [52, 53, 100], "omit": 53, "river_out": 53, "2km": 53, "1km": 53, "side": 53, "normal": 53, "rivers_out": 53, "structures_fn": 54, "stype": [54, 96], "dz": 54, "thin": [54, 96], "dam": [54, 96], "leve": 54, "par1": [54, 78, 96], "gdf": [54, 77, 78, 83, 91, 98], "linestr": [54, 78, 83], "centroid": 55, "rel_path": [62, 100], "prepend": 62, "fmt": [64, 92, 96, 97, 98], "3f": [64, 92], "bmap_kwarg": 67, "fn": [69, 70, 72, 75, 76, 77, 92, 93, 95, 96, 97, 98], "2d": [69, 92, 93, 94], "mv": 70, "f4": [70, 93], "flat": [70, 71, 94], "nrow": 70, "ncol": 70, "u1": [70, 93], "fn_ind": [71, 94], "ds_hi": 73, "hi": 73, "pathlib": 74, "assign": 74, "ds_face": 74, "ds_edg": 74, "feat": [75, 78, 83, 96], "paramt": 78, "cd": [78, 102], "formula": 78, "da_msk": [80, 84, 86, 87], "da_elv": [80, 81, 84], "gdf_mask": [80, 81], "gdf_includ": [80, 81], "gdf_exclud": [80, 81], "boolean": [80, 81], "nondata": 81, "gdf_riv": [84, 86, 87, 90], "pyflwdir": [84, 87, 100], "flwdirrast": [84, 87], "river_d4": 84, "da_elv1": 84, "da_cn": 85, "da_mask": [85, 89], "da_hnd": 86, "nmin": 86, "drainag": 86, "hand": 86, "adjec": 86, "heigth": 86, "drain": [86, 115], "rivbank_dz": 86, "riverbank": 86, "da_riv_mask": 86, "da_bnk_mask": 86, "gdf_qbf": 87, "min_converg": 87, "max_dist": 87, "elevtn_nam": 87, "uparea_nam": [87, 91], "rivmsk_nam": 87, "equat": 87, "power": 87, "law": 87, "elevnt_nam": 87, "converg": 87, "distanc": 87, "da": 88, "ds_like": 88, "param": 88, "ds_out": 88, "da1": 89, "da2": 89, "da_offset": 89, "transit": 89, "da_out": 89, "da_flwdir": 90, "da_uparea": 90, "return_riv": 90, "gdf_src": 90, "discharge_nam": 91, "smallest": 91, "meet": 91, "sw": [92, 93, 94], "corner": [92, 93, 94], "savetxt": 92, "conf": 95, "1f": 96, "field": 96, "weir01": 96, "weir02": 96, "110": 96, "120": 96, "2f": 97, "4f": 98, "notabl": 100, "page": [100, 103, 106, 109], "changelog": 100, "adher": 100, "semant": 100, "setup_q_forcing_from_grid": [100, 112, 113], "snap_discharg": [100, 112], "nonnul": 100, "setup_basemap": 100, "active_mask_fn": 100, "basemaps_fn": 100, "workflow": [100, 109, 112, 114, 115], "max_error": 100, "setup_p_forc": [100, 112], "multi": 100, "corner_x": 100, "edge_x": 100, "allow": [100, 112, 113], "reus": 100, "esa": 100, "worldcov": 100, "min_elv": 100, "max_elv": 100, "respect": 100, "clean": [100, 109], "remov": 100, "spuriou": 100, "small": 100, "island": 100, "expos": 100, "river_boundary_point": 100, "ran": 100, "beforehand": 100, "fly": 100, "accuraci": 100, "hide": 100, "linux": 100, "nan": 100, "setup_manning_roug": 100, "improv": [100, 109], "interbasin": [100, 115], "bump": 100, "mamba": [100, 107], "ci": 100, "delimit": 100, "separ": 100, "low": [100, 112], "py": 100, "sort": 100, "x_dim": 100, "restart": 100, "topo": 100, "setup_structur": [100, 112], "read_staticgeom": 100, "read_stat": 100, "write_st": 100, "get_spatial_attr": [100, 112], "read_staticmap": 100, "merge_topobathi": [100, 112], "mask_topobathi": [100, 112], "river_inflow_point": 100, "river_outflow_point": 100, "setup_p_grid": 100, "ouflow": 100, "latest": [100, 102, 109], "stabl": 100, "instruct": [100, 107], "build_coastal_model": 100, "build_riverine_model": 100, "plot_sfincs_map": 100, "ana\u00ef": 101, "couasnon": [101, 109], "couasnonanaishttp": 101, "github": [101, 102, 109], "couasnonanai": 101, "dirk": 101, "eiland": [101, 109], "dirkeiland": 101, "tim": 101, "leijns": [101, 109], "leyns": 101, "hessel": 101, "winsemiu": [101, 109], "hcwinsemiu": 101, "git": 102, "easili": [102, 110, 112], "access": 102, "clone": 102, "repo": 102, "navig": 102, "pyproject": 102, "toml": 102, "Then": [102, 107], "guidelin": 103, "furthermor": [103, 109], "plan": 103, "view": 105, "link": 105, "coastal": [105, 113], "postprocess": 105, "anim": 105, "faq": 106, "trick": 106, "visit": [106, 107], "pypi": 107, "exchang": 107, "wai": [107, 110], "channel": 107, "altern": 107, "fail": 107, "abl": 107, "guid": [108, 109], "tool": [109, 110], "facilit": 109, "analyz": 109, "geoscientif": 109, "autom": 109, "go": 109, "raw": 109, "readi": 109, "analys": [109, 110], "onc": 109, "hydrodynam": 109, "consum": 109, "hard": 109, "reproduc": 109, "especi": 109, "rapidli": 109, "becom": 109, "increasingli": 109, "high": 109, "challeng": 109, "aim": 109, "fast": 109, "modular": 109, "exploit": 109, "rich": [109, 110], "learn": 109, "experi": 109, "softwar": 109, "doi": 109, "zenodo": 109, "releas": 109, "paper": 109, "real": 109, "ikeuchi": 109, "yamazaki": 109, "mui": 109, "dullaart": 109, "j": 109, "ward": 109, "framework": 109, "hazard": 109, "eguspher": 109, "5194": 109, "149": 109, "issu": 109, "feel": 109, "free": 109, "tracker": 109, "seek": 109, "commun": 109, "far": 109, "develop": 109, "believ": 109, "much": 109, "wider": 109, "happi": 109, "discuss": 109, "benefit": 110, "assist": 110, "quickli": 110, "associ": [110, 112], "infiltr": 112, "get_basin_geometri": 112, "read_inp": 112, "write_inp": 112, "read_binary_map": 112, "write_binary_map": 112, "mask_bound": 112, "indfil": 112, "read_binary_map_index": 112, "write_binary_map_index": 112, "cn_to_": 112, "obsfil": 112, "read_xi": 112, "write_xi": 112, "weirfil": 112, "read_structur": 112, "write_structur": 112, "gdf2structur": 112, "structures2gdf": 112, "read_timeseri": 112, "write_timeseri": 112, "resample_tim": 112, "upon": 112, "qinffil": 112, "thdfile": 112, "built_model": 113, "xmin": [113, 114, 115], "ymin": [113, 114, 115], "xmax": [113, 114, 115], "ymax": [113, 114, 115], "sfincs_build": 113, "Or": 113, "manag": 113, "alwai": 113, "infer": 113, "suggest": 113, "checkout": 113, "delin": 115, "At": 115, "accur": 115, "represent": 115, "underwat": 115}, "objects": {"hydromt_sfincs": [[8, 0, 1, "", "SfincsModel"], [69, 3, 1, "", "read_ascii_map"], [70, 3, 1, "", "read_binary_map"], [71, 3, 1, "", "read_binary_map_index"], [72, 3, 1, "", "read_inp"], [73, 3, 1, "", "read_sfincs_his_results"], [74, 3, 1, "", "read_sfincs_map_results"], [75, 3, 1, "", "read_structures"], [76, 3, 1, "", "read_timeseries"], [77, 3, 1, "", "read_xy"], [92, 3, 1, "", "write_ascii_map"], [93, 3, 1, "", "write_binary_map"], [94, 3, 1, "", "write_binary_map_index"], [95, 3, 1, "", "write_inp"], [96, 3, 1, "", "write_structures"], [97, 3, 1, "", "write_timeseries"], [98, 3, 1, "", "write_xy"]], "hydromt_sfincs.SfincsModel": [[8, 1, 1, "", "__init__"], [9, 1, 1, "", "build"], [10, 2, 1, "", "config"], [11, 2, 1, "", "crs"], [12, 2, 1, "", "forcing"], [13, 1, 1, "", "get_config"], [14, 1, 1, "", "get_model_time"], [15, 1, 1, "", "get_spatial_attrs"], [16, 2, 1, "", "mask"], [17, 1, 1, "", "plot_basemap"], [18, 1, 1, "", "plot_forcing"], [19, 1, 1, "", "read"], [20, 1, 1, "", "read_config"], [21, 1, 1, "", "read_forcing"], [22, 1, 1, "", "read_results"], [23, 1, 1, "", "read_states"], [24, 1, 1, "", "read_staticgeoms"], [25, 1, 1, "", "read_staticmaps"], [26, 2, 1, "", "region"], [27, 2, 1, "", "res"], [28, 2, 1, "", "results"], [29, 2, 1, "", "root"], [30, 1, 1, "", "set_config"], [31, 1, 1, "", "set_forcing"], [32, 1, 1, "", "set_forcing_1d"], [33, 1, 1, "", "set_results"], [34, 1, 1, "", "set_root"], [35, 1, 1, "", "set_states"], [36, 1, 1, "", "set_staticgeoms"], [37, 1, 1, "", "set_staticmaps"], [38, 1, 1, "", "setup_bounds"], [39, 1, 1, "", "setup_cn_infiltration"], [40, 1, 1, "", "setup_config"], [41, 1, 1, "", "setup_gauges"], [42, 1, 1, "", "setup_h_forcing"], [43, 1, 1, "", "setup_manning_roughness"], [44, 1, 1, "", "setup_mask"], [45, 1, 1, "", "setup_merge_topobathy"], [46, 1, 1, "", "setup_p_forcing"], [47, 1, 1, "", "setup_p_forcing_from_grid"], [48, 1, 1, "", "setup_q_forcing"], [49, 1, 1, "", "setup_q_forcing_from_grid"], [50, 1, 1, "", "setup_river_bathymetry"], [51, 1, 1, "", "setup_river_hydrography"], [52, 1, 1, "", "setup_river_inflow"], [53, 1, 1, "", "setup_river_outflow"], [54, 1, 1, "", "setup_structures"], [55, 1, 1, "", "setup_topobathy"], [56, 2, 1, "", "states"], [57, 2, 1, "", "staticgeoms"], [58, 2, 1, "", "staticmaps"], [59, 1, 1, "", "update"], [60, 1, 1, "", "update_spatial_attrs"], [61, 1, 1, "", "write"], [62, 1, 1, "", "write_config"], [63, 1, 1, "", "write_forcing"], [64, 1, 1, "", "write_states"], [65, 1, 1, "", "write_staticgeoms"], [66, 1, 1, "", "write_staticmaps"]], "hydromt_sfincs.plots": [[67, 3, 1, "", "plot_basemap"], [68, 3, 1, "", "plot_forcing"]], "hydromt_sfincs.utils": [[78, 3, 1, "", "gdf2structures"], [79, 3, 1, "", "get_spatial_attrs"], [80, 3, 1, "", "mask_bounds"], [81, 3, 1, "", "mask_topobathy"], [82, 3, 1, "", "parse_datetime"], [83, 3, 1, "", "structures2gdf"]], "hydromt_sfincs.workflows": [[84, 3, 1, "", "burn_river_zb"], [85, 3, 1, "", "cn_to_s"], [86, 3, 1, "", "get_rivbank_dz"], [87, 3, 1, "", "get_river_bathymetry"], [88, 3, 1, "", "landuse"], [89, 3, 1, "", "merge_topobathy"], [90, 3, 1, "", "river_boundary_points"], [91, 3, 1, "", "snap_discharge"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"make": 1, "coastal": [1, 114], "sfinc": [1, 2, 3, 4, 5, 6, 7, 99, 107, 109], "model": [1, 2, 3, 4, 5, 6, 7, 99, 112, 113, 114, 115], "from": [1, 2, 3], "scratch": [1, 3], "us": [1, 109], "hydromt": [1, 3, 107, 109], "cli": [1, 3], "build": [1, 2, 3, 9, 113], "interfac": [1, 3], "first": 1, "get": [1, 108], "an": [1, 7, 107], "error": 1, "when": 1, "data": [1, 2, 3, 7, 112, 113], "i": [1, 109], "miss": 1, "right": 1, "complet": [1, 3], "readi": 1, "run": [1, 4], "inspect": [1, 3, 4, 7], "next": 1, "step": 1, "python": 2, "read": [2, 5, 6, 19], "raster": 2, "setup": [2, 3, 99, 112], "add": [2, 7], "discharg": 2, "forc": [2, 7, 12, 112], "write": [2, 6, 61], "file": [2, 4, 6, 113], "riverin": [3, 115], "base": 3, "layer": 3, "configur": [3, 113], "visual": [3, 99, 111], "schemat": 3, "batch": 4, "open": 4, "log": 4, "now": 4, "let": 4, "": [4, 100, 102], "try": 4, "thi": 4, "creat": [4, 5], "netcdf": 4, "output": [4, 99], "result": [5, 6, 28], "anim": 5, "plot": [5, 6, 67, 68, 99], "instantan": 5, "water": [5, 6], "depth": [5, 6], "maximum": 6, "waterdepth": 6, "geotiff": 6, "surfac": 6, "mask": [6, 16], "updat": [7, 59, 113], "exist": [7, 107], "boundari": 7, "condit": 7, "precipit": 7, "hydromt_sfinc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "sfincsmodel": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 112], "config": 10, "cr": 11, "get_config": 13, "get_model_tim": 14, "get_spatial_attr": [15, 79], "plot_basemap": [17, 67], "plot_forc": [18, 68], "read_config": 20, "read_forc": 21, "read_result": 22, "read_stat": 23, "read_staticgeom": 24, "read_staticmap": 25, "region": 26, "re": 27, "root": 29, "set_config": 30, "set_forc": 31, "set_forcing_1d": 32, "set_result": 33, "set_root": 34, "set_stat": 35, "set_staticgeom": 36, "set_staticmap": 37, "setup_bound": 38, "setup_cn_infiltr": 39, "setup_config": 40, "setup_gaug": 41, "setup_h_forc": 42, "setup_manning_rough": 43, "setup_mask": 44, "setup_merge_topobathi": 45, "setup_p_forc": 46, "setup_p_forcing_from_grid": 47, "setup_q_forc": 48, "setup_q_forcing_from_grid": 49, "setup_river_bathymetri": 50, "setup_river_hydrographi": 51, "setup_river_inflow": 52, "setup_river_outflow": 53, "setup_structur": 54, "setup_topobathi": 55, "state": 56, "staticgeom": 57, "staticmap": 58, "update_spatial_attr": 60, "write_config": 62, "write_forc": 63, "write_st": 64, "write_staticgeom": 65, "write_staticmap": 66, "read_ascii_map": 69, "read_binary_map": 70, "read_binary_map_index": 71, "read_inp": 72, "read_sfincs_his_result": 73, "read_sfincs_map_result": 74, "read_structur": 75, "read_timeseri": 76, "read_xi": 77, "util": [78, 79, 80, 81, 82, 83, 99], "gdf2structur": 78, "mask_bound": 80, "mask_topobathi": 81, "parse_datetim": 82, "structures2gdf": 83, "workflow": [84, 85, 86, 87, 88, 89, 90, 91, 99], "burn_river_zb": 84, "cn_to_": 85, "get_rivbank_dz": 86, "get_river_bathymetri": 87, "landus": 88, "merge_topobathi": 89, "river_boundary_point": 90, "snap_discharg": 91, "write_ascii_map": 92, "write_binary_map": 93, "write_binary_map_index": 94, "write_inp": 95, "write_structur": 96, "write_timeseri": 97, "write_xi": 98, "api": 99, "refer": 99, "class": 99, "initi": 99, "compon": [99, 112], "method": [99, 112], "attribut": 99, "high": 99, "level": 99, "low": 99, "gener": [99, 112], "input": 99, "what": [100, 109], "new": [100, 107], "unreleas": 100, "chang": 100, "v0": 100, "2": 100, "1": 100, "23": 100, "februari": 100, "2022": 100, "deprec": 100, "bugfix": 100, "0": 100, "august": 100, "2021": 100, "ad": 100, "document": 100, "18": 100, "mai": 100, "contributor": 101, "develop": [102, 103, 107], "environ": [102, 107], "roadmap": 104, "exampl": 105, "list": 105, "frequent": 106, "ask": 106, "question": 106, "instal": 107, "guid": [107, 110], "prerequisit": 107, "start": 108, "plugin": 109, "why": 109, "how": 109, "cite": 109, "contribut": 109, "user": 110, "postprocess": 111, "select": 113, "set": [114, 115], "up": [114, 115]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Make a coastal sfincs model from scratch using hydromt": [[1, "Make-a-coastal-sfincs-model-from-scratch-using-hydromt"]], "HydroMT CLI build interface": [[1, "HydroMT-CLI-build-interface"]], "Building a first model (and getting an error when data is missing)": [[1, "Building-a-first-model-(and-getting-an-error-when-data-is-missing)"]], "Building a first model (and getting it right)": [[1, "Building-a-first-model-(and-getting-it-right)"]], "Building a complete model (ready to run)": [[1, "Building-a-complete-model-(ready-to-run)"]], "Inspecting the model": [[1, "Inspecting-the-model"], [3, "Inspecting-the-model"]], "Next steps": [[1, "Next-steps"]], "Build a model from python": [[2, "Build-a-model-from-python"]], "read raster data": [[2, "read-raster-data"]], "setup SFINCS model": [[2, "setup-SFINCS-model"]], "Add discharge forcing": [[2, "Add-discharge-forcing"]], "write to file": [[2, "write-to-file"]], "Build a riverine SFINCS model from scratch": [[3, "Build-a-riverine-SFINCS-model-from-scratch"]], "hydroMT CLI build interface": [[3, "hydroMT-CLI-build-interface"]], "setup SFINCS model base layers": [[3, "setup-SFINCS-model-base-layers"]], "Model setup configuration": [[3, "Model-setup-configuration"]], "Data for model setup": [[3, "Data-for-model-setup"]], "Setup complete SFINCS model": [[3, "Setup-complete-SFINCS-model"]], "Visualize and/or inspect model schematization": [[3, "Visualize-and/or-inspect-model-schematization"]], "Run a SFINCS model": [[4, "Run-a-SFINCS-model"]], "Inspecting the batch-file to run SFINCS": [[4, "Inspecting-the-batch-file-to-run-SFINCS"]], "Open log file": [[4, "Open-log-file"]], "Now let\u2019s try to run this batch-file": [[4, "Now-let\u2019s-try-to-run-this-batch-file"]], "Created log-file": [[4, "Created-log-file"]], "Created netcdf output files": [[4, "Created-netcdf-output-files"]], "Sfincs results: animation": [[5, "Sfincs-results:-animation"]], "Read model results": [[5, "Read-model-results"], [6, "Read-model-results"]], "Plot instantaneous water depths": [[5, "Plot-instantaneous-water-depths"]], "Create animation": [[5, "Create-animation"]], "Sfincs results: maximum water depth": [[6, "Sfincs-results:-maximum-water-depth"]], "Write maximum waterdepth to geotiff file": [[6, "Write-maximum-waterdepth-to-geotiff-file"]], "Plot maximum water depth with surface water mask": [[6, "Plot-maximum-water-depth-with-surface-water-mask"]], "Update existing Sfincs model with boundary conditions and forcing": [[7, "Update-existing-Sfincs-model-with-boundary-conditions-and-forcing"]], "Add precipitation forcing to an existing model": [[7, "Add-precipitation-forcing-to-an-existing-model"]], "Update sfincs precipitation": [[7, "Update-sfincs-precipitation"]], "Inspect forcing data": [[7, "Inspect-forcing-data"]], "hydromt_sfincs.SfincsModel": [[8, "hydromt-sfincs-sfincsmodel"]], "hydromt_sfincs.SfincsModel.build": [[9, "hydromt-sfincs-sfincsmodel-build"]], "hydromt_sfincs.SfincsModel.config": [[10, "hydromt-sfincs-sfincsmodel-config"]], "hydromt_sfincs.SfincsModel.crs": [[11, "hydromt-sfincs-sfincsmodel-crs"]], "hydromt_sfincs.SfincsModel.forcing": [[12, "hydromt-sfincs-sfincsmodel-forcing"]], "hydromt_sfincs.SfincsModel.get_config": [[13, "hydromt-sfincs-sfincsmodel-get-config"]], "hydromt_sfincs.SfincsModel.get_model_time": [[14, "hydromt-sfincs-sfincsmodel-get-model-time"]], "hydromt_sfincs.SfincsModel.get_spatial_attrs": [[15, "hydromt-sfincs-sfincsmodel-get-spatial-attrs"]], "hydromt_sfincs.SfincsModel.mask": [[16, "hydromt-sfincs-sfincsmodel-mask"]], "hydromt_sfincs.SfincsModel.plot_basemap": [[17, "hydromt-sfincs-sfincsmodel-plot-basemap"]], "hydromt_sfincs.SfincsModel.plot_forcing": [[18, "hydromt-sfincs-sfincsmodel-plot-forcing"]], "hydromt_sfincs.SfincsModel.read": [[19, "hydromt-sfincs-sfincsmodel-read"]], "hydromt_sfincs.SfincsModel.read_config": [[20, "hydromt-sfincs-sfincsmodel-read-config"]], "hydromt_sfincs.SfincsModel.read_forcing": [[21, "hydromt-sfincs-sfincsmodel-read-forcing"]], "hydromt_sfincs.SfincsModel.read_results": [[22, "hydromt-sfincs-sfincsmodel-read-results"]], "hydromt_sfincs.SfincsModel.read_states": [[23, "hydromt-sfincs-sfincsmodel-read-states"]], "hydromt_sfincs.SfincsModel.read_staticgeoms": [[24, "hydromt-sfincs-sfincsmodel-read-staticgeoms"]], "hydromt_sfincs.SfincsModel.read_staticmaps": [[25, "hydromt-sfincs-sfincsmodel-read-staticmaps"]], "hydromt_sfincs.SfincsModel.region": [[26, "hydromt-sfincs-sfincsmodel-region"]], "hydromt_sfincs.SfincsModel.res": [[27, "hydromt-sfincs-sfincsmodel-res"]], "hydromt_sfincs.SfincsModel.results": [[28, "hydromt-sfincs-sfincsmodel-results"]], "hydromt_sfincs.SfincsModel.root": [[29, "hydromt-sfincs-sfincsmodel-root"]], "hydromt_sfincs.SfincsModel.set_config": [[30, "hydromt-sfincs-sfincsmodel-set-config"]], "hydromt_sfincs.SfincsModel.set_forcing": [[31, "hydromt-sfincs-sfincsmodel-set-forcing"]], "hydromt_sfincs.SfincsModel.set_forcing_1d": [[32, "hydromt-sfincs-sfincsmodel-set-forcing-1d"]], "hydromt_sfincs.SfincsModel.set_results": [[33, "hydromt-sfincs-sfincsmodel-set-results"]], "hydromt_sfincs.SfincsModel.set_root": [[34, "hydromt-sfincs-sfincsmodel-set-root"]], "hydromt_sfincs.SfincsModel.set_states": [[35, "hydromt-sfincs-sfincsmodel-set-states"]], "hydromt_sfincs.SfincsModel.set_staticgeoms": [[36, "hydromt-sfincs-sfincsmodel-set-staticgeoms"]], "hydromt_sfincs.SfincsModel.set_staticmaps": [[37, "hydromt-sfincs-sfincsmodel-set-staticmaps"]], "hydromt_sfincs.SfincsModel.setup_bounds": [[38, "hydromt-sfincs-sfincsmodel-setup-bounds"]], "hydromt_sfincs.SfincsModel.setup_cn_infiltration": [[39, "hydromt-sfincs-sfincsmodel-setup-cn-infiltration"]], "hydromt_sfincs.SfincsModel.setup_config": [[40, "hydromt-sfincs-sfincsmodel-setup-config"]], "hydromt_sfincs.SfincsModel.setup_gauges": [[41, "hydromt-sfincs-sfincsmodel-setup-gauges"]], "hydromt_sfincs.SfincsModel.setup_h_forcing": [[42, "hydromt-sfincs-sfincsmodel-setup-h-forcing"]], "hydromt_sfincs.SfincsModel.setup_manning_roughness": [[43, "hydromt-sfincs-sfincsmodel-setup-manning-roughness"]], "hydromt_sfincs.SfincsModel.setup_mask": [[44, "hydromt-sfincs-sfincsmodel-setup-mask"]], "hydromt_sfincs.SfincsModel.setup_merge_topobathy": [[45, "hydromt-sfincs-sfincsmodel-setup-merge-topobathy"]], "hydromt_sfincs.SfincsModel.setup_p_forcing": [[46, "hydromt-sfincs-sfincsmodel-setup-p-forcing"]], "hydromt_sfincs.SfincsModel.setup_p_forcing_from_grid": [[47, "hydromt-sfincs-sfincsmodel-setup-p-forcing-from-grid"]], "hydromt_sfincs.SfincsModel.setup_q_forcing": [[48, "hydromt-sfincs-sfincsmodel-setup-q-forcing"]], "hydromt_sfincs.SfincsModel.setup_q_forcing_from_grid": [[49, "hydromt-sfincs-sfincsmodel-setup-q-forcing-from-grid"]], "hydromt_sfincs.SfincsModel.setup_river_bathymetry": [[50, "hydromt-sfincs-sfincsmodel-setup-river-bathymetry"]], "hydromt_sfincs.SfincsModel.setup_river_hydrography": [[51, "hydromt-sfincs-sfincsmodel-setup-river-hydrography"]], "hydromt_sfincs.SfincsModel.setup_river_inflow": [[52, "hydromt-sfincs-sfincsmodel-setup-river-inflow"]], "hydromt_sfincs.SfincsModel.setup_river_outflow": [[53, "hydromt-sfincs-sfincsmodel-setup-river-outflow"]], "hydromt_sfincs.SfincsModel.setup_structures": [[54, "hydromt-sfincs-sfincsmodel-setup-structures"]], "hydromt_sfincs.SfincsModel.setup_topobathy": [[55, "hydromt-sfincs-sfincsmodel-setup-topobathy"]], "hydromt_sfincs.SfincsModel.states": [[56, "hydromt-sfincs-sfincsmodel-states"]], "hydromt_sfincs.SfincsModel.staticgeoms": [[57, "hydromt-sfincs-sfincsmodel-staticgeoms"]], "hydromt_sfincs.SfincsModel.staticmaps": [[58, "hydromt-sfincs-sfincsmodel-staticmaps"]], "hydromt_sfincs.SfincsModel.update": [[59, "hydromt-sfincs-sfincsmodel-update"]], "hydromt_sfincs.SfincsModel.update_spatial_attrs": [[60, "hydromt-sfincs-sfincsmodel-update-spatial-attrs"]], "hydromt_sfincs.SfincsModel.write": [[61, "hydromt-sfincs-sfincsmodel-write"]], "hydromt_sfincs.SfincsModel.write_config": [[62, "hydromt-sfincs-sfincsmodel-write-config"]], "hydromt_sfincs.SfincsModel.write_forcing": [[63, "hydromt-sfincs-sfincsmodel-write-forcing"]], "hydromt_sfincs.SfincsModel.write_states": [[64, "hydromt-sfincs-sfincsmodel-write-states"]], "hydromt_sfincs.SfincsModel.write_staticgeoms": [[65, "hydromt-sfincs-sfincsmodel-write-staticgeoms"]], "hydromt_sfincs.SfincsModel.write_staticmaps": [[66, "hydromt-sfincs-sfincsmodel-write-staticmaps"]], "hydromt_sfincs.plots.plot_basemap": [[67, "hydromt-sfincs-plots-plot-basemap"]], "hydromt_sfincs.plots.plot_forcing": [[68, "hydromt-sfincs-plots-plot-forcing"]], "hydromt_sfincs.read_ascii_map": [[69, "hydromt-sfincs-read-ascii-map"]], "hydromt_sfincs.read_binary_map": [[70, "hydromt-sfincs-read-binary-map"]], "hydromt_sfincs.read_binary_map_index": [[71, "hydromt-sfincs-read-binary-map-index"]], "hydromt_sfincs.read_inp": [[72, "hydromt-sfincs-read-inp"]], "hydromt_sfincs.read_sfincs_his_results": [[73, "hydromt-sfincs-read-sfincs-his-results"]], "hydromt_sfincs.read_sfincs_map_results": [[74, "hydromt-sfincs-read-sfincs-map-results"]], "hydromt_sfincs.read_structures": [[75, "hydromt-sfincs-read-structures"]], "hydromt_sfincs.read_timeseries": [[76, "hydromt-sfincs-read-timeseries"]], "hydromt_sfincs.read_xy": [[77, "hydromt-sfincs-read-xy"]], "hydromt_sfincs.utils.gdf2structures": [[78, "hydromt-sfincs-utils-gdf2structures"]], "hydromt_sfincs.utils.get_spatial_attrs": [[79, "hydromt-sfincs-utils-get-spatial-attrs"]], "hydromt_sfincs.utils.mask_bounds": [[80, "hydromt-sfincs-utils-mask-bounds"]], "hydromt_sfincs.utils.mask_topobathy": [[81, "hydromt-sfincs-utils-mask-topobathy"]], "hydromt_sfincs.utils.parse_datetime": [[82, "hydromt-sfincs-utils-parse-datetime"]], "hydromt_sfincs.utils.structures2gdf": [[83, "hydromt-sfincs-utils-structures2gdf"]], "hydromt_sfincs.workflows.burn_river_zb": [[84, "hydromt-sfincs-workflows-burn-river-zb"]], "hydromt_sfincs.workflows.cn_to_s": [[85, "hydromt-sfincs-workflows-cn-to-s"]], "hydromt_sfincs.workflows.get_rivbank_dz": [[86, "hydromt-sfincs-workflows-get-rivbank-dz"]], "hydromt_sfincs.workflows.get_river_bathymetry": [[87, "hydromt-sfincs-workflows-get-river-bathymetry"]], "hydromt_sfincs.workflows.landuse": [[88, "hydromt-sfincs-workflows-landuse"]], "hydromt_sfincs.workflows.merge_topobathy": [[89, "hydromt-sfincs-workflows-merge-topobathy"]], "hydromt_sfincs.workflows.river_boundary_points": [[90, "hydromt-sfincs-workflows-river-boundary-points"]], "hydromt_sfincs.workflows.snap_discharge": [[91, "hydromt-sfincs-workflows-snap-discharge"]], "hydromt_sfincs.write_ascii_map": [[92, "hydromt-sfincs-write-ascii-map"]], "hydromt_sfincs.write_binary_map": [[93, "hydromt-sfincs-write-binary-map"]], "hydromt_sfincs.write_binary_map_index": [[94, "hydromt-sfincs-write-binary-map-index"]], "hydromt_sfincs.write_inp": [[95, "hydromt-sfincs-write-inp"]], "hydromt_sfincs.write_structures": [[96, "hydromt-sfincs-write-structures"]], "hydromt_sfincs.write_timeseries": [[97, "hydromt-sfincs-write-timeseries"]], "hydromt_sfincs.write_xy": [[98, "hydromt-sfincs-write-xy"]], "API reference": [[99, "api-reference"]], "SFINCS model class": [[99, "sfincs-model-class"]], "Initialize": [[99, "initialize"]], "Setup components": [[99, "setup-components"]], "Plot methods": [[99, "plot-methods"]], "Attributes": [[99, "attributes"]], "High level methods": [[99, "high-level-methods"]], "Low level methods": [[99, "low-level-methods"]], "General methods": [[99, "general-methods"]], "SFINCS workflows": [[99, "sfincs-workflows"]], "SFINCS low-level methods": [[99, "sfincs-low-level-methods"]], "Input/Output methods": [[99, "input-output-methods"]], "Utilities": [[99, "utilities"]], "Visualization": [[99, "visualization"]], "What\u2019s new": [[100, "what-s-new"]], "Unreleased": [[100, "unreleased"]], "Changed": [[100, "changed"], [100, "id1"], [100, "id3"], [100, "id6"]], "v0.2.1 (23 February 2022)": [[100, "v0-2-1-23-february-2022"]], "Deprecated": [[100, "deprecated"], [100, "id4"]], "Bugfix": [[100, "bugfix"], [100, "id2"]], "New": [[100, "new"]], "v0.2.0 (2 August 2021)": [[100, "v0-2-0-2-august-2021"]], "Added": [[100, "added"], [100, "id5"]], "Documentation": [[100, "documentation"], [100, "id7"]], "v0.1.0 (18 May 2021)": [[100, "v0-1-0-18-may-2021"]], "Contributors": [[101, "contributors"]], "Developer\u2019s environment": [[102, "developer-s-environment"]], "Developments": [[103, "developments"]], "Roadmap": [[104, "roadmap"]], "Examples": [[105, "examples"]], "List of examples": [[105, "list-of-examples"]], "Frequently asked questions": [[106, "frequently-asked-questions"]], "Installation Guide": [[107, "installation-guide"]], "Prerequisites": [[107, "prerequisites"]], "Installation": [[107, "installation"]], "Install HydroMT-SFINCS in a new environment": [[107, "install-hydromt-sfincs-in-a-new-environment"]], "Install HydroMT-SFINCS in an existing environment": [[107, "install-hydromt-sfincs-in-an-existing-environment"]], "Developer install": [[107, "developer-install"]], "Getting started": [[108, "getting-started"]], "HydroMT-SFINCS: SFINCS plugin for HydroMT": [[109, "hydromt-sfincs-sfincs-plugin-for-hydromt"]], "What is the HydroMT-SFINCS plugin": [[109, "what-is-the-hydromt-sfincs-plugin"]], "Why HydroMT-SFINCS?": [[109, "why-hydromt-sfincs"]], "How to use HydroMT-SFINCS?": [[109, "how-to-use-hydromt-sfincs"]], "How to cite?": [[109, "how-to-cite"]], "How to contribute?": [[109, "how-to-contribute"]], "User guide": [[110, "user-guide"]], "Postprocessing and visualization": [[111, "postprocessing-and-visualization"]], "Model methods and components": [[112, "model-methods-and-components"]], "Model setup methods": [[112, "model-setup-methods"]], "General setup methods": [[112, "id2"]], "Forcing setup methods": [[112, "id3"]], "Model components": [[112, "model-components"]], "SfincsModel data component": [[112, "id4"]], "Building or update a model": [[113, "building-or-update-a-model"]], "Configuration file": [[113, "configuration-file"]], "Selecting data": [[113, "selecting-data"]], "Setting up a coastal model": [[114, "setting-up-a-coastal-model"]], "Setting up a riverine model": [[115, "setting-up-a-riverine-model"]]}, "indexentries": {"sfincsmodel (class in hydromt_sfincs)": [[8, "hydromt_sfincs.SfincsModel"]], "__init__() (hydromt_sfincs.sfincsmodel method)": [[8, "hydromt_sfincs.SfincsModel.__init__"]], "build() (hydromt_sfincs.sfincsmodel method)": [[9, "hydromt_sfincs.SfincsModel.build"]], "config (hydromt_sfincs.sfincsmodel property)": [[10, "hydromt_sfincs.SfincsModel.config"]], "crs (hydromt_sfincs.sfincsmodel property)": [[11, "hydromt_sfincs.SfincsModel.crs"]], "forcing (hydromt_sfincs.sfincsmodel property)": [[12, "hydromt_sfincs.SfincsModel.forcing"]], "get_config() (hydromt_sfincs.sfincsmodel method)": [[13, "hydromt_sfincs.SfincsModel.get_config"]], "get_model_time() (hydromt_sfincs.sfincsmodel method)": [[14, "hydromt_sfincs.SfincsModel.get_model_time"]], "get_spatial_attrs() (hydromt_sfincs.sfincsmodel method)": [[15, "hydromt_sfincs.SfincsModel.get_spatial_attrs"]], "mask (hydromt_sfincs.sfincsmodel property)": [[16, "hydromt_sfincs.SfincsModel.mask"]], "plot_basemap() (hydromt_sfincs.sfincsmodel method)": [[17, "hydromt_sfincs.SfincsModel.plot_basemap"]], "plot_forcing() (hydromt_sfincs.sfincsmodel method)": [[18, "hydromt_sfincs.SfincsModel.plot_forcing"]], "read() (hydromt_sfincs.sfincsmodel method)": [[19, "hydromt_sfincs.SfincsModel.read"]], "read_config() (hydromt_sfincs.sfincsmodel method)": [[20, "hydromt_sfincs.SfincsModel.read_config"]], "read_forcing() (hydromt_sfincs.sfincsmodel method)": [[21, "hydromt_sfincs.SfincsModel.read_forcing"]], "read_results() (hydromt_sfincs.sfincsmodel method)": [[22, "hydromt_sfincs.SfincsModel.read_results"]], "read_states() (hydromt_sfincs.sfincsmodel method)": [[23, "hydromt_sfincs.SfincsModel.read_states"]], "read_staticgeoms() (hydromt_sfincs.sfincsmodel method)": [[24, "hydromt_sfincs.SfincsModel.read_staticgeoms"]], "read_staticmaps() (hydromt_sfincs.sfincsmodel method)": [[25, "hydromt_sfincs.SfincsModel.read_staticmaps"]], "region (hydromt_sfincs.sfincsmodel property)": [[26, "hydromt_sfincs.SfincsModel.region"]], "res (hydromt_sfincs.sfincsmodel property)": [[27, "hydromt_sfincs.SfincsModel.res"]], "results (hydromt_sfincs.sfincsmodel property)": [[28, "hydromt_sfincs.SfincsModel.results"]], "root (hydromt_sfincs.sfincsmodel property)": [[29, "hydromt_sfincs.SfincsModel.root"]], "set_config() (hydromt_sfincs.sfincsmodel method)": [[30, "hydromt_sfincs.SfincsModel.set_config"]], "set_forcing() (hydromt_sfincs.sfincsmodel method)": [[31, "hydromt_sfincs.SfincsModel.set_forcing"]], "set_forcing_1d() (hydromt_sfincs.sfincsmodel method)": [[32, "hydromt_sfincs.SfincsModel.set_forcing_1d"]], "set_results() (hydromt_sfincs.sfincsmodel method)": [[33, "hydromt_sfincs.SfincsModel.set_results"]], "set_root() (hydromt_sfincs.sfincsmodel method)": [[34, "hydromt_sfincs.SfincsModel.set_root"]], "set_states() (hydromt_sfincs.sfincsmodel method)": [[35, "hydromt_sfincs.SfincsModel.set_states"]], "set_staticgeoms() (hydromt_sfincs.sfincsmodel method)": [[36, "hydromt_sfincs.SfincsModel.set_staticgeoms"]], "set_staticmaps() (hydromt_sfincs.sfincsmodel method)": [[37, "hydromt_sfincs.SfincsModel.set_staticmaps"]], "setup_bounds() (hydromt_sfincs.sfincsmodel method)": [[38, "hydromt_sfincs.SfincsModel.setup_bounds"]], "setup_cn_infiltration() (hydromt_sfincs.sfincsmodel method)": [[39, "hydromt_sfincs.SfincsModel.setup_cn_infiltration"]], "setup_config() (hydromt_sfincs.sfincsmodel method)": [[40, "hydromt_sfincs.SfincsModel.setup_config"]], "setup_gauges() (hydromt_sfincs.sfincsmodel method)": [[41, "hydromt_sfincs.SfincsModel.setup_gauges"]], "setup_h_forcing() (hydromt_sfincs.sfincsmodel method)": [[42, "hydromt_sfincs.SfincsModel.setup_h_forcing"]], "setup_manning_roughness() (hydromt_sfincs.sfincsmodel method)": [[43, "hydromt_sfincs.SfincsModel.setup_manning_roughness"]], "setup_mask() (hydromt_sfincs.sfincsmodel method)": [[44, "hydromt_sfincs.SfincsModel.setup_mask"]], "setup_merge_topobathy() (hydromt_sfincs.sfincsmodel method)": [[45, "hydromt_sfincs.SfincsModel.setup_merge_topobathy"]], "setup_p_forcing() (hydromt_sfincs.sfincsmodel method)": [[46, "hydromt_sfincs.SfincsModel.setup_p_forcing"]], "setup_p_forcing_from_grid() (hydromt_sfincs.sfincsmodel method)": [[47, "hydromt_sfincs.SfincsModel.setup_p_forcing_from_grid"]], "setup_q_forcing() (hydromt_sfincs.sfincsmodel method)": [[48, "hydromt_sfincs.SfincsModel.setup_q_forcing"]], "setup_q_forcing_from_grid() (hydromt_sfincs.sfincsmodel method)": [[49, "hydromt_sfincs.SfincsModel.setup_q_forcing_from_grid"]], "setup_river_bathymetry() (hydromt_sfincs.sfincsmodel method)": [[50, "hydromt_sfincs.SfincsModel.setup_river_bathymetry"]], "setup_river_hydrography() (hydromt_sfincs.sfincsmodel method)": [[51, "hydromt_sfincs.SfincsModel.setup_river_hydrography"]], "setup_river_inflow() (hydromt_sfincs.sfincsmodel method)": [[52, "hydromt_sfincs.SfincsModel.setup_river_inflow"]], "setup_river_outflow() (hydromt_sfincs.sfincsmodel method)": [[53, "hydromt_sfincs.SfincsModel.setup_river_outflow"]], "setup_structures() (hydromt_sfincs.sfincsmodel method)": [[54, "hydromt_sfincs.SfincsModel.setup_structures"]], "setup_topobathy() (hydromt_sfincs.sfincsmodel method)": [[55, "hydromt_sfincs.SfincsModel.setup_topobathy"]], "states (hydromt_sfincs.sfincsmodel property)": [[56, "hydromt_sfincs.SfincsModel.states"]], "staticgeoms (hydromt_sfincs.sfincsmodel property)": [[57, "hydromt_sfincs.SfincsModel.staticgeoms"]], "staticmaps (hydromt_sfincs.sfincsmodel property)": [[58, "hydromt_sfincs.SfincsModel.staticmaps"]], "update() (hydromt_sfincs.sfincsmodel method)": [[59, "hydromt_sfincs.SfincsModel.update"]], "update_spatial_attrs() (hydromt_sfincs.sfincsmodel method)": [[60, "hydromt_sfincs.SfincsModel.update_spatial_attrs"]], "write() (hydromt_sfincs.sfincsmodel method)": [[61, "hydromt_sfincs.SfincsModel.write"]], "write_config() (hydromt_sfincs.sfincsmodel method)": [[62, "hydromt_sfincs.SfincsModel.write_config"]], "write_forcing() (hydromt_sfincs.sfincsmodel method)": [[63, "hydromt_sfincs.SfincsModel.write_forcing"]], "write_states() (hydromt_sfincs.sfincsmodel method)": [[64, "hydromt_sfincs.SfincsModel.write_states"]], "write_staticgeoms() (hydromt_sfincs.sfincsmodel method)": [[65, "hydromt_sfincs.SfincsModel.write_staticgeoms"]], "write_staticmaps() (hydromt_sfincs.sfincsmodel method)": [[66, "hydromt_sfincs.SfincsModel.write_staticmaps"]], "plot_basemap() (in module hydromt_sfincs.plots)": [[67, "hydromt_sfincs.plots.plot_basemap"]], "plot_forcing() (in module hydromt_sfincs.plots)": [[68, "hydromt_sfincs.plots.plot_forcing"]], "read_ascii_map() (in module hydromt_sfincs)": [[69, "hydromt_sfincs.read_ascii_map"]], "read_binary_map() (in module hydromt_sfincs)": [[70, "hydromt_sfincs.read_binary_map"]], "read_binary_map_index() (in module hydromt_sfincs)": [[71, "hydromt_sfincs.read_binary_map_index"]], "read_inp() (in module hydromt_sfincs)": [[72, "hydromt_sfincs.read_inp"]], "read_sfincs_his_results() (in module hydromt_sfincs)": [[73, "hydromt_sfincs.read_sfincs_his_results"]], "read_sfincs_map_results() (in module hydromt_sfincs)": [[74, "hydromt_sfincs.read_sfincs_map_results"]], "read_structures() (in module hydromt_sfincs)": [[75, "hydromt_sfincs.read_structures"]], "read_timeseries() (in module hydromt_sfincs)": [[76, "hydromt_sfincs.read_timeseries"]], "read_xy() (in module hydromt_sfincs)": [[77, "hydromt_sfincs.read_xy"]], "gdf2structures() (in module hydromt_sfincs.utils)": [[78, "hydromt_sfincs.utils.gdf2structures"]], "get_spatial_attrs() (in module hydromt_sfincs.utils)": [[79, "hydromt_sfincs.utils.get_spatial_attrs"]], "mask_bounds() (in module hydromt_sfincs.utils)": [[80, "hydromt_sfincs.utils.mask_bounds"]], "mask_topobathy() (in module hydromt_sfincs.utils)": [[81, "hydromt_sfincs.utils.mask_topobathy"]], "parse_datetime() (in module hydromt_sfincs.utils)": [[82, "hydromt_sfincs.utils.parse_datetime"]], "structures2gdf() (in module hydromt_sfincs.utils)": [[83, "hydromt_sfincs.utils.structures2gdf"]], "burn_river_zb() (in module hydromt_sfincs.workflows)": [[84, "hydromt_sfincs.workflows.burn_river_zb"]], "cn_to_s() (in module hydromt_sfincs.workflows)": [[85, "hydromt_sfincs.workflows.cn_to_s"]], "get_rivbank_dz() (in module hydromt_sfincs.workflows)": [[86, "hydromt_sfincs.workflows.get_rivbank_dz"]], "get_river_bathymetry() (in module hydromt_sfincs.workflows)": [[87, "hydromt_sfincs.workflows.get_river_bathymetry"]], "landuse() (in module hydromt_sfincs.workflows)": [[88, "hydromt_sfincs.workflows.landuse"]], "merge_topobathy() (in module hydromt_sfincs.workflows)": [[89, "hydromt_sfincs.workflows.merge_topobathy"]], "river_boundary_points() (in module hydromt_sfincs.workflows)": [[90, "hydromt_sfincs.workflows.river_boundary_points"]], "snap_discharge() (in module hydromt_sfincs.workflows)": [[91, "hydromt_sfincs.workflows.snap_discharge"]], "write_ascii_map() (in module hydromt_sfincs)": [[92, "hydromt_sfincs.write_ascii_map"]], "write_binary_map() (in module hydromt_sfincs)": [[93, "hydromt_sfincs.write_binary_map"]], "write_binary_map_index() (in module hydromt_sfincs)": [[94, "hydromt_sfincs.write_binary_map_index"]], "write_inp() (in module hydromt_sfincs)": [[95, "hydromt_sfincs.write_inp"]], "write_structures() (in module hydromt_sfincs)": [[96, "hydromt_sfincs.write_structures"]], "write_timeseries() (in module hydromt_sfincs)": [[97, "hydromt_sfincs.write_timeseries"]], "write_xy() (in module hydromt_sfincs)": [[98, "hydromt_sfincs.write_xy"]]}})