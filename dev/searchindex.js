Search.setIndex({"docnames": ["_examples/README", "_examples/analyse_sfincs_model", "_examples/build_coastal_model", "_examples/build_from_py", "_examples/build_riverine_model", "_examples/run_sfincs_model", "_examples/sfincs_results_animation", "_examples/sfincs_results_hmax", "_examples/update_model", "_generated/hydromt_sfincs.SfincsModel", "_generated/hydromt_sfincs.SfincsModel.build", "_generated/hydromt_sfincs.SfincsModel.config", "_generated/hydromt_sfincs.SfincsModel.crs", "_generated/hydromt_sfincs.SfincsModel.forcing", "_generated/hydromt_sfincs.SfincsModel.get_config", "_generated/hydromt_sfincs.SfincsModel.get_model_time", "_generated/hydromt_sfincs.SfincsModel.get_spatial_attrs", "_generated/hydromt_sfincs.SfincsModel.mask", "_generated/hydromt_sfincs.SfincsModel.plot_basemap", "_generated/hydromt_sfincs.SfincsModel.plot_forcing", "_generated/hydromt_sfincs.SfincsModel.read", "_generated/hydromt_sfincs.SfincsModel.read_config", "_generated/hydromt_sfincs.SfincsModel.read_forcing", "_generated/hydromt_sfincs.SfincsModel.read_results", "_generated/hydromt_sfincs.SfincsModel.read_states", "_generated/hydromt_sfincs.SfincsModel.read_staticgeoms", "_generated/hydromt_sfincs.SfincsModel.read_staticmaps", "_generated/hydromt_sfincs.SfincsModel.region", "_generated/hydromt_sfincs.SfincsModel.res", "_generated/hydromt_sfincs.SfincsModel.results", "_generated/hydromt_sfincs.SfincsModel.root", "_generated/hydromt_sfincs.SfincsModel.set_config", "_generated/hydromt_sfincs.SfincsModel.set_forcing", "_generated/hydromt_sfincs.SfincsModel.set_forcing_1d", "_generated/hydromt_sfincs.SfincsModel.set_results", "_generated/hydromt_sfincs.SfincsModel.set_root", "_generated/hydromt_sfincs.SfincsModel.set_states", "_generated/hydromt_sfincs.SfincsModel.set_staticgeoms", "_generated/hydromt_sfincs.SfincsModel.set_staticmaps", "_generated/hydromt_sfincs.SfincsModel.setup_bounds", "_generated/hydromt_sfincs.SfincsModel.setup_cn_infiltration", "_generated/hydromt_sfincs.SfincsModel.setup_config", "_generated/hydromt_sfincs.SfincsModel.setup_gauges", "_generated/hydromt_sfincs.SfincsModel.setup_h_forcing", "_generated/hydromt_sfincs.SfincsModel.setup_manning_roughness", "_generated/hydromt_sfincs.SfincsModel.setup_mask", "_generated/hydromt_sfincs.SfincsModel.setup_merge_topobathy", "_generated/hydromt_sfincs.SfincsModel.setup_p_forcing", "_generated/hydromt_sfincs.SfincsModel.setup_p_forcing_from_grid", "_generated/hydromt_sfincs.SfincsModel.setup_q_forcing", "_generated/hydromt_sfincs.SfincsModel.setup_q_forcing_from_grid", "_generated/hydromt_sfincs.SfincsModel.setup_river_bathymetry", "_generated/hydromt_sfincs.SfincsModel.setup_river_hydrography", "_generated/hydromt_sfincs.SfincsModel.setup_river_inflow", "_generated/hydromt_sfincs.SfincsModel.setup_river_outflow", "_generated/hydromt_sfincs.SfincsModel.setup_structures", "_generated/hydromt_sfincs.SfincsModel.setup_topobathy", "_generated/hydromt_sfincs.SfincsModel.states", "_generated/hydromt_sfincs.SfincsModel.staticgeoms", "_generated/hydromt_sfincs.SfincsModel.staticmaps", "_generated/hydromt_sfincs.SfincsModel.update", "_generated/hydromt_sfincs.SfincsModel.update_spatial_attrs", "_generated/hydromt_sfincs.SfincsModel.write", "_generated/hydromt_sfincs.SfincsModel.write_config", "_generated/hydromt_sfincs.SfincsModel.write_forcing", "_generated/hydromt_sfincs.SfincsModel.write_states", "_generated/hydromt_sfincs.SfincsModel.write_staticgeoms", "_generated/hydromt_sfincs.SfincsModel.write_staticmaps", "_generated/hydromt_sfincs.plots.plot_basemap", "_generated/hydromt_sfincs.plots.plot_forcing", "_generated/hydromt_sfincs.read_ascii_map", "_generated/hydromt_sfincs.read_binary_map", "_generated/hydromt_sfincs.read_binary_map_index", "_generated/hydromt_sfincs.read_inp", "_generated/hydromt_sfincs.read_sfincs_his_results", "_generated/hydromt_sfincs.read_sfincs_map_results", "_generated/hydromt_sfincs.read_structures", "_generated/hydromt_sfincs.read_timeseries", "_generated/hydromt_sfincs.read_xy", "_generated/hydromt_sfincs.utils.gdf2structures", "_generated/hydromt_sfincs.utils.get_spatial_attrs", "_generated/hydromt_sfincs.utils.mask_bounds", "_generated/hydromt_sfincs.utils.mask_topobathy", "_generated/hydromt_sfincs.utils.parse_datetime", "_generated/hydromt_sfincs.utils.structures2gdf", "_generated/hydromt_sfincs.workflows.burn_river_zb", "_generated/hydromt_sfincs.workflows.cn_to_s", "_generated/hydromt_sfincs.workflows.get_rivbank_dz", "_generated/hydromt_sfincs.workflows.get_river_bathymetry", "_generated/hydromt_sfincs.workflows.landuse", "_generated/hydromt_sfincs.workflows.merge_topobathy", "_generated/hydromt_sfincs.workflows.river_boundary_points", "_generated/hydromt_sfincs.workflows.snap_discharge", "_generated/hydromt_sfincs.write_ascii_map", "_generated/hydromt_sfincs.write_binary_map", "_generated/hydromt_sfincs.write_binary_map_index", "_generated/hydromt_sfincs.write_inp", "_generated/hydromt_sfincs.write_structures", "_generated/hydromt_sfincs.write_timeseries", "_generated/hydromt_sfincs.write_xy", "api", "changelog", "dev_guide/contributors", "dev_guide/dev_install", "dev_guide/intro", "dev_guide/roadmap", "getting_started/example_index", "getting_started/faq", "getting_started/installation", "getting_started/intro", "index", "user_guide/intro", "user_guide/process_analyze", "user_guide/sfincs", "user_guide/sfincs_build_update", "user_guide/sfincs_coastal", "user_guide/sfincs_riverine"], "filenames": ["_examples/README.rst", "_examples/analyse_sfincs_model.ipynb", "_examples/build_coastal_model.ipynb", "_examples/build_from_py.ipynb", "_examples/build_riverine_model.ipynb", "_examples/run_sfincs_model.ipynb", "_examples/sfincs_results_animation.ipynb", "_examples/sfincs_results_hmax.ipynb", "_examples/update_model.ipynb", "_generated/hydromt_sfincs.SfincsModel.rst", "_generated/hydromt_sfincs.SfincsModel.build.rst", "_generated/hydromt_sfincs.SfincsModel.config.rst", "_generated/hydromt_sfincs.SfincsModel.crs.rst", "_generated/hydromt_sfincs.SfincsModel.forcing.rst", "_generated/hydromt_sfincs.SfincsModel.get_config.rst", "_generated/hydromt_sfincs.SfincsModel.get_model_time.rst", "_generated/hydromt_sfincs.SfincsModel.get_spatial_attrs.rst", "_generated/hydromt_sfincs.SfincsModel.mask.rst", "_generated/hydromt_sfincs.SfincsModel.plot_basemap.rst", "_generated/hydromt_sfincs.SfincsModel.plot_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.read.rst", "_generated/hydromt_sfincs.SfincsModel.read_config.rst", "_generated/hydromt_sfincs.SfincsModel.read_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.read_results.rst", "_generated/hydromt_sfincs.SfincsModel.read_states.rst", "_generated/hydromt_sfincs.SfincsModel.read_staticgeoms.rst", "_generated/hydromt_sfincs.SfincsModel.read_staticmaps.rst", "_generated/hydromt_sfincs.SfincsModel.region.rst", "_generated/hydromt_sfincs.SfincsModel.res.rst", "_generated/hydromt_sfincs.SfincsModel.results.rst", "_generated/hydromt_sfincs.SfincsModel.root.rst", "_generated/hydromt_sfincs.SfincsModel.set_config.rst", "_generated/hydromt_sfincs.SfincsModel.set_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.set_forcing_1d.rst", "_generated/hydromt_sfincs.SfincsModel.set_results.rst", "_generated/hydromt_sfincs.SfincsModel.set_root.rst", "_generated/hydromt_sfincs.SfincsModel.set_states.rst", "_generated/hydromt_sfincs.SfincsModel.set_staticgeoms.rst", "_generated/hydromt_sfincs.SfincsModel.set_staticmaps.rst", "_generated/hydromt_sfincs.SfincsModel.setup_bounds.rst", "_generated/hydromt_sfincs.SfincsModel.setup_cn_infiltration.rst", "_generated/hydromt_sfincs.SfincsModel.setup_config.rst", "_generated/hydromt_sfincs.SfincsModel.setup_gauges.rst", "_generated/hydromt_sfincs.SfincsModel.setup_h_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.setup_manning_roughness.rst", "_generated/hydromt_sfincs.SfincsModel.setup_mask.rst", "_generated/hydromt_sfincs.SfincsModel.setup_merge_topobathy.rst", "_generated/hydromt_sfincs.SfincsModel.setup_p_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.setup_p_forcing_from_grid.rst", "_generated/hydromt_sfincs.SfincsModel.setup_q_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.setup_q_forcing_from_grid.rst", "_generated/hydromt_sfincs.SfincsModel.setup_river_bathymetry.rst", "_generated/hydromt_sfincs.SfincsModel.setup_river_hydrography.rst", "_generated/hydromt_sfincs.SfincsModel.setup_river_inflow.rst", "_generated/hydromt_sfincs.SfincsModel.setup_river_outflow.rst", "_generated/hydromt_sfincs.SfincsModel.setup_structures.rst", "_generated/hydromt_sfincs.SfincsModel.setup_topobathy.rst", "_generated/hydromt_sfincs.SfincsModel.states.rst", "_generated/hydromt_sfincs.SfincsModel.staticgeoms.rst", "_generated/hydromt_sfincs.SfincsModel.staticmaps.rst", "_generated/hydromt_sfincs.SfincsModel.update.rst", "_generated/hydromt_sfincs.SfincsModel.update_spatial_attrs.rst", "_generated/hydromt_sfincs.SfincsModel.write.rst", "_generated/hydromt_sfincs.SfincsModel.write_config.rst", "_generated/hydromt_sfincs.SfincsModel.write_forcing.rst", "_generated/hydromt_sfincs.SfincsModel.write_states.rst", "_generated/hydromt_sfincs.SfincsModel.write_staticgeoms.rst", "_generated/hydromt_sfincs.SfincsModel.write_staticmaps.rst", "_generated/hydromt_sfincs.plots.plot_basemap.rst", "_generated/hydromt_sfincs.plots.plot_forcing.rst", "_generated/hydromt_sfincs.read_ascii_map.rst", "_generated/hydromt_sfincs.read_binary_map.rst", "_generated/hydromt_sfincs.read_binary_map_index.rst", "_generated/hydromt_sfincs.read_inp.rst", "_generated/hydromt_sfincs.read_sfincs_his_results.rst", "_generated/hydromt_sfincs.read_sfincs_map_results.rst", "_generated/hydromt_sfincs.read_structures.rst", "_generated/hydromt_sfincs.read_timeseries.rst", "_generated/hydromt_sfincs.read_xy.rst", "_generated/hydromt_sfincs.utils.gdf2structures.rst", "_generated/hydromt_sfincs.utils.get_spatial_attrs.rst", "_generated/hydromt_sfincs.utils.mask_bounds.rst", "_generated/hydromt_sfincs.utils.mask_topobathy.rst", "_generated/hydromt_sfincs.utils.parse_datetime.rst", "_generated/hydromt_sfincs.utils.structures2gdf.rst", "_generated/hydromt_sfincs.workflows.burn_river_zb.rst", "_generated/hydromt_sfincs.workflows.cn_to_s.rst", "_generated/hydromt_sfincs.workflows.get_rivbank_dz.rst", "_generated/hydromt_sfincs.workflows.get_river_bathymetry.rst", "_generated/hydromt_sfincs.workflows.landuse.rst", "_generated/hydromt_sfincs.workflows.merge_topobathy.rst", "_generated/hydromt_sfincs.workflows.river_boundary_points.rst", "_generated/hydromt_sfincs.workflows.snap_discharge.rst", "_generated/hydromt_sfincs.write_ascii_map.rst", "_generated/hydromt_sfincs.write_binary_map.rst", "_generated/hydromt_sfincs.write_binary_map_index.rst", "_generated/hydromt_sfincs.write_inp.rst", "_generated/hydromt_sfincs.write_structures.rst", "_generated/hydromt_sfincs.write_timeseries.rst", "_generated/hydromt_sfincs.write_xy.rst", "api.rst", "changelog.rst", "dev_guide/contributors.rst", "dev_guide/dev_install.rst", "dev_guide/intro.rst", "dev_guide/roadmap.rst", "getting_started/example_index.rst", "getting_started/faq.rst", "getting_started/installation.rst", "getting_started/intro.rst", "index.rst", "user_guide/intro.rst", "user_guide/process_analyze.rst", "user_guide/sfincs.rst", "user_guide/sfincs_build_update.rst", "user_guide/sfincs_coastal.rst", "user_guide/sfincs_riverine.rst"], "titles": ["&lt;no title&gt;", "Analysing SFINCS results", "Make a coastal sfincs model from scratch using hydromt", "Build a model from python", "Build a riverine SFINCS model from scratch", "Run a SFINCS model", "Sfincs results: animation", "Sfincs results: maximum water depth", "Update existing Sfincs model with boundary conditions and forcing", "hydromt_sfincs.SfincsModel", "hydromt_sfincs.SfincsModel.build", "hydromt_sfincs.SfincsModel.config", "hydromt_sfincs.SfincsModel.crs", "hydromt_sfincs.SfincsModel.forcing", "hydromt_sfincs.SfincsModel.get_config", "hydromt_sfincs.SfincsModel.get_model_time", "hydromt_sfincs.SfincsModel.get_spatial_attrs", "hydromt_sfincs.SfincsModel.mask", "hydromt_sfincs.SfincsModel.plot_basemap", "hydromt_sfincs.SfincsModel.plot_forcing", "hydromt_sfincs.SfincsModel.read", "hydromt_sfincs.SfincsModel.read_config", "hydromt_sfincs.SfincsModel.read_forcing", "hydromt_sfincs.SfincsModel.read_results", "hydromt_sfincs.SfincsModel.read_states", "hydromt_sfincs.SfincsModel.read_staticgeoms", "hydromt_sfincs.SfincsModel.read_staticmaps", "hydromt_sfincs.SfincsModel.region", "hydromt_sfincs.SfincsModel.res", "hydromt_sfincs.SfincsModel.results", "hydromt_sfincs.SfincsModel.root", "hydromt_sfincs.SfincsModel.set_config", "hydromt_sfincs.SfincsModel.set_forcing", "hydromt_sfincs.SfincsModel.set_forcing_1d", "hydromt_sfincs.SfincsModel.set_results", "hydromt_sfincs.SfincsModel.set_root", "hydromt_sfincs.SfincsModel.set_states", "hydromt_sfincs.SfincsModel.set_staticgeoms", "hydromt_sfincs.SfincsModel.set_staticmaps", "hydromt_sfincs.SfincsModel.setup_bounds", "hydromt_sfincs.SfincsModel.setup_cn_infiltration", "hydromt_sfincs.SfincsModel.setup_config", "hydromt_sfincs.SfincsModel.setup_gauges", "hydromt_sfincs.SfincsModel.setup_h_forcing", "hydromt_sfincs.SfincsModel.setup_manning_roughness", "hydromt_sfincs.SfincsModel.setup_mask", "hydromt_sfincs.SfincsModel.setup_merge_topobathy", "hydromt_sfincs.SfincsModel.setup_p_forcing", "hydromt_sfincs.SfincsModel.setup_p_forcing_from_grid", "hydromt_sfincs.SfincsModel.setup_q_forcing", "hydromt_sfincs.SfincsModel.setup_q_forcing_from_grid", "hydromt_sfincs.SfincsModel.setup_river_bathymetry", "hydromt_sfincs.SfincsModel.setup_river_hydrography", "hydromt_sfincs.SfincsModel.setup_river_inflow", "hydromt_sfincs.SfincsModel.setup_river_outflow", "hydromt_sfincs.SfincsModel.setup_structures", "hydromt_sfincs.SfincsModel.setup_topobathy", "hydromt_sfincs.SfincsModel.states", "hydromt_sfincs.SfincsModel.staticgeoms", "hydromt_sfincs.SfincsModel.staticmaps", "hydromt_sfincs.SfincsModel.update", "hydromt_sfincs.SfincsModel.update_spatial_attrs", "hydromt_sfincs.SfincsModel.write", "hydromt_sfincs.SfincsModel.write_config", "hydromt_sfincs.SfincsModel.write_forcing", "hydromt_sfincs.SfincsModel.write_states", "hydromt_sfincs.SfincsModel.write_staticgeoms", "hydromt_sfincs.SfincsModel.write_staticmaps", "hydromt_sfincs.plots.plot_basemap", "hydromt_sfincs.plots.plot_forcing", "hydromt_sfincs.read_ascii_map", "hydromt_sfincs.read_binary_map", "hydromt_sfincs.read_binary_map_index", "hydromt_sfincs.read_inp", "hydromt_sfincs.read_sfincs_his_results", "hydromt_sfincs.read_sfincs_map_results", "hydromt_sfincs.read_structures", "hydromt_sfincs.read_timeseries", "hydromt_sfincs.read_xy", "hydromt_sfincs.utils.gdf2structures", "hydromt_sfincs.utils.get_spatial_attrs", "hydromt_sfincs.utils.mask_bounds", "hydromt_sfincs.utils.mask_topobathy", "hydromt_sfincs.utils.parse_datetime", "hydromt_sfincs.utils.structures2gdf", "hydromt_sfincs.workflows.burn_river_zb", "hydromt_sfincs.workflows.cn_to_s", "hydromt_sfincs.workflows.get_rivbank_dz", "hydromt_sfincs.workflows.get_river_bathymetry", "hydromt_sfincs.workflows.landuse", "hydromt_sfincs.workflows.merge_topobathy", "hydromt_sfincs.workflows.river_boundary_points", "hydromt_sfincs.workflows.snap_discharge", "hydromt_sfincs.write_ascii_map", "hydromt_sfincs.write_binary_map", "hydromt_sfincs.write_binary_map_index", "hydromt_sfincs.write_inp", "hydromt_sfincs.write_structures", "hydromt_sfincs.write_timeseries", "hydromt_sfincs.write_xy", "API reference", "What\u2019s new", "Contributors", "Developer\u2019s environment", "Developments", "Roadmap", "Examples", "Frequently asked questions", "Installation Guide", "Getting started", "HydroMT-SFINCS: SFINCS plugin for HydroMT", "User guide", "Postprocessing and visualization", "Model methods and components", "Building or update a model", "Setting up a coastal model", "Setting up a riverine model"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 10, 14, 37, 38, 39, 43, 45, 46, 49, 51, 52, 53, 54, 56, 58, 60, 63, 90, 101, 106, 107, 108, 110, 111, 113, 114, 116], "folder": [0, 2, 3, 4, 5, 8, 9, 25, 30, 35, 60, 89, 101, 103, 106], "contain": [0, 1, 2, 4, 5, 6, 8, 9, 10, 33, 60, 79, 80, 88, 89, 103, 106, 107, 113], "sever": [0, 2, 4, 8, 34, 81, 82, 106, 112, 113], "ipython": [0, 1, 5, 6, 106], "notebook": [0, 1, 2, 4, 5, 6, 8, 101, 106], "exampl": [0, 2, 3, 4, 5, 8, 14, 31, 97, 101, 109, 115, 116], "hydromt": [0, 1, 3, 5, 6, 7, 8, 23, 42, 43, 47, 49, 50, 74, 75, 89, 101, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116], "sfinc": [0, 9, 16, 22, 24, 25, 26, 39, 45, 50, 51, 52, 53, 54, 61, 63, 67, 70, 71, 73, 74, 75, 77, 78, 80, 83, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116], "To": [0, 2, 3, 4, 106, 108, 110, 115, 116], "run": [0, 1, 4, 8, 10, 53, 54, 60, 101, 106, 110, 114], "start": [0, 2, 3, 4, 5, 15, 101, 106, 108], "binder": [0, 5, 106], "badg": [0, 106, 110], "abov": [0, 2, 3, 4, 8, 45, 82, 87, 101, 106, 108], "your": [0, 1, 2, 3, 4, 5, 6, 8, 10, 106, 110], "local": [0, 2, 4, 5, 8, 43, 51, 52, 88, 92, 106, 111], "machin": [0, 2, 106], "creat": [0, 2, 3, 4, 7, 18, 35, 45, 68, 103, 106, 108, 113], "conda": [0, 1, 6, 103, 106, 108, 110], "environ": [0, 4, 101, 106, 110], "base": [0, 2, 3, 7, 8, 10, 43, 44, 45, 46, 48, 49, 50, 51, 54, 60, 61, 64, 65, 66, 82, 87, 88, 89, 90, 91, 101, 103, 106, 110, 111, 113, 116], "yml": [0, 2, 4, 7, 8, 43, 47, 49, 103, 106, 114], "root": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 35, 63, 101, 106], "repositori": [0, 4, 8, 103, 106], "jupyt": [0, 2, 5, 106], "follow": [0, 1, 2, 3, 4, 7, 8, 80, 103, 106, 110, 113], "step": [0, 1, 5, 6, 103, 106, 110], "from": [0, 1, 5, 6, 7, 8, 9, 10, 20, 21, 23, 24, 26, 38, 39, 40, 43, 44, 45, 46, 48, 49, 51, 52, 55, 60, 63, 67, 75, 77, 79, 80, 81, 82, 83, 85, 87, 90, 96, 98, 101, 103, 106, 108, 110, 111, 113, 114, 115, 116], "env": [0, 2, 4, 5, 103, 106], "f": [0, 1, 2, 4, 5, 6, 7, 8, 103, 106], "activ": [0, 2, 4, 5, 39, 45, 54, 81, 82, 103, 106, 108, 110], "pip": [0, 8, 103, 106, 108], "instal": [0, 1, 6, 8, 103, 106, 109, 110], "hydromt_sfinc": [0, 1, 2, 3, 4, 6, 7, 8, 103, 106, 108], "For": [1, 2, 3, 4, 5, 6, 7, 8, 18, 19, 33, 55, 68, 69, 71, 79, 87, 94, 97, 106, 107, 108, 110], "an": [1, 3, 4, 5, 6, 7, 50, 101, 103, 106, 110, 113, 114, 115, 116], "interact": [1, 2, 3, 4, 5, 6, 7, 8, 106], "onlin": [1, 2, 3, 4, 5, 6, 7, 8, 110], "version": [1, 2, 3, 4, 5, 6, 7, 8, 28, 37, 58, 59, 101], "click": [1, 2, 3, 4, 5, 6, 7, 8, 113], "here": [1, 2, 3, 4, 5, 6, 7, 8, 105, 108], "1": [1, 2, 3, 4, 5, 6, 7, 8, 14, 31, 39, 44, 45, 50, 51, 53, 88, 92, 97, 110, 113, 116], "import": [1, 2, 3, 4, 5, 6, 7, 8, 113, 114], "depend": [1, 6, 7, 55, 108, 110], "xarrai": [1, 3, 6, 7, 8, 13, 29, 32, 33, 34, 36, 38, 57, 59, 82, 85, 88, 89, 90, 91, 92], "xr": [1, 3, 6, 7, 18, 19, 68, 69, 74, 81, 82, 85, 87, 88, 90], "numpi": [1, 3, 6, 7, 93], "np": [1, 3, 6, 7, 70, 71, 72, 87, 93, 94, 95], "o": [1, 4, 5, 6, 7, 8, 101, 114], "path": [1, 2, 4, 5, 6, 7, 8, 9, 14, 18, 19, 30, 35, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 60, 63, 70, 71, 72, 73, 74, 75, 76, 77, 78, 89, 93, 94, 95, 96, 97, 98, 99, 114, 115, 116], "join": [1, 6, 7], "matplotlib": [1, 2, 4, 6, 7, 8], "pyplot": [1, 6, 7, 8], "plt": [1, 6, 7, 8], "sfincsmodel": [1, 2, 3, 4, 6, 7, 8, 101, 115, 116], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 23, 24, 39, 43, 45, 46, 48, 49, 50, 51, 54, 55, 56, 60, 65, 77, 79, 80, 81, 82, 88, 89, 93, 94, 95, 98, 101, 110, 112, 113, 116], "2d": [1, 70, 93, 94, 95], "domain": [1, 2, 3, 4, 39, 45, 48, 49, 51, 52, 53, 54, 81, 88, 91, 101, 116], "sfincs_map": [1, 5, 6, 7, 23, 75, 101, 113], "nc": [1, 2, 4, 5, 6, 7, 8, 23, 74, 75, 101, 113], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 26, 33, 39, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 60, 63, 64, 66, 67, 79, 81, 82, 87, 89, 90, 91, 97, 101, 103, 108, 110, 113, 114], "save": [1, 2, 3, 4, 6, 7, 18, 19, 22, 23, 24, 25, 26, 101], "stagger": [1, 6, 7, 23, 75], "grid": [1, 2, 3, 4, 5, 6, 7, 8, 40, 43, 44, 46, 48, 50, 52, 56, 59, 75, 89, 90, 92, 114, 115, 116], "format": [1, 2, 5, 6, 7, 23, 50, 77, 83, 93, 97, 98, 99, 101, 110, 111], "see": [1, 2, 3, 4, 5, 6, 7, 8, 10, 39, 42, 43, 47, 49, 50, 93, 101, 108, 110, 113, 114, 115], "sgrid": [1, 6, 7], "convent": [1, 6, 7], "addition": [1, 5, 9, 23, 75], "observ": [1, 4, 5, 6, 7, 8, 42, 116], "point": [1, 2, 3, 4, 5, 6, 7, 8, 33, 42, 43, 49, 50, 51, 53, 54, 74, 78, 91, 92, 99, 101, 110, 116], "specifi": [1, 2, 4], "i": [1, 3, 4, 5, 6, 7, 8, 10, 14, 18, 19, 21, 23, 24, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 60, 63, 65, 66, 67, 69, 75, 77, 80, 81, 82, 87, 88, 90, 92, 97, 98, 101, 108, 113, 114, 115, 116], "also": [1, 2, 3, 4, 6, 7, 8, 39, 45, 81, 82, 101], "addit": [1, 2, 4, 79, 115, 116], "netcdf": [1, 2, 3, 4, 8, 22, 43, 48, 49, 50, 64, 74, 75], "file": [1, 2, 4, 8, 9, 10, 18, 19, 20, 21, 22, 23, 24, 25, 26, 33, 35, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 60, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 89, 93, 94, 95, 96, 97, 98, 99, 101, 103, 113, 115, 116], "sfincs_hi": [1, 5, 6, 7, 23, 74, 101, 113], "we": [1, 2, 3, 4, 5, 6, 7, 8, 101, 108, 110, 115], "show": [1, 2, 3, 4, 6, 7, 8], "how": [1, 2, 3, 4, 5, 6, 7, 8, 104, 107], "retriev": [1, 3, 6, 7], "valu": [1, 2, 3, 4, 6, 7, 9, 10, 14, 31, 33, 43, 44, 45, 46, 50, 51, 55, 60, 71, 75, 87, 90, 93, 94, 95, 98, 101, 111, 115, 116], "translat": [1, 6, 7, 23], "dimens": [1, 3, 6, 7, 23, 74, 75, 101], "node": [1, 6, 7], "indic": [1, 2, 4, 6, 7, 14, 31, 85], "m": [1, 2, 4, 5, 6, 7, 8, 39, 43, 44, 46, 48, 51, 52, 53, 54, 56, 77, 83, 88, 91, 98, 115, 116], "n": [1, 2, 3, 4, 6, 7, 44, 93, 94, 95, 101, 108], "x": [1, 2, 3, 4, 6, 7, 8, 43, 48, 49, 50, 79, 97], "y": [1, 2, 3, 4, 6, 7, 8, 43, 48, 49, 50, 77, 79, 83, 97, 98, 101], "coordin": [1, 2, 3, 4, 6, 7, 8, 12, 16, 24, 26, 38, 43, 48, 49, 50, 56, 74, 75, 78, 79, 80, 84], "order": [1, 2, 4, 6, 7, 10, 60, 113, 114], "map": [1, 2, 3, 4, 6, 7, 8, 17, 18, 38, 39, 40, 43, 44, 45, 46, 51, 52, 53, 54, 56, 59, 65, 67, 68, 70, 71, 72, 75, 87, 88, 89, 93, 94, 95, 101, 113, 115, 116], "us": [1, 3, 4, 5, 6, 7, 8, 9, 10, 24, 26, 34, 37, 38, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 71, 81, 82, 88, 90, 91, 92, 94, 101, 103, 108, 111, 113, 114, 115, 116], "pre": [1, 4, 49, 50], "simul": [1, 2, 5, 110], "call": [1, 2, 5, 9, 56, 108], "sfincs_riverin": [1, 3, 4, 6, 7, 116], "entail": 1, "riverin": [1, 2, 3, 106, 114], "itali": [1, 2, 7], "upstream": [1, 4, 50, 51, 52, 53, 54, 88, 91, 92, 116], "river": [1, 3, 4, 6, 44, 51, 52, 53, 54, 85, 87, 88, 91, 101, 116], "discharg": [1, 4, 5, 7, 33, 49, 50, 51, 53, 54, 88, 92, 101, 113, 114, 115, 116], "2": [1, 2, 3, 4, 5, 6, 7, 8, 14, 18, 31, 39, 43, 45, 68, 115], "run_path": [1, 5], "rel": [1, 6, 7, 14, 50, 51, 63, 92], "mod": [1, 2, 3, 4, 6, 7, 8], "mode": [1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 35], "r": [1, 2, 3, 4, 5, 6, 7, 8, 9, 35], "can": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 31, 34, 43, 45, 49, 60, 101, 103, 107, 108, 110, 111, 113, 114, 115, 116], "simpli": [1, 6, 7, 51], "read_result": [1, 6, 7, 101], "method": [1, 2, 3, 4, 6, 7, 8, 9, 10, 18, 37, 39, 45, 46, 48, 49, 50, 51, 53, 54, 56, 60, 68, 88, 90, 101, 115, 116], "3": [1, 2, 3, 4, 5, 6, 7, 8, 18, 39, 44, 45, 54, 68, 101], "have": [1, 2, 3, 4, 5, 7, 8, 38, 50, 85, 92, 94, 95, 101, 103, 116], "been": [1, 2, 3, 4, 7, 50, 101, 110], "found": [1, 2, 3, 4, 5, 7, 14, 21, 51, 63], "4": [1, 2, 3, 4, 5, 6, 7, 8, 39, 45, 81, 82, 101], "list": [1, 7, 10, 18, 60, 68, 75, 76, 79, 84, 97, 114], "kei": [1, 7, 8, 10, 14, 31, 60, 80], "39": [1, 2, 3, 4, 5, 7, 8], "inp": [1, 2, 3, 4, 5, 7, 8, 9, 16, 22, 24, 25, 26, 61, 73, 80, 96, 101, 113], "msk": [1, 2, 3, 4, 5, 7, 8, 18, 26, 39, 43, 45, 54, 68, 71, 94, 95, 101], "qinf": [1, 3, 7, 26], "zb": [1, 6, 7, 23, 51, 75, 85, 88], "z": [1, 5, 6, 7, 55, 79, 97], "h": [1, 6, 7, 43, 77, 83, 98, 101, 110, 115, 116], "zsmax": [1, 7, 23, 75], "hmax": [1, 6, 7, 23, 75], "cuminf": [1, 7], "total_runtim": [1, 7], "average_dt": [1, 7], "point_zb": [1, 7], "point_z": [1, 7], "point_h": [1, 6, 7], "point_u": [1, 7], "point_v": [1, 7], "point_qinf": [1, 7], "do": [1, 2, 5, 8, 101, 108], "you": [1, 2, 3, 4, 5, 8, 101, 103, 104, 107, 108, 110, 113], "idea": 1, "what": [1, 2, 5], "might": [1, 2, 5, 110], "mean": [1, 2, 4, 5, 8, 43, 48, 115], "spatial": [1, 2, 3, 8, 19, 38, 43, 46, 47, 48, 69, 88, 90, 101, 110, 115], "instanc": [1, 2, 3, 4, 8, 18, 68, 110], "includ": [1, 2, 3, 4, 7, 8, 10, 22, 25, 26, 39, 45, 60, 67, 81, 82], "level": [1, 2, 3, 4, 5, 6, 8, 10, 14, 31, 43, 51, 60, 85, 88, 101, 113], "certain": 1, "gener": [1, 2, 3, 4, 8, 89, 107], "averag": [1, 2, 4, 5, 8], "topographi": [1, 2, 8, 43, 101, 113, 115], "bathymetri": [1, 2, 4, 46, 51, 52, 56, 85, 88, 90, 101, 113, 115, 116], "let": [1, 2, 3, 4, 8], "": [1, 2, 3, 4, 6, 7, 8, 14, 31, 44, 45, 49, 50, 51, 77, 81, 82, 83, 86, 88, 93, 94, 95, 98, 110], "5": [1, 2, 3, 4, 5, 6, 7, 8, 43, 97, 101, 115, 116], "fig": [1, 6, 7, 18, 19, 68, 69], "ax": [1, 2, 4, 6, 7, 18, 19, 68, 69], "plot_basemap": [1, 2, 3, 4, 6, 7, 8], "fn_out": [1, 3, 6, 7, 18, 19], "none": [1, 2, 3, 4, 6, 7, 8, 9, 10, 14, 16, 18, 19, 21, 24, 26, 32, 33, 34, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 68, 74, 75, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 115, 116], "bmap": [1, 6, 7, 18, 68], "sat": [1, 6, 7, 18, 68], "figsiz": [1, 2, 4, 6, 7, 8, 18, 68], "11": [1, 2, 3, 4, 5, 6, 7, 8, 18, 68], "7": [1, 2, 3, 4, 5, 6, 7, 8, 98], "identifi": [1, 8, 87], "where": [1, 2, 3, 5, 6, 7, 8, 10, 46, 53, 54, 60, 90, 91, 94, 95, 103, 115], "request": 1, "And": 1, "mani": [1, 2, 5, 101, 110], "hint": 1, "ob": [1, 3, 4, 5, 6, 7, 8, 25, 42, 66], "now": [1, 2, 4, 8, 101], "look": [1, 2, 3, 4, 5, 8], "like": [1, 2, 5, 44], "station": [1, 6], "6": [1, 2, 3, 4, 5, 6, 7, 8, 55, 97], "gaug": [1, 2, 4, 6, 7, 8, 42, 43, 49, 50, 101, 115, 116], "locat": [1, 2, 3, 4, 5, 6, 7, 8, 14, 33, 42, 43, 47, 49, 50, 53, 54, 91, 92, 101, 103, 114, 115, 116], "next": [1, 3, 4, 6, 101], "figur": [1, 2, 4, 6, 18, 19, 68], "h_point": [1, 6], "renam": [1, 6, 101], "station_id": [1, 6], "astyp": [1, 6], "int": [1, 6, 16, 18, 23, 24, 26, 46, 50, 53, 54, 56, 68, 71, 74, 75, 78, 80, 81, 82, 84, 87, 90, 92], "_": [1, 3, 4, 6, 8], "line": [1, 2, 4, 5, 6, 8, 45, 51, 55, 81, 82, 91, 107, 110, 113], "ha": [1, 2, 3, 4, 5, 8, 40, 50, 55, 90, 92, 101, 110, 115], "larg": 1, "increas": [1, 2, 4, 8], "much": [1, 110], "dure": [1, 8], "peak": 1, "each": [1, 2, 4, 6, 8, 32, 34, 36, 52, 54, 87, 114, 115, 116], "cell": [1, 2, 3, 4, 5, 6, 39, 43, 44, 45, 46, 50, 51, 52, 53, 54, 75, 81, 82, 85, 87, 88, 90, 91, 92, 94, 95, 101, 115, 116], "face": [1, 6, 7, 75], "everi": [1, 6, 8, 114], "4th": [1, 6], "hour": [1, 6], "0": [1, 2, 3, 4, 5, 6, 7, 8, 39, 43, 44, 45, 46, 50, 51, 53, 54, 55, 71, 75, 80, 82, 87, 88, 90, 91, 92, 94, 95, 97, 115, 116], "attr": [1, 6, 7, 8], "updat": [1, 2, 3, 4, 6, 7, 10, 31, 33, 39, 41, 45, 46, 51, 52, 61, 101, 106, 110, 111, 113], "long_nam": [1, 6, 7], "unit": [1, 2, 3, 6, 7, 8, 92], "sel": [1, 6], "col": [1, 6], "col_wrap": [1, 6], "vmax": [1, 3, 6, 7], "lt": [1, 2, 3, 4, 6], "facetgrid": [1, 6], "0x7f242a9f1880": 1, "gt": [1, 2, 3, 4, 5, 6], "simpl": [1, 3, 6, 8], "make": [1, 3, 4, 6, 8, 103, 108, 110, 111], "add": [1, 2, 4, 6, 7, 18, 32, 34, 36, 38, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 68], "surfac": [1, 4, 6], "blue": [1, 4, 6], "color": [1, 6], "overland": [1, 6, 7], "flood": [1, 2, 6, 7, 110, 115, 116], "viridi": [1, 6, 7], "colormap": [1, 6], "8": [1, 2, 3, 4, 5, 7, 8, 39, 45, 65, 81, 82, 93], "mask": [1, 2, 3, 4, 5, 6, 39, 44, 45, 51, 53, 54, 81, 82, 85, 87, 88, 94, 95, 101], "rivmsk": [1, 4, 6, 44, 51, 88, 101], "product": [1, 6], "setup_river_geomerti": [1, 6], "setup": [1, 2, 5, 6, 8, 9, 10, 40, 42, 43, 44, 47, 48, 49, 50, 52, 53, 54, 55, 56, 60, 101, 115, 116], "compon": [1, 2, 3, 4, 6, 8, 44, 52, 56, 60, 101, 106, 111, 114], "staticmap": [1, 2, 3, 4, 6, 7, 8, 18, 26, 28, 38, 44, 45, 61, 67, 68, 101, 113], "hmin": [1, 6, 7, 75], "da_h": [1, 6], "drop": [1, 6, 23, 75, 101], "spatial_ref": [1, 3, 6], "insid": [1, 4, 6, 39, 45, 116], "perman": [1, 6, 7], "bodi": [1, 6], "da_hriv": [1, 6], "sfincs_h": [1, 6], "mp4": [1, 6], "requir": [1, 2, 4, 6, 32, 33, 34, 35, 36, 40, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 79, 97, 101, 110, 116], "ffmpeg": [1, 6], "c": [1, 6, 8, 14, 31, 108, 110], "forg": [1, 6, 108, 110], "one": [1, 3, 4, 6, 10, 45, 48, 60, 75, 81, 82, 106, 114], "frame": [1, 6], "dtout": [1, 2, 3, 6], "cbar_kwarg": [1, 6, 7], "shrink": [1, 6, 7], "anchor": [1, 6, 7], "def": [1, 6], "update_plot": [1, 6], "cax_h": [1, 6], "cax_hriv": [1, 6], "da_hi": [1, 6], "isel": [1, 6], "t": [1, 2, 3, 5, 6, 33, 110], "dt": [1, 6, 83], "strftime": [1, 6], "d": [1, 2, 3, 4, 5, 6, 8, 14, 31, 77, 83, 88, 91, 92, 98, 110, 114], "b": [1, 6, 14, 31], "item": [1, 6], "set_titl": [1, 6, 7], "set_arrai": [1, 6], "ravel": [1, 6], "da_hrivi": [1, 6], "plot_bound": [1, 6, 7, 18, 68], "fals": [1, 2, 3, 4, 6, 7, 8, 14, 18, 32, 34, 36, 39, 42, 45, 48, 51, 52, 53, 54, 55, 68, 81, 82], "vmin": [1, 6, 7], "cmap": [1, 6, 7], "cm": [1, 6, 7, 101], "bone": [1, 6], "close": [1, 4, 5, 6, 53, 101], "prevent": [1, 6], "doubl": [1, 6], "ani": [1, 2, 6, 8, 14, 45, 56, 81, 82, 110], "funcanim": [1, 6], "arang": [1, 6], "size": [1, 2, 4, 6, 18, 23, 50, 68, 74, 75, 92], "interv": [1, 4, 6], "250": [1, 3, 6], "between": [1, 2, 3, 4, 6, 8, 43, 46, 50, 92, 101, 108, 115], "farg": [1, 6], "fp": [1, 6], "dpi": [1, 6, 7], "200": [1, 6], "displai": [1, 2, 4, 6, 8], "html": [1, 6], "to_html5_video": [1, 6], "browser": [1, 6], "doe": [1, 2, 5, 6, 8, 92, 110], "support": [1, 6, 10, 60, 80, 101], "video": [1, 6], "tag": [1, 6], "largest": 1, "demonstr": [2, 4, 5, 8], "prepar": [2, 4, 5, 8, 89, 113], "code": [2, 4, 5, 8, 24, 26, 56, 103, 110, 116], "execut": [2, 4, 5, 8, 10, 108, 116], "schemat": [2, 3, 8, 20, 60, 62, 110, 111, 113, 114, 115, 116], "featur": [2, 87, 104], "onli": [2, 3, 4, 8, 10, 18, 33, 39, 43, 45, 48, 49, 50, 51, 53, 55, 68, 81, 82, 92, 101, 116], "consid": [2, 8, 75], "merit": 2, "hydro": [2, 110], "dataset": [2, 3, 4, 7, 8, 13, 18, 29, 32, 34, 36, 38, 43, 46, 49, 50, 56, 57, 59, 68, 74, 75, 88, 89, 90, 92, 101, 110, 113, 116], "elev": [2, 3, 4, 39, 43, 44, 45, 46, 51, 52, 55, 56, 79, 81, 82, 85, 87, 88, 90, 101, 115], "boundari": [2, 3, 4, 5, 18, 39, 43, 45, 49, 50, 51, 53, 54, 68, 81, 91, 92, 101, 115, 116], "condit": [2, 5, 18, 39, 40, 45, 49, 50, 68, 115, 116], "global": [2, 7, 8, 101, 110, 111, 115, 116], "tide": [2, 8], "surg": [2, 8], "impos": 2, "number": [2, 4, 5, 40, 46, 50, 86, 90, 92, 101, 115, 116], "forc": [2, 4, 19, 22, 32, 33, 34, 36, 43, 47, 48, 49, 50, 53, 64, 69, 101], "expect": [2, 50], "all": [2, 3, 4, 5, 10, 18, 38, 39, 43, 45, 60, 66, 67, 68, 91, 101, 116], "which": [2, 3, 4, 5, 8, 45, 49, 51, 52, 56, 63, 79, 110, 113, 114], "command": [2, 4, 5, 8, 107, 108, 110, 113], "within": [2, 3, 4, 5, 8, 45, 46, 49, 50, 51, 53, 54, 81, 82, 88, 90, 91, 92, 101, 116], "except": [2, 3, 5], "lab": [2, 5], "log": [2, 4, 8], "messag": [2, 4, 5, 8], "shown": [2, 4, 5, 8, 115, 116], "after": [2, 4, 5, 10, 39, 45, 46, 49, 53, 54, 56, 60, 81, 82, 90, 108], "copi": [2, 4, 8, 101], "past": [2, 4], "shell": [2, 4], "more": [2, 3, 4, 8, 93, 107, 108, 110, 114], "direct": [2, 3, 4, 51, 52, 85, 88, 91, 116], "feedback": [2, 4, 8], "u": [2, 5, 8], "provid": [2, 4, 6, 8, 24, 26, 43, 48, 50, 51, 52, 55, 89, 90, 92, 104, 110, 112, 113, 114, 115, 116], "help": [2, 4, 8, 113], "usag": [2, 4, 8], "option": [2, 4, 8, 9, 10, 14, 18, 21, 23, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 60, 63, 68, 71, 74, 75, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 94, 97, 98, 101, 114], "arg": [2, 5, 14, 31], "exit": [2, 4, 8], "print": [2, 4, 5, 7, 8], "availab": 2, "plugin": [2, 4, 8, 103, 105, 111, 112, 113, 114], "clip": [2, 4, 8, 43, 49], "With": [2, 4, 111, 113], "flag": [2, 4], "ask": 2, "recogn": [2, 3, 4], "should": [2, 3, 4, 5, 8, 33, 56, 79, 80, 92, 93, 94, 95, 101, 103, 114], "mention": [2, 22, 24, 25, 26], "dev0": [2, 4, 8], "dev": [2, 4, 8], "grid_model": [2, 4, 8], "lumped_model": [2, 4, 8], "network_model": [2, 4, 8], "It": [2, 5, 110], "want": [2, 8, 103, 115], "work": [2, 4, 8, 52, 107, 113, 114], "avail": [2, 3, 4, 5, 8, 18, 50, 68, 108, 110, 111, 113, 114], "model_root": [2, 4, 8, 18, 19, 115, 116], "region": [2, 4, 7, 8, 10, 12, 18, 39, 43, 45, 56, 68, 81, 82, 90, 91, 101, 113, 115, 116], "wflow": [2, 4, 8, 114], "subbasin": [2, 4], "snap": [2, 4, 50, 92, 101], "stream": [2, 4, 116], "34": [2, 3, 4, 5, 8], "24": [2, 4], "62": [2, 4], "09": [2, 4], "strord": [2, 4], "wflow_config": [2, 4, 8], "ini": [2, 4, 8, 10, 60, 114, 115, 116], "deltares_data": [2, 4, 8, 9], "data_catalog": [2, 4, 7, 8, 43, 47, 49], "v": [2, 4, 5, 8], "bbox": [2, 4, 114, 115, 116], "6891": [2, 4], "52": [2, 4], "9750": [2, 4], "9576": [2, 4], "53": [2, 4], "1994": [2, 4], "sfincs_config": [2, 4], "re": [2, 3, 4, 10, 56], "float": [2, 4, 10, 39, 43, 44, 45, 46, 48, 50, 51, 53, 54, 55, 56, 71, 75, 79, 81, 82, 85, 87, 88, 90, 91, 92], "resolut": [2, 4, 8, 10, 28, 48, 52, 56, 89, 110, 115], "src": [2, 3, 4, 5, 7, 18, 25, 33, 49, 50, 53, 66, 68, 101, 113], "deprec": [2, 4, 28, 37, 58, 59], "opt": [2, 4, 8, 9, 10, 60], "text": [2, 4, 7, 8, 101], "specif": [2, 3, 4, 8, 10, 60, 110, 113], "keyword": [2, 4, 8], "argument": [2, 4, 8, 10, 34, 39, 60, 101, 115, 116], "document": [2, 4, 8, 108, 110, 113, 114], "inform": [2, 4, 5, 8, 104, 108, 110], "about": [2, 4, 8, 108, 110, 114], "config": [2, 3, 4, 8, 9, 14, 16, 21, 31, 33, 41, 43, 49, 61, 63, 64, 65, 66, 67, 80, 107, 113], "configur": [2, 8, 10, 11, 20, 22, 24, 25, 26, 60, 62, 80, 113], "implement": [2, 4, 8, 101, 110], "yaml": [2, 4, 8, 114], "catalog": [2, 4, 7, 8, 114], "OR": [2, 4, 8], "name": [2, 3, 4, 8, 10, 18, 32, 33, 34, 36, 37, 38, 39, 40, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 60, 68, 92, 97], "predefin": [2, 4, 8], "dd": [2, 4, 8], "deltar": [2, 4, 8, 103, 110], "shortcut": [2, 4, 8], "q": [2, 4, 8, 87, 101, 115, 116], "quiet": [2, 4, 8], "decreas": [2, 4, 8], "verbos": [2, 4, 8], "try": 2, "entir": [2, 8], "just": 2, "awesom": 2, "In": [2, 3, 4, 5, 35, 101, 108, 114, 116], "section": [2, 8, 114, 115, 116], "bound": [2, 3, 4, 39, 45, 81, 82, 115, 116], "box": [2, 4, 115, 116], "veri": [2, 8], "intuit": 2, "exactli": [2, 3], "store": [2, 3, 32, 34, 36], "texel_sfinc": 2, "68": 2, "97": [2, 4], "96": 2, "20": [2, 3, 5, 8, 87, 97, 116], "2022": [2, 4, 5, 8, 110], "29": [2, 4, 5, 8], "06": [2, 3, 4, 8], "13": [2, 3, 4, 8], "48": 2, "077": 2, "depfil": [2, 3, 4, 113], "dep": [2, 3, 4, 5, 8, 18, 26, 43, 46, 51, 52, 55, 56, 68, 101], "mskfile": [2, 3, 4, 113], "indexfil": [2, 3, 4], "ind": [2, 3, 4, 5, 8, 71, 72], "taken": [2, 3, 51, 67, 79], "few": [2, 8], "second": [2, 10, 39, 43, 45, 46, 60, 77, 81, 82, 90, 98, 116], "miser": 2, "crash": [2, 5], "happen": 2, "wa": [2, 101], "did": [2, 4, 5], "find": [2, 3, 110], "therefor": [2, 110], "automat": 2, "download": [2, 4, 7, 103], "sampl": [2, 8], "home": [2, 4, 7, 8], "under": [2, 8], "hydromt_data": [2, 4, 7, 8], "tri": 2, "texel": 2, "ala": 2, "cover": [2, 4, 44, 115, 116], "area": [2, 3, 4, 8, 27, 39, 45, 46, 50, 51, 52, 53, 54, 81, 82, 88, 91, 92, 101, 116], "outsid": [2, 39, 45, 46, 90], "extent": [2, 7, 46], "own": [2, 3], "connect": [2, 4, 39, 45, 51, 81, 82, 85, 101], "network": 2, "adapt": 2, "fit": [2, 50, 92], "piav": [2, 4], "basin": [2, 4], "its": [2, 4, 45, 81, 82, 110, 113, 114], "surround": [2, 45, 46, 82, 101], "A": [2, 101, 110, 115, 116], "good": 2, "place": 2, "csv": [2, 3, 4, 8, 43, 44, 47, 49, 115, 116], "http": [2, 7, 103, 110], "boundingbox": 2, "klokantech": 2, "com": [2, 7, 102, 103], "vv": [2, 4, 114, 115, 116], "extra": [2, 4, 8], "venice_sfinc": [2, 8], "12": [2, 3, 4, 5, 8], "05": [2, 3, 50, 92], "45": [2, 3, 4, 5, 8], "30": [2, 5, 18, 68], "85": [2, 5], "65": [2, 4, 5], "50": [2, 3, 4, 5, 50, 51, 88, 92, 116], "452": 2, "debug": [2, 4, 8], "write": [2, 4, 8, 9, 10, 21, 35, 54, 60, 63, 64, 65, 66, 67, 93, 94, 95, 96, 97, 98, 99, 101, 113], "new": [2, 3, 4, 8, 14, 31, 32, 34, 36, 38, 39, 42, 46, 54, 55, 90, 103, 104, 115], "runner": [2, 4, 7, 8], "doc": [2, 4, 8], "_exampl": [2, 4, 8], "info": [2, 3, 4, 5, 8, 114], "main": [2, 4, 8], "user": [2, 4, 8, 109, 114], "set": [2, 3, 4, 7, 8, 10, 33, 39, 43, 45, 47, 49, 50, 51, 60, 82, 101, 110, 111, 114], "471": 2, "model_api": [2, 4, 8], "initi": [2, 3, 4, 5, 8, 35, 39, 45, 81, 82, 115, 116], "v0": [2, 4, 7, 8], "472": 2, "setup_region": [2, 4, 56, 101, 113, 114, 116], "hydrography_fn": [2, 4, 52, 53, 54, 101, 116], "merit_hydro": [2, 4, 53, 54, 115, 116], "basin_index_fn": [2, 4, 116], "merit_hydro_index": [2, 4, 116], "basin_mask": [2, 4], "pars": [2, 4, 8, 10, 15, 21, 60, 73, 74, 75, 77, 78, 83], "kind": [2, 4], "478": 2, "479": 2, "default": [2, 3, 4, 5, 9, 10, 14, 18, 21, 23, 32, 34, 36, 39, 40, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 60, 68, 71, 74, 75, 81, 82, 83, 85, 87, 88, 90, 91, 92, 93, 94, 98, 99, 101, 111], "read": [2, 4, 5, 8, 9, 21, 22, 23, 24, 25, 26, 35, 70, 71, 72, 73, 74, 75, 76, 77, 78, 101, 113, 115, 116], "usr": [2, 4], "share": [2, 4], "miniconda": [2, 4], "lib": [2, 4, 5], "python3": [2, 4], "9": [2, 3, 4, 5, 8], "site": [2, 4, 5], "packag": [2, 4, 5, 6, 108, 110, 111, 113], "480": 2, "without": [2, 4, 5, 40], "e": [2, 3, 4, 8, 31, 39, 43, 45, 46, 49, 50, 51, 52, 54, 75, 81, 82, 93, 94, 95, 103, 113, 116], "output": [2, 4, 8, 18, 19, 48, 71, 74, 75, 77, 94, 95, 97, 98, 99, 111, 113, 115], "full": [2, 3, 4, 10, 60, 113], "given": [2, 4, 14, 18, 19, 31, 33, 45, 82, 98], "describ": [2, 4, 39, 45, 76, 79, 81, 82, 84, 97, 115], "give": [2, 4, 8], "some": [2, 3, 4, 8, 107, 108], "screen": [2, 4, 8], "note": [2, 3, 4, 7, 14, 28, 39, 43, 45, 46, 47, 49, 51, 52, 53, 54, 56, 59, 80, 81, 82, 90, 93, 94, 95, 108, 113, 114, 116], "As": [2, 4, 116], "need": [2, 3, 4, 8], "newli": 2, "gi": [2, 3, 4, 5, 7, 8, 25, 66, 67, 101, 111], "geometri": [2, 3, 4, 18, 25, 27, 39, 42, 45, 51, 53, 54, 55, 68, 79, 81, 82, 92, 99, 115, 116], "geojson": [2, 4, 9, 25, 66, 116], "l": [2, 3, 8], "instead": [2, 4, 24, 26, 42, 55, 101], "If": [2, 3, 4, 5, 8, 10, 14, 18, 19, 21, 25, 32, 33, 34, 36, 39, 42, 43, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 60, 66, 67, 68, 81, 82, 85, 88, 90, 91, 103, 110], "don": 2, "done": [2, 3, 35], "determin": [2, 4, 8, 91, 101, 116], "typic": [2, 3, 92, 110, 115, 116], "up": [2, 110, 111], "setup_": [2, 10, 60], "refer": [2, 4, 8, 9, 12, 16, 24, 26, 43, 46, 51, 56, 74, 75, 78, 80, 84, 88, 101, 109, 110], "end": [2, 3, 4, 10, 15, 60, 116], "_fn": [2, 4], "sourc": [2, 3, 4, 5, 7, 9, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 33, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 110, 114, 115, 116], "case": [2, 3, 5, 52, 56], "user_root": [2, 4], "fn_ini": [2, 4, 5, 8], "sfincs_coast": [2, 8, 114, 115], "open": [2, 3, 4, 8, 9, 18, 53, 54, 68, 101, 110], "txt": [2, 4, 5, 8], "setup_config": [2, 4, 8, 113, 115, 116], "tref": [2, 3, 4, 8, 77, 98, 115, 116], "20100201": [2, 8, 115], "000000": [2, 3, 4, 8, 115, 116], "tstart": [2, 3, 4, 8, 15, 43, 49, 115, 116], "tstop": [2, 3, 4, 8, 15, 43, 49, 115, 116], "20100210": [2, 8, 115], "alpha": [2, 3, 4, 115, 116], "zsini": [2, 3, 4, 24, 65, 115, 116], "setup_topobathi": [2, 4, 101, 113, 114, 115, 116], "topobathy_fn": [2, 4, 46, 56, 115, 116], "topobathi": [2, 4, 46, 56, 90, 115, 116], "basemap": [2, 4, 18, 56, 68, 101, 115, 116], "elevtn": [2, 4, 46, 88, 115, 116], "cr": [2, 3, 4, 8, 16, 23, 24, 26, 48, 52, 56, 74, 75, 78, 80, 84, 115, 116], "utm": [2, 3, 4, 56, 115], "must": [2, 3, 38, 55, 56, 115], "zone": [2, 3, 4, 56, 115], "setup_merge_topobathi": [2, 101, 113, 115], "gebco": [2, 115], "mask_fn": [2, 39, 45, 46, 101, 115], "osm_coastlin": [2, 115], "sea": [2, 44, 115], "polygon": [2, 39, 45, 46, 91, 101, 115], "offset_fn": [2, 8, 43, 46, 115], "dtu10mdt_egm96": [2, 8, 115], "dynam": [2, 8, 43, 113, 115], "account": [2, 115], "differ": [2, 7, 8, 43, 46, 52, 92, 101, 108, 115], "vertic": [2, 39, 43, 45, 46, 81, 82, 90, 101, 115], "datum": [2, 3, 46, 90, 115], "current": [2, 3, 8, 46, 60, 115], "merge_method": [2, 46, 90, 115], "valid": [2, 3, 45, 46, 51, 82, 87, 90, 91, 101, 115], "invalid": [2, 46, 90, 94, 95, 115], "nodata": [2, 3, 4, 7, 45, 46, 75, 86, 90, 115], "merge_buff": [2, 46, 90, 115], "buffer": [2, 4, 7, 8, 39, 43, 46, 51, 53, 90, 115], "fill": [2, 51, 101, 115], "linear": [2, 46, 90, 115], "interpol": [2, 4, 46, 56, 90, 101, 115], "setup_mask": [2, 3, 39, 53, 54, 101, 113, 115], "elv_min": [2, 39, 45, 46, 81, 82, 90, 115], "minimum": [2, 4, 7, 39, 45, 46, 51, 53, 54, 75, 81, 82, 87, 88, 90, 91, 115, 116], "setup_cn_infiltr": [2, 4, 101, 113, 115, 116], "cn_fn": [2, 4, 40, 115, 116], "gcn250": [2, 4, 40, 115, 116], "curv": [2, 4, 40, 86, 101, 115, 116], "antecedent_runoff_condit": [2, 4, 40, 115, 116], "avg": [2, 4, 40, 115, 116], "dry": [2, 4, 40, 115, 116], "wet": [2, 4, 40, 115, 116], "setup_manning_rough": [2, 4, 101, 113, 115, 116], "lulc_fn": [2, 4, 8, 44, 115, 116], "vito": [2, 4, 8, 115, 116], "land": [2, 4, 44, 115, 116], "map_fn": [2, 4, 44, 115, 116], "lulc": [2, 4, 44, 89, 115, 116], "_map": [2, 3, 4, 115, 116], "setup_bound": [2, 3, 45, 54, 101, 113, 115], "btype": [2, 39, 91, 115], "waterlevel": [2, 3, 8, 18, 24, 33, 39, 43, 45, 53, 54, 65, 68, 113, 115, 116], "type": [2, 3, 8, 14, 18, 19, 33, 39, 55, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 94, 97, 115], "outflow": [2, 3, 4, 39, 45, 54, 91, 101, 115, 116], "setup_h_forc": [2, 8, 113, 115], "geodataset_fn": [2, 4, 8, 43, 49, 115, 116], "gtsm_locat": [2, 115], "timeseries_fn": [2, 4, 8, 43, 49, 115, 116], "gtsm_timeseri": [2, 115], "time": [2, 3, 5, 6, 8, 15, 23, 33, 43, 47, 48, 49, 50, 74, 75, 77, 98, 110, 115], "seri": [2, 8, 43, 49, 50, 115], "1e4": [2, 115], "around": [2, 4, 8, 43, 46, 50, 53, 92, 101, 115], "select": [2, 8, 38, 39, 43, 45, 49, 81, 82, 101, 115], "setup_p_forcing_from_grid": [2, 8, 101, 113, 115], "precip_fn": [2, 8, 47, 48, 115], "era5_hourli": [2, 8, 115], "precipit": [2, 3, 47, 48, 115, 116], "precip": [2, 3, 8, 22, 33, 47, 48, 64, 77, 98, 101, 115], "dst_re": [2, 8, 48, 115], "aggreg": [2, 8, 48, 101, 115], "true": [2, 3, 4, 8, 9, 10, 14, 18, 32, 34, 36, 39, 42, 45, 48, 51, 52, 53, 54, 55, 60, 66, 67, 68, 81, 82, 85, 88, 90, 91, 115], "return": [2, 4, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 48, 57, 59, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 115], "uniform": [2, 8, 43, 46, 47, 48, 90, 101, 115], "forward": 2, "basic": 2, "These": [2, 4, 5, 79, 104], "minim": [2, 31, 50, 54, 101, 116], "demand": 2, "static": [2, 8, 59, 106], "layer": [2, 3, 8, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 88], "mai": [2, 8, 51, 108], "alter": [2, 8], "suppli": [2, 79], "merg": [2, 43, 46, 88, 90, 101], "depth": [2, 4, 51, 75, 88, 101, 106, 116], "potenti": [2, 40, 86], "maximum": [2, 39, 40, 45, 46, 50, 81, 82, 86, 88, 90, 92, 101, 106, 111], "soil": [2, 40, 86, 101], "retent": [2, 40, 86, 101], "man": [2, 3, 4, 5, 8, 26, 44, 51, 88], "rough": [2, 4, 44, 101, 113], "consist": [2, 101, 111], "lookup": 2, "tabl": [2, 44, 89, 113], "relat": [2, 88, 89, 108], "class": [2, 9, 44, 89], "sec": 2, "edg": [2, 39, 75, 81, 101], "water": [2, 3, 8, 43, 75, 101, 106, 110], "data_sourc": [2, 114], "compound": [2, 110], "quit": 2, "essenti": 2, "150": 2, "venice_sfincs_150": 2, "040": 2, "072": 2, "079": [2, 8], "081": 2, "reproj_method": [2, 4, 46, 56, 90], "bilinear": [2, 4, 46, 56, 90], "148": [2, 4], "artifact_data": [2, 4, 7, 8, 9], "archiv": [2, 4, 8], "474": 2, "tar": 2, "gz": 2, "747": 2, "unpack": 2, "54": 2, "864": 2, "954": 2, "datacatalog": [2, 4, 8], "rasterdataset": [2, 3, 4, 7, 8, 48, 75], "raster": [2, 4, 7, 8, 46, 51, 52, 53, 54, 56, 85, 91], "variabl": [2, 3, 4, 6, 7, 18, 32, 34, 36, 38, 43, 46, 48, 49, 50, 51, 52, 68, 75, 88, 92, 101], "tif": [2, 3, 4, 7], "55": [2, 5], "026": [2, 4], "geom": [2, 3, 4, 7, 8, 18, 37, 42, 43, 49, 50, 51, 53, 54, 55, 58, 68, 88, 116], "032": 2, "282": [2, 5], "863": 2, "668": [2, 8], "125": [2, 8], "elv_max": [2, 39, 45, 46, 81, 82, 90], "max_width": [2, 46, 90, 101], "offset_const": [2, 46], "interp_method": [2, 46, 90, 101], "131": [2, 4], "161": 2, "031": 2, "862": 2, "667": 2, "185": 2, "geodatafram": [2, 3, 4, 8, 18, 27, 33, 37, 68, 78, 79, 81, 82, 84, 85, 87, 88, 91, 92, 99], "vector": [2, 3, 4, 8, 91], "gpkg": 2, "258": 2, "281": 2, "807": 2, "1075": 2, "917": 2, "warn": [2, 4, 5, 8, 9, 75, 80, 82, 85, 88, 89, 90, 91, 92], "replac": [2, 4, 8, 46, 59, 90, 101], "919": 2, "920": 2, "include_mask_fn": [2, 39, 45, 101], "exclude_mask_fn": [2, 39, 45, 101], "fill_area": [2, 45, 82, 101], "10": [2, 3, 4, 5, 7, 8, 45, 53, 82, 97, 110, 116], "drop_area": [2, 45, 82, 101], "921": 2, "all_touch": [2, 45, 81, 82], "reset_mask": [2, 45, 101], "942": 2, "util": [2, 3, 75, 101], "gap": [2, 46], "rang": [2, 3, 45, 46, 82, 90, 101, 110], "km2": [2, 4, 45, 50, 51, 52, 53, 54, 82, 88, 91, 92, 116], "944": 2, "79345": 2, "955": 2, "957": 2, "deriv": [2, 4, 43, 51, 52, 101], "969": 2, "970": [2, 4], "971": [2, 4], "56": [2, 4], "000": [2, 4, 8], "852": 2, "riv_man": [2, 4, 44], "03": [2, 4, 44], "lnd_man": [2, 4, 44], "sea_man": [2, 4, 44, 101], "107": 2, "143": 2, "landus": [2, 4, 8, 44, 113], "resampl": [2, 4], "999": [2, 4], "245": 2, "246": 2, "mask_buff": [2, 39], "reset_bound": [2, 39, 101], "253": 2, "257": 2, "epsg": [2, 3, 4, 8, 24, 26, 56, 80, 116], "4326": [2, 3, 4, 8, 116], "295": [2, 4], "297": 2, "510": 2, "10000": [2, 4, 51, 88], "311": 2, "geodataset": [2, 3, 8, 43, 49, 74, 101], "736": 2, "32633": [2, 3, 8], "278900": 2, "5008550": 2, "342400": 2, "5059900": 2, "764": 2, "slice": 2, "dim": [2, 8, 33], "datetim": [2, 33, 77, 83, 98], "2010": 2, "772": [2, 4], "bnd": [2, 3, 8, 25, 33, 43, 66, 101, 113], "773": [2, 4], "bz": [2, 3, 8, 33, 43, 77, 98, 101], "774": [2, 4], "794": 2, "804": 2, "828": 2, "convert": [2, 3, 46, 79, 84, 86, 90, 111], "838": 2, "894": [2, 4], "941": 2, "binari": [2, 4, 26, 67, 71, 72, 94, 95, 110], "943": 2, "sc": [2, 3, 4, 5, 8, 26, 40], "983": 2, "subfold": [2, 4, 8, 25, 66, 67], "57": [2, 3], "084": 2, "105": 2, "122": 2, "notic": [2, 101], "written": [2, 5, 66, 67, 101, 113], "One": 2, "input": [2, 4, 5, 8, 48, 52, 54, 56, 110], "defin": [2, 3, 4, 8, 39, 45, 51, 81, 82, 88, 91, 101, 114, 115, 116], "fn_inp": 2, "mmax": [2, 3, 80], "425": [2, 5], "nmax": [2, 3, 80], "272": 2, "dx": [2, 3, 80], "dy": [2, 3, 80], "x0": [2, 3, 80], "268650": [2, 8], "y0": [2, 3, 80], "5018550": [2, 8], "rotat": [2, 3, 80], "inputformat": [2, 3], "bin": [2, 3], "outputformat": [2, 3], "net": [2, 3], "3600": [2, 3], "dthisout": [2, 3], "600": [2, 3], "dtmaxout": [2, 3, 4, 116], "86400": [2, 3, 4, 116], "advect": [2, 3], "huthresh": [2, 3], "theta": [2, 3], "min_lev_hmax": [2, 3], "scsfile": [2, 40, 101, 113], "manningfil": [2, 44, 113], "precipfil": [2, 47, 48, 113], "bzsfile": [2, 113], "bndfile": [2, 113], "closer": [2, 4], "python": [2, 4, 101, 106, 110, 113], "script": [2, 4], "load": [2, 3, 4], "modul": [2, 4], "inlin": [2, 4, 8], "memori": [2, 4], "lagoon": 2, "well": [2, 8, 25, 92], "repres": [2, 3, 8, 77], "better": [2, 101], "achiev": 2, "coastlin": 2, "shapefil": 2, "osm": [2, 68], "togeth": [2, 101], "shade": [2, 18, 68], "1300x700": 2, "geoaxessubplot": [2, 4], "titl": [2, 4], "center": [2, 4, 45, 81, 82], "xlabel": [2, 4], "33n": [2, 3, 4], "ylabel": [2, 4], "exist": [2, 3, 35, 39, 42, 45, 46, 54, 55, 60, 90, 106, 114], "g": [2, 3, 4, 8, 43, 49, 50, 116], "sfincs_update_model": 2, "ipynb": 2, "geopanda": [3, 18, 33, 68, 79, 81, 82, 84, 85, 88, 91, 92, 99], "gpd": [3, 78, 85, 87, 88], "panda": [3, 8, 33, 98], "pd": [3, 8, 77, 98], "preprocess": 3, "manual": [3, 110], "same": [3, 8, 46, 52, 79, 92, 101, 108], "proper": 3, "metadata": [3, 4, 116], "project": [3, 56, 101, 110], "system": [3, 5, 12, 16, 24, 26, 56, 74, 75, 78, 80, 84, 110], "meter": [3, 4], "understand": 3, "object": [3, 18, 19, 68, 69, 74, 75, 85, 88], "intern": 3, "set_staticmap": 3, "dict": [3, 9, 10, 11, 13, 18, 19, 29, 57, 60, 68, 69, 73, 76, 79, 80, 84, 96, 97], "set_staticgeom": 3, "dataarrai": [3, 13, 19, 29, 32, 33, 34, 36, 38, 57, 69, 81, 82, 85, 87, 88, 89, 90, 91, 92], "geodataarrai": [3, 101], "xy": [3, 25, 33, 66, 78, 99], "set_forc": 3, "conveni": 3, "set_forcing_1d": [3, 101], "1d": [3, 33, 71, 72, 79, 101], "dict_valu": 3, "_geom": 3, "weir": [3, 5, 25, 55, 66, 79, 97, 101], "thd": [3, 5, 25, 55, 66, 97, 101, 113], "_forc": 3, "di": [3, 4, 5, 22, 33, 49, 50, 53, 64, 77, 98, 101], "netampr": [3, 8, 22, 64], "first": [3, 4, 5, 7, 8, 10, 43, 46, 47, 49, 53, 54, 60, 77, 90, 103, 114, 115, 116], "directori": [3, 5, 8, 101], "sake": 3, "export": 3, "practic": 3, "could": 3, "qgi": 3, "mod0": 3, "write_rast": [3, 7], "gis_data": 3, "check": [3, 4, 8, 35, 83, 101], "content": [3, 8], "our": [3, 8, 108, 110], "meta": [3, 7, 50], "geotiff": [3, 9, 50, 67], "attribut": [3, 7, 9, 16, 22, 23, 24, 25, 26, 32, 34, 36, 51, 61, 64, 65, 66, 67, 80, 88, 113], "rio": 3, "blockys": 3, "264450": 3, "5073200": 3, "289150": 3, "5091850": 3, "colorinterp": 3, "grai": 3, "compress": [3, 7], "deflat": 3, "count": 3, "descript": [3, 10], "null": 3, "driver": [3, 7], "gtiff": 3, "dtype": [3, 71, 94], "float32": 3, "height": [3, 16, 80, 87], "373": 3, "index": [3, 33, 43, 44, 47, 49, 67, 71, 72, 77, 94, 95, 98], "interleav": 3, "band": 3, "lnglat": 3, "124685403666371": 3, "86010307727549": 3, "mask_flag": 3, "9999": [3, 71, 86], "shape": [3, 16, 45, 71, 80, 81, 82], "494": 3, "tile": 3, "transform": [3, 16, 80], "width": [3, 4, 16, 46, 51, 53, 54, 80, 88, 90, 98, 101, 116], "singl": [3, 10, 60, 101, 110], "open_rast": 3, "ident": [3, 7, 14, 31, 38], "open_mfrast": 3, "basenam": [3, 18, 19], "da_dep": 3, "x27": 3, "dask": 3, "arrai": [3, 70, 71, 72, 79, 93, 94, 95], "getitem": 3, "chunksiz": [3, 23, 74, 75], "chunktyp": 3, "ndarrai": [3, 70, 71, 72, 87, 93, 94, 95], "float64": 3, "645e": 3, "891e": 3, "092e": 3, "073e": 3, "int64": 3, "area_or_point": 3, "_fillvalu": 3, "0xarrai": 3, "373x": 3, "494dask": 3, "chunk": [3, 23, 74, 75], "byte": 3, "719": 3, "77": 3, "kib": 3, "graph": 3, "float642": 3, "05arrai": 3, "264475": 3, "264525": 3, "264575": 3, "289025": 3, "289075": 3, "289125": 3, "float645": 3, "06arrai": 3, "5091825": 3, "5091775": 3, "5091725": 3, "5073325": 3, "5073275": 3, "5073225": 3, "crs_wkt": 3, "projc": 3, "quot": 3, "wg": 3, "84": 3, "geogc": 3, "wgs_1984": 3, "spheroid": 3, "6378137": 3, "298": [3, 4], "257223563": 3, "author": 3, "7030": 3, "6326": 3, "primem": 3, "greenwich": 3, "8901": 3, "degre": 3, "0174532925199433": 3, "9122": 3, "transverse_merc": 3, "paramet": [3, 8, 9, 10, 14, 16, 18, 19, 23, 24, 26, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 63, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 111], "latitude_of_origin": 3, "central_meridian": 3, "15": [3, 4, 5], "scale_factor": 3, "9996": 3, "false_east": 3, "500000": 3, "false_north": 3, "metr": 3, "9001": 3, "axi": 3, "east": 3, "north": 3, "semi_major_axi": 3, "0semi_minor_axi": 3, "6356752": 3, "314245179inverse_flatten": 3, "257223563reference_ellipsoid_nam": 3, "84longitude_of_prime_meridian": 3, "0prime_meridian_nam": 3, "greenwichgeographic_crs_nam": 3, "84horizontal_datum_nam": 3, "world": [3, 110], "geodet": 3, "1984projected_crs_nam": 3, "33ngrid_mapping_nam": 3, "transverse_mercatorlatitude_of_projection_origin": 3, "0longitude_of_central_meridian": 3, "0false_east": 3, "0false_north": 3, "0scale_factor_at_central_meridian": 3, "9996spatial_ref": 3, "geotransform": 3, "xpandasindexpandasindex": 3, "float64index": 3, "264625": 3, "264675": 3, "264725": 3, "264775": 3, "264825": 3, "264875": 3, "264925": 3, "288675": 3, "288725": 3, "288775": 3, "288825": 3, "288875": 3, "288925": 3, "288975": 3, "length": [3, 4, 31, 51, 53, 54, 79, 88, 91, 116], "ypandasindexpandasindex": 3, "5091675": 3, "5091625": 3, "5091575": 3, "5091525": 3, "5091475": 3, "5091425": 3, "5091375": 3, "5073675": 3, "5073625": 3, "5073575": 3, "5073525": 3, "5073475": 3, "5073425": 3, "5073375": 3, "area_fillvalu": 3, "sfincs_from_pi": 3, "w": [3, 9, 35, 93, 94, 95], "still": 3, "empti": [3, 8], "len": 3, "otherwis": [3, 8, 50, 51, 88], "orient": [3, 7, 93, 94, 95, 101], "while": [3, 39, 45], "kept": [3, 45, 82, 101], "flip": 3, "compar": [3, 4, 8, 101], "datasetdimens": 3, "494y": 3, "373coordin": 3, "0x_dim": 3, "xy_dim": 3, "float32dask": 3, "modifi": 3, "read_config": [3, 113], "laod": 3, "update_spatial_attr": [3, 101], "inspect": 3, "20000101": 3, "20000102": 3, "75": [3, 5], "manning_land": 3, "04": [3, 4], "manning_sea": 3, "02": 3, "rgh_lev_land": 3, "leav": [3, 110], "applic": [3, 10, 110, 114], "setup_river_outflow": [3, 4, 101, 113, 116], "both": [3, 33, 39, 43, 52, 92, 101, 108], "downstream": [3, 51, 52, 116], "setup_river_hydrographi": [3, 4, 44, 51, 53, 54, 101, 116], "hydrographi": [3, 4, 52, 53, 54, 101, 114, 116], "visual": [3, 106, 111], "500": 3, "combin": [3, 33, 39, 43, 45, 46, 48, 49, 51, 52, 56], "timeseri": [3, 4, 8, 19, 33, 43, 47, 49, 50, 53, 69, 74, 77, 98, 116], "staticgeom": [3, 4, 8, 18, 25, 50, 53, 54, 66, 68, 92, 101, 113], "similarli": 3, "bzd": [3, 22, 64, 101], "setup_q_forc": [3, 4, 113, 114, 116], "recommend": [3, 46, 108, 110], "inflow": [3, 4, 53, 91], "flow": [3, 4, 51, 52, 54, 85, 88, 91, 116], "setup_river_inflow": [3, 4, 49, 50, 52, 54, 101, 113, 114, 116], "14": [3, 4, 5], "three": 3, "triangular": 3, "hydrograph": 3, "264891": 3, "264903": 3, "71": 3, "277443": 3, "5083000": 3, "61": 3, "5085039": 3, "90": [3, 5], "5091621": 3, "70": [3, 5], "pnt": 3, "points_from_xi": 3, "020": 3, "610": 3, "710": 3, "900": 3, "570": 3, "700": 3, "set_config": 3, "20210101": [3, 4, 116], "20210102": [3, 4, 116], "date_rang": 3, "parse_datetim": 3, "period": [3, 8], "datafram": [3, 33, 77, 92, 98], "column": [3, 4, 33, 43, 44, 47, 49, 50, 51, 55, 77, 79, 85, 88, 92, 116], "100": [3, 4, 5, 23, 51, 56, 74, 75, 87, 88, 97], "80": [3, 5], "300": [3, 8], "2021": 3, "01": [3, 4, 88], "00": 3, "16": [3, 5, 8], "17": [3, 5], "datetime64": 3, "01t12": 3, "649e": 3, "774e": 3, "083e": 3, "085e": 3, "standard_nam": 3, "m3": [3, 4, 49, 50, 51], "1xarrai": 3, "3time": 3, "3100": 3, "80arrai": 3, "02arrai": 3, "01t00": 3, "000000000": 3, "02t00": 3, "int641": 3, "3arrai": 3, "int640crs_wkt": 3, "index_dim": 3, "indexx_dim": 3, "ytime_dim": 3, "timearrai": 3, "timepandasindexpandasindex": 3, "datetimeindex": 3, "freq": 3, "indexpandasindexpandasindex": 3, "int64index": 3, "dischargeunit": 3, "18": [3, 5], "to_gdf": 3, "19": [3, 5, 8], "disfil": [3, 113], "srcfile": [3, 113], "entri": [3, 43, 49], "tip": [3, 107], "rerun": 3, "plot_forc": [3, 4, 8], "satisfi": 3, "disk": [3, 60], "seper": 3, "writen": 3, "individu": 3, "write_": [3, 10, 60], "write_staticmap": 3, "write_config": [3, 101, 113], "etc": 3, "21": 3, "interac": 4, "get": [4, 5, 7, 8, 14, 16, 75, 113], "api": [4, 109, 110], "overview": [4, 8, 101, 113], "sfincs_test_bas": 4, "78": 4, "28": 4, "94": 4, "36": 4, "537": 4, "538": 4, "557": 4, "ignor": 4, "558": 4, "565": 4, "567": 4, "error": [4, 5, 50, 92], "568": 4, "configuraton": 4, "non": [4, 82, 106], "pass": [4, 8, 18, 68, 101, 115, 116], "path_to_ini_fil": [4, 8], "build_configur": 4, "header": [4, 8, 43, 44, 113], "correspond": [4, 8, 114, 115, 116], "explain": [4, 8], "model_compon": [4, 8], "hydrolog": [4, 51, 88, 101, 116], "setup_river_bathymetri": [4, 101, 113, 116], "amp": 4, "those": [4, 25, 116], "flwdir": [4, 51, 52, 53, 54, 85, 88, 91, 101, 116], "uparea": [4, 50, 51, 52, 53, 54, 88, 92, 101, 116], "river_geom_fn": [4, 51, 116], "rivers_lin2019_v1": [4, 116], "qbankful": [4, 51, 88, 116], "rivwth": [4, 51, 88, 116], "river_upa": [4, 51, 53, 54, 88, 91, 101, 116], "25": [4, 5, 51, 53, 54, 87, 88, 91, 116], "mimimum": [4, 51, 53, 54, 88, 91, 116], "threshold": [4, 39, 45, 51, 53, 54, 81, 82, 87, 88, 91, 101, 116], "river_len": [4, 51, 53, 54, 88, 91, 101, 116], "1000": [4, 51, 53, 54, 88, 91, 116], "rivdph_method": [4, 51, 88, 116], "gvf": [4, 51, 88, 116], "gradual": [4, 88, 116], "vari": [4, 46, 48, 88, 90, 116], "rivwth_method": [4, 51, 88, 116], "min_rivwth": [4, 51, 88, 116], "min_rivdph": [4, 51, 88, 116], "outflow_width": [4, 101, 116], "2500": [4, 116], "setup_gaug": [4, 8, 113, 116], "gauges_fn": [4, 8, 42, 116], "riverine_gaug": [4, 116], "when": [4, 5, 8, 9, 101, 116], "discharge_input_sfinc": [4, 116], "url": 4, "path_to_yml_fil": 4, "By": [4, 10, 40, 46, 50, 52, 53, 54, 56, 60, 75, 90, 91, 92, 99], "p": [4, 110, 115, 116], "drive": 4, "acc": 4, "background": [4, 6, 18, 68], "core": [4, 5, 82, 85, 88, 90, 92, 101, 107, 108, 113, 114], "sfincs_test_ful": 4, "38": 4, "870": 4, "871": [4, 8], "895": 4, "896": 4, "901": 4, "963": 4, "056": 4, "123": 4, "961": 4, "288": 4, "948": 4, "216": 4, "217": 4, "adjust_dem": [4, 52], "386": 4, "780": 4, "280": [4, 5], "940": 4, "414": 4, "reproject": [4, 46, 48, 52, 56, 90, 101], "destin": [4, 48, 52, 60], "41": 4, "289": 4, "flw": 4, "syntheth": 4, "441": 4, "calcul": [4, 7, 55], "750": 4, "org": [4, 110], "max": [4, 7, 46, 90], "3938": 4, "3956": 4, "60": [4, 5], "768": 4, "river_mask_fn": [4, 51], "qbankfull_fn": [4, 51], "rivbank": [4, 51, 88], "rivbankq": [4, 51, 88], "segment_length": [4, 51, 88], "3000": [4, 51], "smooth_length": [4, 51, 88], "constrain_rivb": [4, 51, 88], "constrain_estuari": [4, 51, 88], "dig_river_d4": [4, 51], "plot_riv_profil": [4, 51], "854": 4, "overwrit": [4, 8, 38, 42, 55], "855": 4, "856": 4, "051": 4, "bankful": [4, 51, 88, 101], "bank": [4, 51, 87, 88], "981": 4, "smooth": [4, 51, 88, 90, 110], "solver": 4, "successfulli": 4, "reach": 4, "integr": 4, "07": 4, "476": 4, "burn": [4, 51, 85, 116], "bedlevel": [4, 51, 85, 88], "dem": [4, 85, 101, 116], "492": 4, "048": 4, "correct": [4, 43, 51, 88, 108], "d4": [4, 51, 85, 101], "bed": [4, 51, 85, 88], "865": 4, "866": 4, "867": 4, "river_width": [4, 53, 54, 101], "2000": [4, 53, 54], "keep_rivers_geom": [4, 53, 54], "180": 4, "296": 4, "118": 4, "299": 4, "append_bound": [4, 54], "576": 4, "887": 4, "889": 4, "307": 4, "891": 4, "916": 4, "cn": [4, 40], "996": 4, "997": 4, "057": 4, "117": 4, "constant": [4, 44, 51, 53, 101], "130": 4, "132": 4, "152": 4, "181": 4, "248": 4, "475": 4, "946": 4, "009": 4, "previou": 4, "ad": [4, 34, 43, 46, 48, 54], "two": [4, 8, 31, 75, 90], "suffici": [4, 101], "final": [4, 103], "process": [4, 10, 39, 45, 60, 81, 82, 110], "walk": 4, "minor": 4, "red": 4, "triangl": 4, "1400x910": 4, "600x300": 4, "axessubplot": 4, "scratch": [5, 8, 10, 106], "complet": [5, 10, 20, 62, 110, 114], "On": 5, "window": [5, 50, 92, 101], "alreadi": 5, "sfincs_riverine_rerun": 5, "bat": 5, "repo": [5, 103], "x64": 5, "releas": [5, 110], "ex": 5, "sfincs_log": 5, "nbsphinx": 5, "math": 5, "_ex": 5, "whether": [5, 101], "filenotfounderror": 5, "traceback": 5, "most": 5, "recent": 5, "last": [5, 39, 45, 46, 81, 82, 90], "miniconda3": 5, "interactiveshel": 5, "py": [5, 101], "_modified_open": 5, "kwarg": [5, 18, 19, 23, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 74, 75, 85, 88], "275": 5, "276": 5, "rais": 5, "valueerror": 5, "277": 5, "won": 5, "fd": 5, "278": 5, "know": 5, "279": 5, "builtin": 5, "io_open": 5, "errno": 5, "No": 5, "yet": [5, 47, 80], "cur_dir": 5, "getcwd": 5, "chdir": 5, "take": [5, 101], "minut": 5, "so": [5, 110], "finish": [5, 110], "longer": 5, "than": [5, 7, 8, 39, 44, 45, 46, 101], "welcom": 5, "build": [5, 8, 60, 101, 106, 110, 111, 113, 115, 116], "revis": 5, "rev": 5, "v2": 5, "alp": 5, "huez": 5, "date": 5, "regular": 5, "meteo": 5, "data": [5, 6, 7, 9, 32, 33, 34, 36, 38, 39, 40, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 70, 71, 81, 88, 89, 90, 91, 93, 94, 101, 107, 110, 111, 112, 115, 116], "mesh": 5, "184262": 5, "367657": 5, "wat": 5, "er": 5, "remain": [5, 51], "35": 5, "40": [5, 110], "95": 5, "total": 5, "365": 5, "060": 5, "335": [5, 8], "016": 5, "momentum": 5, "661": 5, "67": 5, "continu": [5, 8], "096": 5, "31": 5, "202": 5, "825": 5, "off": 5, "actual": 5, "long": 5, "situat": 5, "dir_list": 5, "listdir": 5, "restart": [5, 101], "earlier": 5, "result": [5, 8, 23, 32, 34, 36, 101, 106, 110, 112, 113], "common": 5, "cartopi": 6, "interfac": [6, 110, 113], "geograph": 6, "satellit": 6, "imageri": 6, "sfincs_root": [6, 7], "0x7f992f2561c0": 6, "lzw": 7, "reindex": 7, "revers": 7, "chang": [7, 51, 103, 114], "to_rast": 7, "occur": 7, "gswo": 7, "northen": 7, "from_yml": 7, "get_rasterdataset": 7, "gswo_mask": 7, "reproject_lik": 7, "data_typ": 7, "categori": 7, "paper_doi": 7, "1038": 7, "nature20584": 7, "paper_ref": 7, "pekel": 7, "et": 7, "al": 7, "2016": 7, "source_url": 7, "appspot": 7, "source_vers": 7, "v1_1_2019": 7, "255": 7, "da_hmax": 7, "comput": [7, 23, 48, 75], "da_hmax_fld": 7, "colorbar": 7, "label": 7, "later": [7, 101], "top": [7, 54], "png": [7, 18, 19], "mimum": 7, "cax_fld": 7, "savefig": 7, "225": 7, "bbox_inch": 7, "tight": 7, "perform": 8, "append": [8, 9, 35, 42, 46, 55, 90], "introduc": 8, "function": 8, "test": [8, 108, 110], "deliv": 8, "block": 8, "below": [8, 45, 82, 101, 106, 108, 113, 115, 116], "vx": 8, "denot": 8, "seem": 8, "miss": [8, 51, 52, 71, 90], "ensur": [8, 85, 101], "rather": 8, "rebuild": 8, "thing": 8, "intercomparison": 8, "underli": 8, "impact": 8, "possibl": [8, 112], "sequenc": 8, "sfincs_update_precip": [8, 114], "directli": [8, 51, 103, 113], "part": [8, 101, 113], "extend": [8, 39], "made": 8, "sure": [8, 108], "coverag": 8, "pleas": [8, 108, 110], "user_hom": 8, "inde": 8, "present": [8, 23, 25, 75, 105, 110], "edit": [8, 9, 54, 103], "overwritten": [8, 60], "landcov": [8, 44], "setup_lulcmap": 8, "outlin": [8, 18, 68], "model_out": [8, 60], "out": [8, 51, 54, 91], "left": 8, "sfincs_coastal_precip": [8, 114], "456": 8, "dir": 8, "481": 8, "608": 8, "615": 8, "660": 8, "748": 8, "021": 8, "179": 8, "215": 8, "origin": [8, 46, 92, 93, 94, 95], "venice_sfincs_precip": 8, "analysi": [8, 110], "plot": [8, 18, 19, 101], "familiar": 8, "straighforward": 8, "other": [8, 25, 39, 45, 56, 81, 82], "pop": 8, "focu": [8, 110], "manipul": 8, "logic": [8, 39, 45], "accumul": 8, "rainfal": 8, "over": [8, 48], "precip_sum": 8, "sum": 8, "mm": [8, 47, 48], "anoth": [8, 44], "measur": 8, "sfincs_update_forc": 8, "venice_gaug": 8, "gtsmv3_eu_era5": 8, "mdt_fn": 8, "mdt": [8, 43], "fn_gaug": 8, "df": [8, 77, 98], "read_csv": 8, "id": [8, 47, 49], "1001": 8, "venice1": 8, "513886": 8, "508725": 8, "1002": 8, "venice2": 8, "443603": 8, "495637": 8, "1003": 8, "venice3": 8, "347785": 8, "423504": 8, "1004": 8, "venice4": 8, "312603": 8, "443641": 8, "further": 8, "detail": [8, 43, 47, 49, 101], "latitud": 8, "longitud": 8, "pair": [8, 10, 60], "sfincs_coastal_forc": 8, "27": 8, "023": 8, "044": 8, "164": 8, "170": 8, "210": 8, "211": 8, "302": 8, "332400": 8, "5059350": 8, "319": 8, "320": 8, "337": 8, "288900": 8, "5049900": 8, "445": 8, "451": 8, "718": 8, "763": 8, "765": 8, "803": 8, "890": 8, "again": 8, "tidal": 8, "gtsm": 8, "config_fn": [9, 21, 63], "write_gi": [9, 66, 67], "data_lib": 9, "logger": [9, 75, 80, 82, 85, 88, 89, 90, 91, 92], "model": [9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 27, 28, 29, 30, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 68, 69, 81, 82, 88, 89, 91, 101, 106, 110, 111, 112], "str": [9, 11, 13, 18, 19, 21, 29, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99], "filenam": [9, 63, 64, 65, 66, 67], "bool": [9, 10, 14, 18, 32, 34, 36, 39, 42, 45, 48, 51, 52, 53, 54, 55, 60, 68, 81, 82, 85, 87, 88, 91], "cli": 9, "librari": 9, "__init__": 9, "appear": [10, 60], "read_": [10, 60], "skip": [10, 44, 60], "parse_region": [10, 113], "configread": [10, 60], "nest": [10, 11, 60], "dictionari": [10, 11, 14, 31, 41, 60, 73, 76, 79, 84, 96, 97], "method1": [10, 60], "argument1": [10, 60], "value1": [10, 60], "argument2": [10, 60], "value2": [10, 60], "method2": [10, 60], "properti": [11, 12, 13, 17, 27, 28, 29, 30, 57, 58, 59, 66, 67], "union": [11, 13, 29, 32, 34, 36, 37, 57, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 90, 93, 94, 95, 96, 97, 98], "embed": 12, "fallback": 14, "abs_path": 14, "tupl": [14, 15, 16, 18, 28, 31, 68, 71, 75, 80, 88], "string": [14, 31, 77, 83, 98, 99], "multipl": [14, 31, 101], "key1": [14, 31], "key2": [14, 31], "absolut": [14, 50, 92], "deafult": [14, 46, 75], "assum": [14, 77], "self": [14, 31], "geospati": [16, 43, 49, 61, 80, 110], "affin": [16, 80], "pyproj": [16, 75, 80], "plot_region": [18, 68], "plot_geom": [18, 68], "zoomlevel": [18, 68], "geom_kwarg": [18, 68], "legend_kwarg": [18, 68], "style": [18, 68], "per": [18, 68], "markers": [18, 68], "legend": [18, 68], "distribut": [19, 48, 69], "avarag": [19, 69], "known": [22, 25, 26], "ascii": [22, 24, 64, 65, 70, 77, 78, 93, 98], "sfincsgrid": [23, 75], "fn_map": [23, 75, 89], "fn_hi": [23, 74], "rasterdataarrai": 23, "along": [23, 74, 75], "state": [24, 36, 65, 101, 108, 113], "inifil": [24, 113], "structur": [25, 35, 55, 66, 76, 79, 84, 97, 101], "interest": [27, 91, 92, 101], "futur": [28, 37, 51, 58, 59], "99": 31, "split_dataset": [32, 34, 36], "split": [32, 34, 36, 101], "staticgom": 33, "accordingli": 33, "dummi": [33, 43, 53], "zero": [33, 39, 44, 46, 101], "either": [34, 43, 49, 51, 53, 54, 79, 116], "geoseri": 37, "set_geom": 37, "inact": [39, 45, 82], "geomtri": [39, 45, 78], "exclud": [39, 45, 81, 82], "larger": [39, 45, 46], "equal": [39, 45, 90], "threshhold": [39, 45, 51, 53, 54], "smaller": [39, 44, 45, 52, 101], "AND": [39, 45], "oper": [39, 45], "constrain": [39, 81], "critera": [39, 45, 81, 82], "thu": [39, 45, 81, 82, 101], "overrul": [39, 45, 81, 82], "criteria": [39, 45, 81, 82, 92], "reset": [39, 45, 54], "befor": [39, 43, 46, 56, 90, 101, 114], "detect": [39, 52, 81], "horizont": [39, 45, 81, 82, 101], "diagon": [39, 45, 81, 82, 101], "moistur": [40, 86, 101], "inch": [40, 86, 101], "anteced": 40, "runoff": 40, "cn_dry": 40, "cn_avg": 40, "cn_wet": 40, "cfdict": 41, "open_vector": [42, 50], "accept": [42, 50], "5000": [43, 88], "plu": [43, 55], "match": [43, 101], "offset": [43, 46, 90], "egm": 43, "msl": 43, "ref": [43, 46, 51, 52, 56], "row": [43, 47, 49], "interpret": 43, "open_timeseries_from_t": [43, 47, 49], "tabul": [43, 47, 49], "km": [43, 53], "coeffici": [44, 79], "superseed": 44, "cannot": [45, 47, 52], "undon": 45, "contigu": [45, 82, 101], "touch": [45, 81, 82], "bresenham": [45, 81, 82], "algorithm": [45, 81, 82], "previous": [45, 50, 101], "cap": [46, 90], "linearli": [46, 90], "appli": [46, 90], "Not": [46, 50], "min": [46, 90], "pixel": [46, 90], "wise": [46, 90], "cubic": [46, 90], "nearest": [46, 51, 87, 90], "hole": [46, 90], "rio_idw": [46, 90], "hr": [47, 48], "through": [47, 49], "netamprfil": [48, 113], "median": 48, "discharge_fn": 50, "locs_fn": 50, "uparea_fn": [50, 92], "wdw": [50, 92], "rel_error": [50, 92, 101], "abs_error": [50, 92, 101], "best": [50, 52, 53, 54, 92, 111], "neighbor": [50, 51, 88], "dermin": 50, "src_snap": 50, "gdal": 50, "experiment": 51, "segment": [51, 85, 87, 88], "half": [51, 53, 54], "rivdph": 51, "estim": [51, 53, 85, 87, 88, 101], "profil": 51, "percentil": 51, "subtract": 51, "propag": 51, "powlaw": [51, 88], "approxim": [51, 88], "quantil": [51, 87, 88], "5e3": [51, 88], "10e3": [51, 88], "fix": [51, 88, 98, 101], "estuari": [51, 88], "slope": 51, "downward": 51, "dig": 51, "setup_riv": 52, "contribut": [52, 104], "incom": 52, "roughli": 52, "higher": 52, "d8": [52, 91, 101], "adjust": [52, 111], "lower": [52, 75], "enter": 53, "rivers_in": 53, "centerlin": [53, 54], "avoid": [53, 101], "instabl": 53, "nearbi": 53, "keep": [53, 54, 101], "omit": 54, "river_out": 54, "2km": 54, "1km": 54, "side": 54, "normal": 54, "rivers_out": 54, "structures_fn": 55, "stype": [55, 97], "dz": 55, "thin": [55, 97], "dam": [55, 97], "leve": 55, "par1": [55, 79, 97], "gdf": [55, 78, 79, 84, 92, 99], "linestr": [55, 79, 84], "centroid": 56, "rel_path": [63, 101], "prepend": 63, "fmt": [65, 93, 97, 98, 99], "3f": [65, 93], "bmap_kwarg": 68, "fn": [70, 71, 73, 76, 77, 78, 93, 94, 96, 97, 98, 99], "mv": 71, "f4": [71, 94], "flat": [71, 72, 95], "nrow": 71, "ncol": 71, "u1": [71, 94], "fn_ind": [72, 95], "ds_hi": 74, "hi": 74, "pathlib": 75, "assign": 75, "ds_face": 75, "ds_edg": 75, "feat": [76, 79, 84, 97], "paramt": 79, "cd": [79, 103], "formula": 79, "da_msk": [81, 85, 87, 88], "da_elv": [81, 82, 85], "gdf_mask": [81, 82], "gdf_includ": [81, 82], "gdf_exclud": [81, 82], "boolean": [81, 82], "nondata": 82, "gdf_riv": [85, 87, 88, 91], "pyflwdir": [85, 88, 101], "flwdirrast": [85, 88], "river_d4": 85, "da_elv1": 85, "da_cn": 86, "da_mask": [86, 90], "da_hnd": 87, "nmin": 87, "drainag": 87, "hand": 87, "adjec": 87, "heigth": 87, "drain": [87, 116], "rivbank_dz": 87, "riverbank": 87, "da_riv_mask": 87, "da_bnk_mask": 87, "gdf_qbf": 88, "min_converg": 88, "max_dist": 88, "elevtn_nam": 88, "uparea_nam": [88, 92], "rivmsk_nam": 88, "equat": 88, "power": 88, "law": 88, "elevnt_nam": 88, "converg": 88, "distanc": 88, "da": 89, "ds_like": 89, "param": 89, "ds_out": 89, "da1": 90, "da2": 90, "da_offset": 90, "transit": 90, "da_out": 90, "da_flwdir": 91, "da_uparea": 91, "return_riv": 91, "gdf_src": 91, "discharge_nam": 92, "smallest": 92, "meet": 92, "sw": [93, 94, 95], "corner": [93, 94, 95], "savetxt": 93, "conf": 96, "1f": 97, "field": 97, "weir01": 97, "weir02": 97, "110": 97, "120": 97, "2f": 98, "4f": 99, "notabl": 101, "page": [101, 104, 107, 110], "changelog": 101, "adher": 101, "semant": 101, "setup_q_forcing_from_grid": [101, 113, 114], "snap_discharg": [101, 113], "nonnul": 101, "setup_basemap": 101, "active_mask_fn": 101, "basemaps_fn": 101, "workflow": [101, 110, 113, 115, 116], "max_error": 101, "setup_p_forc": [101, 113], "multi": 101, "corner_x": 101, "edge_x": 101, "allow": [101, 113, 114], "reus": 101, "esa": 101, "worldcov": 101, "min_elv": 101, "max_elv": 101, "respect": 101, "clean": [101, 110], "remov": 101, "spuriou": 101, "small": 101, "island": 101, "expos": 101, "river_boundary_point": 101, "ran": 101, "beforehand": 101, "fly": 101, "accuraci": 101, "hide": 101, "linux": 101, "nan": 101, "setup_manning_roug": 101, "improv": [101, 110], "interbasin": [101, 116], "bump": 101, "mamba": [101, 108], "ci": 101, "delimit": 101, "separ": 101, "low": [101, 113], "sort": 101, "x_dim": 101, "topo": 101, "setup_structur": [101, 113], "read_staticgeom": 101, "read_stat": 101, "write_st": 101, "get_spatial_attr": [101, 113], "read_staticmap": 101, "merge_topobathi": [101, 113], "mask_topobathi": [101, 113], "river_inflow_point": 101, "river_outflow_point": 101, "setup_p_grid": 101, "ouflow": 101, "latest": [101, 103, 110], "stabl": 101, "instruct": [101, 108], "build_coastal_model": 101, "build_riverine_model": 101, "plot_sfincs_map": 101, "ana\u00ef": 102, "couasnon": [102, 110], "couasnonanaishttp": 102, "github": [102, 103, 110], "couasnonanai": 102, "dirk": 102, "eiland": [102, 110], "dirkeiland": 102, "tim": 102, "leijns": [102, 110], "leyns": 102, "hessel": 102, "winsemiu": [102, 110], "hcwinsemiu": 102, "git": 103, "easili": [103, 111, 113], "access": 103, "clone": 103, "navig": 103, "pyproject": 103, "toml": 103, "Then": [103, 108], "guidelin": 104, "furthermor": [104, 110], "plan": 104, "view": 106, "link": 106, "coastal": [106, 114], "postprocess": 106, "anim": 106, "faq": 107, "trick": 107, "visit": [107, 108], "pypi": 108, "exchang": 108, "wai": [108, 111], "channel": 108, "altern": 108, "fail": 108, "abl": 108, "guid": [109, 110], "tool": [110, 111], "facilit": 110, "analyz": 110, "geoscientif": 110, "autom": 110, "go": 110, "raw": 110, "readi": 110, "analys": [110, 111], "onc": 110, "hydrodynam": 110, "consum": 110, "hard": 110, "reproduc": 110, "especi": 110, "rapidli": 110, "becom": 110, "increasingli": 110, "high": 110, "challeng": 110, "aim": 110, "fast": 110, "modular": 110, "exploit": 110, "rich": [110, 111], "learn": 110, "experi": 110, "softwar": 110, "doi": 110, "zenodo": 110, "paper": 110, "real": 110, "ikeuchi": 110, "yamazaki": 110, "mui": 110, "dullaart": 110, "j": 110, "ward": 110, "framework": 110, "hazard": 110, "eguspher": 110, "5194": 110, "149": 110, "issu": 110, "feel": 110, "free": 110, "tracker": 110, "seek": 110, "commun": 110, "far": 110, "develop": 110, "believ": 110, "wider": 110, "happi": 110, "discuss": 110, "benefit": 111, "assist": 111, "quickli": 111, "associ": [111, 113], "infiltr": 113, "get_basin_geometri": 113, "read_inp": 113, "write_inp": 113, "read_binary_map": 113, "write_binary_map": 113, "mask_bound": 113, "indfil": 113, "read_binary_map_index": 113, "write_binary_map_index": 113, "cn_to_": 113, "obsfil": 113, "read_xi": 113, "write_xi": 113, "weirfil": 113, "read_structur": 113, "write_structur": 113, "gdf2structur": 113, "structures2gdf": 113, "read_timeseri": 113, "write_timeseri": 113, "resample_tim": 113, "upon": 113, "qinffil": 113, "thdfile": 113, "built_model": 114, "xmin": [114, 115, 116], "ymin": [114, 115, 116], "xmax": [114, 115, 116], "ymax": [114, 115, 116], "sfincs_build": 114, "Or": 114, "manag": 114, "alwai": 114, "infer": 114, "suggest": 114, "checkout": 114, "delin": 116, "At": 116, "accur": 116, "represent": 116, "underwat": 116}, "objects": {"hydromt_sfincs": [[9, 0, 1, "", "SfincsModel"], [70, 3, 1, "", "read_ascii_map"], [71, 3, 1, "", "read_binary_map"], [72, 3, 1, "", "read_binary_map_index"], [73, 3, 1, "", "read_inp"], [74, 3, 1, "", "read_sfincs_his_results"], [75, 3, 1, "", "read_sfincs_map_results"], [76, 3, 1, "", "read_structures"], [77, 3, 1, "", "read_timeseries"], [78, 3, 1, "", "read_xy"], [93, 3, 1, "", "write_ascii_map"], [94, 3, 1, "", "write_binary_map"], [95, 3, 1, "", "write_binary_map_index"], [96, 3, 1, "", "write_inp"], [97, 3, 1, "", "write_structures"], [98, 3, 1, "", "write_timeseries"], [99, 3, 1, "", "write_xy"]], "hydromt_sfincs.SfincsModel": [[9, 1, 1, "", "__init__"], [10, 1, 1, "", "build"], [11, 2, 1, "", "config"], [12, 2, 1, "", "crs"], [13, 2, 1, "", "forcing"], [14, 1, 1, "", "get_config"], [15, 1, 1, "", "get_model_time"], [16, 1, 1, "", "get_spatial_attrs"], [17, 2, 1, "", "mask"], [18, 1, 1, "", "plot_basemap"], [19, 1, 1, "", "plot_forcing"], [20, 1, 1, "", "read"], [21, 1, 1, "", "read_config"], [22, 1, 1, "", "read_forcing"], [23, 1, 1, "", "read_results"], [24, 1, 1, "", "read_states"], [25, 1, 1, "", "read_staticgeoms"], [26, 1, 1, "", "read_staticmaps"], [27, 2, 1, "", "region"], [28, 2, 1, "", "res"], [29, 2, 1, "", "results"], [30, 2, 1, "", "root"], [31, 1, 1, "", "set_config"], [32, 1, 1, "", "set_forcing"], [33, 1, 1, "", "set_forcing_1d"], [34, 1, 1, "", "set_results"], [35, 1, 1, "", "set_root"], [36, 1, 1, "", "set_states"], [37, 1, 1, "", "set_staticgeoms"], [38, 1, 1, "", "set_staticmaps"], [39, 1, 1, "", "setup_bounds"], [40, 1, 1, "", "setup_cn_infiltration"], [41, 1, 1, "", "setup_config"], [42, 1, 1, "", "setup_gauges"], [43, 1, 1, "", "setup_h_forcing"], [44, 1, 1, "", "setup_manning_roughness"], [45, 1, 1, "", "setup_mask"], [46, 1, 1, "", "setup_merge_topobathy"], [47, 1, 1, "", "setup_p_forcing"], [48, 1, 1, "", "setup_p_forcing_from_grid"], [49, 1, 1, "", "setup_q_forcing"], [50, 1, 1, "", "setup_q_forcing_from_grid"], [51, 1, 1, "", "setup_river_bathymetry"], [52, 1, 1, "", "setup_river_hydrography"], [53, 1, 1, "", "setup_river_inflow"], [54, 1, 1, "", "setup_river_outflow"], [55, 1, 1, "", "setup_structures"], [56, 1, 1, "", "setup_topobathy"], [57, 2, 1, "", "states"], [58, 2, 1, "", "staticgeoms"], [59, 2, 1, "", "staticmaps"], [60, 1, 1, "", "update"], [61, 1, 1, "", "update_spatial_attrs"], [62, 1, 1, "", "write"], [63, 1, 1, "", "write_config"], [64, 1, 1, "", "write_forcing"], [65, 1, 1, "", "write_states"], [66, 1, 1, "", "write_staticgeoms"], [67, 1, 1, "", "write_staticmaps"]], "hydromt_sfincs.plots": [[68, 3, 1, "", "plot_basemap"], [69, 3, 1, "", "plot_forcing"]], "hydromt_sfincs.utils": [[79, 3, 1, "", "gdf2structures"], [80, 3, 1, "", "get_spatial_attrs"], [81, 3, 1, "", "mask_bounds"], [82, 3, 1, "", "mask_topobathy"], [83, 3, 1, "", "parse_datetime"], [84, 3, 1, "", "structures2gdf"]], "hydromt_sfincs.workflows": [[85, 3, 1, "", "burn_river_zb"], [86, 3, 1, "", "cn_to_s"], [87, 3, 1, "", "get_rivbank_dz"], [88, 3, 1, "", "get_river_bathymetry"], [89, 3, 1, "", "landuse"], [90, 3, 1, "", "merge_topobathy"], [91, 3, 1, "", "river_boundary_points"], [92, 3, 1, "", "snap_discharge"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"analys": 1, "sfinc": [1, 2, 3, 4, 5, 6, 7, 8, 100, 108, 110], "result": [1, 6, 7, 29], "read": [1, 3, 6, 7, 20], "model": [1, 2, 3, 4, 5, 6, 7, 8, 100, 113, 114, 115, 116], "output": [1, 5, 100], "variabl": 1, "elev": 1, "layer": [1, 4], "question": [1, 5, 107], "time": 1, "seri": 1, "plot": [1, 6, 7, 68, 69, 100], "instantan": [1, 6], "water": [1, 6, 7], "depth": [1, 6, 7], "creat": [1, 5, 6], "anim": [1, 6], "make": 2, "coastal": [2, 115], "from": [2, 3, 4], "scratch": [2, 4], "us": [2, 110], "hydromt": [2, 4, 108, 110], "cli": [2, 4], "build": [2, 3, 4, 10, 114], "interfac": [2, 4], "first": 2, "get": [2, 109], "an": [2, 8, 108], "error": 2, "when": 2, "data": [2, 3, 4, 8, 113, 114], "i": [2, 110], "miss": 2, "right": 2, "complet": [2, 4], "readi": 2, "run": [2, 5], "inspect": [2, 4, 5, 8], "next": 2, "step": 2, "python": 3, "raster": 3, "setup": [3, 4, 100, 113], "add": [3, 8], "discharg": 3, "forc": [3, 8, 13, 113], "write": [3, 7, 62], "file": [3, 5, 7, 114], "riverin": [4, 116], "base": 4, "configur": [4, 114], "visual": [4, 100, 112], "schemat": 4, "batch": 5, "open": 5, "log": 5, "now": 5, "let": 5, "": [5, 101, 103], "try": 5, "thi": 5, "netcdf": 5, "maximum": 7, "waterdepth": 7, "geotiff": 7, "surfac": 7, "mask": [7, 17], "updat": [8, 60, 114], "exist": [8, 108], "boundari": 8, "condit": 8, "precipit": 8, "hydromt_sfinc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "sfincsmodel": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 113], "config": 11, "cr": 12, "get_config": 14, "get_model_tim": 15, "get_spatial_attr": [16, 80], "plot_basemap": [18, 68], "plot_forc": [19, 69], "read_config": 21, "read_forc": 22, "read_result": 23, "read_stat": 24, "read_staticgeom": 25, "read_staticmap": 26, "region": 27, "re": 28, "root": 30, "set_config": 31, "set_forc": 32, "set_forcing_1d": 33, "set_result": 34, "set_root": 35, "set_stat": 36, "set_staticgeom": 37, "set_staticmap": 38, "setup_bound": 39, "setup_cn_infiltr": 40, "setup_config": 41, "setup_gaug": 42, "setup_h_forc": 43, "setup_manning_rough": 44, "setup_mask": 45, "setup_merge_topobathi": 46, "setup_p_forc": 47, "setup_p_forcing_from_grid": 48, "setup_q_forc": 49, "setup_q_forcing_from_grid": 50, "setup_river_bathymetri": 51, "setup_river_hydrographi": 52, "setup_river_inflow": 53, "setup_river_outflow": 54, "setup_structur": 55, "setup_topobathi": 56, "state": 57, "staticgeom": 58, "staticmap": 59, "update_spatial_attr": 61, "write_config": 63, "write_forc": 64, "write_st": 65, "write_staticgeom": 66, "write_staticmap": 67, "read_ascii_map": 70, "read_binary_map": 71, "read_binary_map_index": 72, "read_inp": 73, "read_sfincs_his_result": 74, "read_sfincs_map_result": 75, "read_structur": 76, "read_timeseri": 77, "read_xi": 78, "util": [79, 80, 81, 82, 83, 84, 100], "gdf2structur": 79, "mask_bound": 81, "mask_topobathi": 82, "parse_datetim": 83, "structures2gdf": 84, "workflow": [85, 86, 87, 88, 89, 90, 91, 92, 100], "burn_river_zb": 85, "cn_to_": 86, "get_rivbank_dz": 87, "get_river_bathymetri": 88, "landus": 89, "merge_topobathi": 90, "river_boundary_point": 91, "snap_discharg": 92, "write_ascii_map": 93, "write_binary_map": 94, "write_binary_map_index": 95, "write_inp": 96, "write_structur": 97, "write_timeseri": 98, "write_xi": 99, "api": 100, "refer": 100, "class": 100, "initi": 100, "compon": [100, 113], "method": [100, 113], "attribut": 100, "high": 100, "level": 100, "low": 100, "gener": [100, 113], "input": 100, "what": [101, 110], "new": [101, 108], "unreleas": 101, "chang": 101, "v0": 101, "2": 101, "1": 101, "23": 101, "februari": 101, "2022": 101, "deprec": 101, "bugfix": 101, "0": 101, "august": 101, "2021": 101, "ad": 101, "document": 101, "18": 101, "mai": 101, "contributor": 102, "develop": [103, 104, 108], "environ": [103, 108], "roadmap": 105, "exampl": 106, "list": 106, "frequent": 107, "ask": 107, "instal": 108, "guid": [108, 111], "prerequisit": 108, "start": 109, "plugin": 110, "why": 110, "how": 110, "cite": 110, "contribut": 110, "user": 111, "postprocess": 112, "select": 114, "set": [115, 116], "up": [115, 116]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Analysing SFINCS results": [[1, "Analysing-SFINCS-results"]], "Read model results": [[1, "Read-model-results"], [6, "Read-model-results"], [7, "Read-model-results"]], "Output variables": [[1, "Output-variables"]], "Elevation layer": [[1, "Elevation-layer"]], "Question:": [[1, "Question:"], [1, "id1"], [1, "id2"], [5, "Question:"], [5, "id1"]], "Time-series output": [[1, "Time-series-output"]], "Plot instantaneous water depths": [[1, "Plot-instantaneous-water-depths"], [6, "Plot-instantaneous-water-depths"]], "Create animation": [[1, "Create-animation"], [6, "Create-animation"]], "Make a coastal sfincs model from scratch using hydromt": [[2, "Make-a-coastal-sfincs-model-from-scratch-using-hydromt"]], "HydroMT CLI build interface": [[2, "HydroMT-CLI-build-interface"]], "Building a first model (and getting an error when data is missing)": [[2, "Building-a-first-model-(and-getting-an-error-when-data-is-missing)"]], "Building a first model (and getting it right)": [[2, "Building-a-first-model-(and-getting-it-right)"]], "Building a complete model (ready to run)": [[2, "Building-a-complete-model-(ready-to-run)"]], "Inspecting the model": [[2, "Inspecting-the-model"], [4, "Inspecting-the-model"]], "Next steps": [[2, "Next-steps"]], "Build a model from python": [[3, "Build-a-model-from-python"]], "read raster data": [[3, "read-raster-data"]], "setup SFINCS model": [[3, "setup-SFINCS-model"]], "Add discharge forcing": [[3, "Add-discharge-forcing"]], "write to file": [[3, "write-to-file"]], "Build a riverine SFINCS model from scratch": [[4, "Build-a-riverine-SFINCS-model-from-scratch"]], "hydroMT CLI build interface": [[4, "hydroMT-CLI-build-interface"]], "setup SFINCS model base layers": [[4, "setup-SFINCS-model-base-layers"]], "Model setup configuration": [[4, "Model-setup-configuration"]], "Data for model setup": [[4, "Data-for-model-setup"]], "Setup complete SFINCS model": [[4, "Setup-complete-SFINCS-model"]], "Visualize and/or inspect model schematization": [[4, "Visualize-and/or-inspect-model-schematization"]], "Run a SFINCS model": [[5, "Run-a-SFINCS-model"]], "Inspecting the batch-file to run SFINCS": [[5, "Inspecting-the-batch-file-to-run-SFINCS"]], "Open log file": [[5, "Open-log-file"]], "Now let\u2019s try to run this batch-file": [[5, "Now-let\u2019s-try-to-run-this-batch-file"]], "Created log-file": [[5, "Created-log-file"]], "Created netcdf output files": [[5, "Created-netcdf-output-files"]], "Sfincs results: animation": [[6, "Sfincs-results:-animation"]], "Sfincs results: maximum water depth": [[7, "Sfincs-results:-maximum-water-depth"]], "Write maximum waterdepth to geotiff file": [[7, "Write-maximum-waterdepth-to-geotiff-file"]], "Plot maximum water depth with surface water mask": [[7, "Plot-maximum-water-depth-with-surface-water-mask"]], "Update existing Sfincs model with boundary conditions and forcing": [[8, "Update-existing-Sfincs-model-with-boundary-conditions-and-forcing"]], "Add precipitation forcing to an existing model": [[8, "Add-precipitation-forcing-to-an-existing-model"]], "Update sfincs precipitation": [[8, "Update-sfincs-precipitation"]], "Inspect forcing data": [[8, "Inspect-forcing-data"]], "hydromt_sfincs.SfincsModel": [[9, "hydromt-sfincs-sfincsmodel"]], "hydromt_sfincs.SfincsModel.build": [[10, "hydromt-sfincs-sfincsmodel-build"]], "hydromt_sfincs.SfincsModel.config": [[11, "hydromt-sfincs-sfincsmodel-config"]], "hydromt_sfincs.SfincsModel.crs": [[12, "hydromt-sfincs-sfincsmodel-crs"]], "hydromt_sfincs.SfincsModel.forcing": [[13, "hydromt-sfincs-sfincsmodel-forcing"]], "hydromt_sfincs.SfincsModel.get_config": [[14, "hydromt-sfincs-sfincsmodel-get-config"]], "hydromt_sfincs.SfincsModel.get_model_time": [[15, "hydromt-sfincs-sfincsmodel-get-model-time"]], "hydromt_sfincs.SfincsModel.get_spatial_attrs": [[16, "hydromt-sfincs-sfincsmodel-get-spatial-attrs"]], "hydromt_sfincs.SfincsModel.mask": [[17, "hydromt-sfincs-sfincsmodel-mask"]], "hydromt_sfincs.SfincsModel.plot_basemap": [[18, "hydromt-sfincs-sfincsmodel-plot-basemap"]], "hydromt_sfincs.SfincsModel.plot_forcing": [[19, "hydromt-sfincs-sfincsmodel-plot-forcing"]], "hydromt_sfincs.SfincsModel.read": [[20, "hydromt-sfincs-sfincsmodel-read"]], "hydromt_sfincs.SfincsModel.read_config": [[21, "hydromt-sfincs-sfincsmodel-read-config"]], "hydromt_sfincs.SfincsModel.read_forcing": [[22, "hydromt-sfincs-sfincsmodel-read-forcing"]], "hydromt_sfincs.SfincsModel.read_results": [[23, "hydromt-sfincs-sfincsmodel-read-results"]], "hydromt_sfincs.SfincsModel.read_states": [[24, "hydromt-sfincs-sfincsmodel-read-states"]], "hydromt_sfincs.SfincsModel.read_staticgeoms": [[25, "hydromt-sfincs-sfincsmodel-read-staticgeoms"]], "hydromt_sfincs.SfincsModel.read_staticmaps": [[26, "hydromt-sfincs-sfincsmodel-read-staticmaps"]], "hydromt_sfincs.SfincsModel.region": [[27, "hydromt-sfincs-sfincsmodel-region"]], "hydromt_sfincs.SfincsModel.res": [[28, "hydromt-sfincs-sfincsmodel-res"]], "hydromt_sfincs.SfincsModel.results": [[29, "hydromt-sfincs-sfincsmodel-results"]], "hydromt_sfincs.SfincsModel.root": [[30, "hydromt-sfincs-sfincsmodel-root"]], "hydromt_sfincs.SfincsModel.set_config": [[31, "hydromt-sfincs-sfincsmodel-set-config"]], "hydromt_sfincs.SfincsModel.set_forcing": [[32, "hydromt-sfincs-sfincsmodel-set-forcing"]], "hydromt_sfincs.SfincsModel.set_forcing_1d": [[33, "hydromt-sfincs-sfincsmodel-set-forcing-1d"]], "hydromt_sfincs.SfincsModel.set_results": [[34, "hydromt-sfincs-sfincsmodel-set-results"]], "hydromt_sfincs.SfincsModel.set_root": [[35, "hydromt-sfincs-sfincsmodel-set-root"]], "hydromt_sfincs.SfincsModel.set_states": [[36, "hydromt-sfincs-sfincsmodel-set-states"]], "hydromt_sfincs.SfincsModel.set_staticgeoms": [[37, "hydromt-sfincs-sfincsmodel-set-staticgeoms"]], "hydromt_sfincs.SfincsModel.set_staticmaps": [[38, "hydromt-sfincs-sfincsmodel-set-staticmaps"]], "hydromt_sfincs.SfincsModel.setup_bounds": [[39, "hydromt-sfincs-sfincsmodel-setup-bounds"]], "hydromt_sfincs.SfincsModel.setup_cn_infiltration": [[40, "hydromt-sfincs-sfincsmodel-setup-cn-infiltration"]], "hydromt_sfincs.SfincsModel.setup_config": [[41, "hydromt-sfincs-sfincsmodel-setup-config"]], "hydromt_sfincs.SfincsModel.setup_gauges": [[42, "hydromt-sfincs-sfincsmodel-setup-gauges"]], "hydromt_sfincs.SfincsModel.setup_h_forcing": [[43, "hydromt-sfincs-sfincsmodel-setup-h-forcing"]], "hydromt_sfincs.SfincsModel.setup_manning_roughness": [[44, "hydromt-sfincs-sfincsmodel-setup-manning-roughness"]], "hydromt_sfincs.SfincsModel.setup_mask": [[45, "hydromt-sfincs-sfincsmodel-setup-mask"]], "hydromt_sfincs.SfincsModel.setup_merge_topobathy": [[46, "hydromt-sfincs-sfincsmodel-setup-merge-topobathy"]], "hydromt_sfincs.SfincsModel.setup_p_forcing": [[47, "hydromt-sfincs-sfincsmodel-setup-p-forcing"]], "hydromt_sfincs.SfincsModel.setup_p_forcing_from_grid": [[48, "hydromt-sfincs-sfincsmodel-setup-p-forcing-from-grid"]], "hydromt_sfincs.SfincsModel.setup_q_forcing": [[49, "hydromt-sfincs-sfincsmodel-setup-q-forcing"]], "hydromt_sfincs.SfincsModel.setup_q_forcing_from_grid": [[50, "hydromt-sfincs-sfincsmodel-setup-q-forcing-from-grid"]], "hydromt_sfincs.SfincsModel.setup_river_bathymetry": [[51, "hydromt-sfincs-sfincsmodel-setup-river-bathymetry"]], "hydromt_sfincs.SfincsModel.setup_river_hydrography": [[52, "hydromt-sfincs-sfincsmodel-setup-river-hydrography"]], "hydromt_sfincs.SfincsModel.setup_river_inflow": [[53, "hydromt-sfincs-sfincsmodel-setup-river-inflow"]], "hydromt_sfincs.SfincsModel.setup_river_outflow": [[54, "hydromt-sfincs-sfincsmodel-setup-river-outflow"]], "hydromt_sfincs.SfincsModel.setup_structures": [[55, "hydromt-sfincs-sfincsmodel-setup-structures"]], "hydromt_sfincs.SfincsModel.setup_topobathy": [[56, "hydromt-sfincs-sfincsmodel-setup-topobathy"]], "hydromt_sfincs.SfincsModel.states": [[57, "hydromt-sfincs-sfincsmodel-states"]], "hydromt_sfincs.SfincsModel.staticgeoms": [[58, "hydromt-sfincs-sfincsmodel-staticgeoms"]], "hydromt_sfincs.SfincsModel.staticmaps": [[59, "hydromt-sfincs-sfincsmodel-staticmaps"]], "hydromt_sfincs.SfincsModel.update": [[60, "hydromt-sfincs-sfincsmodel-update"]], "hydromt_sfincs.SfincsModel.update_spatial_attrs": [[61, "hydromt-sfincs-sfincsmodel-update-spatial-attrs"]], "hydromt_sfincs.SfincsModel.write": [[62, "hydromt-sfincs-sfincsmodel-write"]], "hydromt_sfincs.SfincsModel.write_config": [[63, "hydromt-sfincs-sfincsmodel-write-config"]], "hydromt_sfincs.SfincsModel.write_forcing": [[64, "hydromt-sfincs-sfincsmodel-write-forcing"]], "hydromt_sfincs.SfincsModel.write_states": [[65, "hydromt-sfincs-sfincsmodel-write-states"]], "hydromt_sfincs.SfincsModel.write_staticgeoms": [[66, "hydromt-sfincs-sfincsmodel-write-staticgeoms"]], "hydromt_sfincs.SfincsModel.write_staticmaps": [[67, "hydromt-sfincs-sfincsmodel-write-staticmaps"]], "hydromt_sfincs.plots.plot_basemap": [[68, "hydromt-sfincs-plots-plot-basemap"]], "hydromt_sfincs.plots.plot_forcing": [[69, "hydromt-sfincs-plots-plot-forcing"]], "hydromt_sfincs.read_ascii_map": [[70, "hydromt-sfincs-read-ascii-map"]], "hydromt_sfincs.read_binary_map": [[71, "hydromt-sfincs-read-binary-map"]], "hydromt_sfincs.read_binary_map_index": [[72, "hydromt-sfincs-read-binary-map-index"]], "hydromt_sfincs.read_inp": [[73, "hydromt-sfincs-read-inp"]], "hydromt_sfincs.read_sfincs_his_results": [[74, "hydromt-sfincs-read-sfincs-his-results"]], "hydromt_sfincs.read_sfincs_map_results": [[75, "hydromt-sfincs-read-sfincs-map-results"]], "hydromt_sfincs.read_structures": [[76, "hydromt-sfincs-read-structures"]], "hydromt_sfincs.read_timeseries": [[77, "hydromt-sfincs-read-timeseries"]], "hydromt_sfincs.read_xy": [[78, "hydromt-sfincs-read-xy"]], "hydromt_sfincs.utils.gdf2structures": [[79, "hydromt-sfincs-utils-gdf2structures"]], "hydromt_sfincs.utils.get_spatial_attrs": [[80, "hydromt-sfincs-utils-get-spatial-attrs"]], "hydromt_sfincs.utils.mask_bounds": [[81, "hydromt-sfincs-utils-mask-bounds"]], "hydromt_sfincs.utils.mask_topobathy": [[82, "hydromt-sfincs-utils-mask-topobathy"]], "hydromt_sfincs.utils.parse_datetime": [[83, "hydromt-sfincs-utils-parse-datetime"]], "hydromt_sfincs.utils.structures2gdf": [[84, "hydromt-sfincs-utils-structures2gdf"]], "hydromt_sfincs.workflows.burn_river_zb": [[85, "hydromt-sfincs-workflows-burn-river-zb"]], "hydromt_sfincs.workflows.cn_to_s": [[86, "hydromt-sfincs-workflows-cn-to-s"]], "hydromt_sfincs.workflows.get_rivbank_dz": [[87, "hydromt-sfincs-workflows-get-rivbank-dz"]], "hydromt_sfincs.workflows.get_river_bathymetry": [[88, "hydromt-sfincs-workflows-get-river-bathymetry"]], "hydromt_sfincs.workflows.landuse": [[89, "hydromt-sfincs-workflows-landuse"]], "hydromt_sfincs.workflows.merge_topobathy": [[90, "hydromt-sfincs-workflows-merge-topobathy"]], "hydromt_sfincs.workflows.river_boundary_points": [[91, "hydromt-sfincs-workflows-river-boundary-points"]], "hydromt_sfincs.workflows.snap_discharge": [[92, "hydromt-sfincs-workflows-snap-discharge"]], "hydromt_sfincs.write_ascii_map": [[93, "hydromt-sfincs-write-ascii-map"]], "hydromt_sfincs.write_binary_map": [[94, "hydromt-sfincs-write-binary-map"]], "hydromt_sfincs.write_binary_map_index": [[95, "hydromt-sfincs-write-binary-map-index"]], "hydromt_sfincs.write_inp": [[96, "hydromt-sfincs-write-inp"]], "hydromt_sfincs.write_structures": [[97, "hydromt-sfincs-write-structures"]], "hydromt_sfincs.write_timeseries": [[98, "hydromt-sfincs-write-timeseries"]], "hydromt_sfincs.write_xy": [[99, "hydromt-sfincs-write-xy"]], "API reference": [[100, "api-reference"]], "SFINCS model class": [[100, "sfincs-model-class"]], "Initialize": [[100, "initialize"]], "Setup components": [[100, "setup-components"]], "Plot methods": [[100, "plot-methods"]], "Attributes": [[100, "attributes"]], "High level methods": [[100, "high-level-methods"]], "Low level methods": [[100, "low-level-methods"]], "General methods": [[100, "general-methods"]], "SFINCS workflows": [[100, "sfincs-workflows"]], "SFINCS low-level methods": [[100, "sfincs-low-level-methods"]], "Input/Output methods": [[100, "input-output-methods"]], "Utilities": [[100, "utilities"]], "Visualization": [[100, "visualization"]], "What\u2019s new": [[101, "what-s-new"]], "Unreleased": [[101, "unreleased"]], "Changed": [[101, "changed"], [101, "id1"], [101, "id3"], [101, "id6"]], "v0.2.1 (23 February 2022)": [[101, "v0-2-1-23-february-2022"]], "Deprecated": [[101, "deprecated"], [101, "id4"]], "Bugfix": [[101, "bugfix"], [101, "id2"]], "New": [[101, "new"]], "v0.2.0 (2 August 2021)": [[101, "v0-2-0-2-august-2021"]], "Added": [[101, "added"], [101, "id5"]], "Documentation": [[101, "documentation"], [101, "id7"]], "v0.1.0 (18 May 2021)": [[101, "v0-1-0-18-may-2021"]], "Contributors": [[102, "contributors"]], "Developer\u2019s environment": [[103, "developer-s-environment"]], "Developments": [[104, "developments"]], "Roadmap": [[105, "roadmap"]], "Examples": [[106, "examples"]], "List of examples": [[106, "list-of-examples"]], "Frequently asked questions": [[107, "frequently-asked-questions"]], "Installation Guide": [[108, "installation-guide"]], "Prerequisites": [[108, "prerequisites"]], "Installation": [[108, "installation"]], "Install HydroMT-SFINCS in a new environment": [[108, "install-hydromt-sfincs-in-a-new-environment"]], "Install HydroMT-SFINCS in an existing environment": [[108, "install-hydromt-sfincs-in-an-existing-environment"]], "Developer install": [[108, "developer-install"]], "Getting started": [[109, "getting-started"]], "HydroMT-SFINCS: SFINCS plugin for HydroMT": [[110, "hydromt-sfincs-sfincs-plugin-for-hydromt"]], "What is the HydroMT-SFINCS plugin": [[110, "what-is-the-hydromt-sfincs-plugin"]], "Why HydroMT-SFINCS?": [[110, "why-hydromt-sfincs"]], "How to use HydroMT-SFINCS?": [[110, "how-to-use-hydromt-sfincs"]], "How to cite?": [[110, "how-to-cite"]], "How to contribute?": [[110, "how-to-contribute"]], "User guide": [[111, "user-guide"]], "Postprocessing and visualization": [[112, "postprocessing-and-visualization"]], "Model methods and components": [[113, "model-methods-and-components"]], "Model setup methods": [[113, "model-setup-methods"]], "General setup methods": [[113, "id2"]], "Forcing setup methods": [[113, "id3"]], "Model components": [[113, "model-components"]], "SfincsModel data component": [[113, "id4"]], "Building or update a model": [[114, "building-or-update-a-model"]], "Configuration file": [[114, "configuration-file"]], "Selecting data": [[114, "selecting-data"]], "Setting up a coastal model": [[115, "setting-up-a-coastal-model"]], "Setting up a riverine model": [[116, "setting-up-a-riverine-model"]]}, "indexentries": {"sfincsmodel (class in hydromt_sfincs)": [[9, "hydromt_sfincs.SfincsModel"]], "__init__() (hydromt_sfincs.sfincsmodel method)": [[9, "hydromt_sfincs.SfincsModel.__init__"]], "build() (hydromt_sfincs.sfincsmodel method)": [[10, "hydromt_sfincs.SfincsModel.build"]], "config (hydromt_sfincs.sfincsmodel property)": [[11, "hydromt_sfincs.SfincsModel.config"]], "crs (hydromt_sfincs.sfincsmodel property)": [[12, "hydromt_sfincs.SfincsModel.crs"]], "forcing (hydromt_sfincs.sfincsmodel property)": [[13, "hydromt_sfincs.SfincsModel.forcing"]], "get_config() (hydromt_sfincs.sfincsmodel method)": [[14, "hydromt_sfincs.SfincsModel.get_config"]], "get_model_time() (hydromt_sfincs.sfincsmodel method)": [[15, "hydromt_sfincs.SfincsModel.get_model_time"]], "get_spatial_attrs() (hydromt_sfincs.sfincsmodel method)": [[16, "hydromt_sfincs.SfincsModel.get_spatial_attrs"]], "mask (hydromt_sfincs.sfincsmodel property)": [[17, "hydromt_sfincs.SfincsModel.mask"]], "plot_basemap() (hydromt_sfincs.sfincsmodel method)": [[18, "hydromt_sfincs.SfincsModel.plot_basemap"]], "plot_forcing() (hydromt_sfincs.sfincsmodel method)": [[19, "hydromt_sfincs.SfincsModel.plot_forcing"]], "read() (hydromt_sfincs.sfincsmodel method)": [[20, "hydromt_sfincs.SfincsModel.read"]], "read_config() (hydromt_sfincs.sfincsmodel method)": [[21, "hydromt_sfincs.SfincsModel.read_config"]], "read_forcing() (hydromt_sfincs.sfincsmodel method)": [[22, "hydromt_sfincs.SfincsModel.read_forcing"]], "read_results() (hydromt_sfincs.sfincsmodel method)": [[23, "hydromt_sfincs.SfincsModel.read_results"]], "read_states() (hydromt_sfincs.sfincsmodel method)": [[24, "hydromt_sfincs.SfincsModel.read_states"]], "read_staticgeoms() (hydromt_sfincs.sfincsmodel method)": [[25, "hydromt_sfincs.SfincsModel.read_staticgeoms"]], "read_staticmaps() (hydromt_sfincs.sfincsmodel method)": [[26, "hydromt_sfincs.SfincsModel.read_staticmaps"]], "region (hydromt_sfincs.sfincsmodel property)": [[27, "hydromt_sfincs.SfincsModel.region"]], "res (hydromt_sfincs.sfincsmodel property)": [[28, "hydromt_sfincs.SfincsModel.res"]], "results (hydromt_sfincs.sfincsmodel property)": [[29, "hydromt_sfincs.SfincsModel.results"]], "root (hydromt_sfincs.sfincsmodel property)": [[30, "hydromt_sfincs.SfincsModel.root"]], "set_config() (hydromt_sfincs.sfincsmodel method)": [[31, "hydromt_sfincs.SfincsModel.set_config"]], "set_forcing() (hydromt_sfincs.sfincsmodel method)": [[32, "hydromt_sfincs.SfincsModel.set_forcing"]], "set_forcing_1d() (hydromt_sfincs.sfincsmodel method)": [[33, "hydromt_sfincs.SfincsModel.set_forcing_1d"]], "set_results() (hydromt_sfincs.sfincsmodel method)": [[34, "hydromt_sfincs.SfincsModel.set_results"]], "set_root() (hydromt_sfincs.sfincsmodel method)": [[35, "hydromt_sfincs.SfincsModel.set_root"]], "set_states() (hydromt_sfincs.sfincsmodel method)": [[36, "hydromt_sfincs.SfincsModel.set_states"]], "set_staticgeoms() (hydromt_sfincs.sfincsmodel method)": [[37, "hydromt_sfincs.SfincsModel.set_staticgeoms"]], "set_staticmaps() (hydromt_sfincs.sfincsmodel method)": [[38, "hydromt_sfincs.SfincsModel.set_staticmaps"]], "setup_bounds() (hydromt_sfincs.sfincsmodel method)": [[39, "hydromt_sfincs.SfincsModel.setup_bounds"]], "setup_cn_infiltration() (hydromt_sfincs.sfincsmodel method)": [[40, "hydromt_sfincs.SfincsModel.setup_cn_infiltration"]], "setup_config() (hydromt_sfincs.sfincsmodel method)": [[41, "hydromt_sfincs.SfincsModel.setup_config"]], "setup_gauges() (hydromt_sfincs.sfincsmodel method)": [[42, "hydromt_sfincs.SfincsModel.setup_gauges"]], "setup_h_forcing() (hydromt_sfincs.sfincsmodel method)": [[43, "hydromt_sfincs.SfincsModel.setup_h_forcing"]], "setup_manning_roughness() (hydromt_sfincs.sfincsmodel method)": [[44, "hydromt_sfincs.SfincsModel.setup_manning_roughness"]], "setup_mask() (hydromt_sfincs.sfincsmodel method)": [[45, "hydromt_sfincs.SfincsModel.setup_mask"]], "setup_merge_topobathy() (hydromt_sfincs.sfincsmodel method)": [[46, "hydromt_sfincs.SfincsModel.setup_merge_topobathy"]], "setup_p_forcing() (hydromt_sfincs.sfincsmodel method)": [[47, "hydromt_sfincs.SfincsModel.setup_p_forcing"]], "setup_p_forcing_from_grid() (hydromt_sfincs.sfincsmodel method)": [[48, "hydromt_sfincs.SfincsModel.setup_p_forcing_from_grid"]], "setup_q_forcing() (hydromt_sfincs.sfincsmodel method)": [[49, "hydromt_sfincs.SfincsModel.setup_q_forcing"]], "setup_q_forcing_from_grid() (hydromt_sfincs.sfincsmodel method)": [[50, "hydromt_sfincs.SfincsModel.setup_q_forcing_from_grid"]], "setup_river_bathymetry() (hydromt_sfincs.sfincsmodel method)": [[51, "hydromt_sfincs.SfincsModel.setup_river_bathymetry"]], "setup_river_hydrography() (hydromt_sfincs.sfincsmodel method)": [[52, "hydromt_sfincs.SfincsModel.setup_river_hydrography"]], "setup_river_inflow() (hydromt_sfincs.sfincsmodel method)": [[53, "hydromt_sfincs.SfincsModel.setup_river_inflow"]], "setup_river_outflow() (hydromt_sfincs.sfincsmodel method)": [[54, "hydromt_sfincs.SfincsModel.setup_river_outflow"]], "setup_structures() (hydromt_sfincs.sfincsmodel method)": [[55, "hydromt_sfincs.SfincsModel.setup_structures"]], "setup_topobathy() (hydromt_sfincs.sfincsmodel method)": [[56, "hydromt_sfincs.SfincsModel.setup_topobathy"]], "states (hydromt_sfincs.sfincsmodel property)": [[57, "hydromt_sfincs.SfincsModel.states"]], "staticgeoms (hydromt_sfincs.sfincsmodel property)": [[58, "hydromt_sfincs.SfincsModel.staticgeoms"]], "staticmaps (hydromt_sfincs.sfincsmodel property)": [[59, "hydromt_sfincs.SfincsModel.staticmaps"]], "update() (hydromt_sfincs.sfincsmodel method)": [[60, "hydromt_sfincs.SfincsModel.update"]], "update_spatial_attrs() (hydromt_sfincs.sfincsmodel method)": [[61, "hydromt_sfincs.SfincsModel.update_spatial_attrs"]], "write() (hydromt_sfincs.sfincsmodel method)": [[62, "hydromt_sfincs.SfincsModel.write"]], "write_config() (hydromt_sfincs.sfincsmodel method)": [[63, "hydromt_sfincs.SfincsModel.write_config"]], "write_forcing() (hydromt_sfincs.sfincsmodel method)": [[64, "hydromt_sfincs.SfincsModel.write_forcing"]], "write_states() (hydromt_sfincs.sfincsmodel method)": [[65, "hydromt_sfincs.SfincsModel.write_states"]], "write_staticgeoms() (hydromt_sfincs.sfincsmodel method)": [[66, "hydromt_sfincs.SfincsModel.write_staticgeoms"]], "write_staticmaps() (hydromt_sfincs.sfincsmodel method)": [[67, "hydromt_sfincs.SfincsModel.write_staticmaps"]], "plot_basemap() (in module hydromt_sfincs.plots)": [[68, "hydromt_sfincs.plots.plot_basemap"]], "plot_forcing() (in module hydromt_sfincs.plots)": [[69, "hydromt_sfincs.plots.plot_forcing"]], "read_ascii_map() (in module hydromt_sfincs)": [[70, "hydromt_sfincs.read_ascii_map"]], "read_binary_map() (in module hydromt_sfincs)": [[71, "hydromt_sfincs.read_binary_map"]], "read_binary_map_index() (in module hydromt_sfincs)": [[72, "hydromt_sfincs.read_binary_map_index"]], "read_inp() (in module hydromt_sfincs)": [[73, "hydromt_sfincs.read_inp"]], "read_sfincs_his_results() (in module hydromt_sfincs)": [[74, "hydromt_sfincs.read_sfincs_his_results"]], "read_sfincs_map_results() (in module hydromt_sfincs)": [[75, "hydromt_sfincs.read_sfincs_map_results"]], "read_structures() (in module hydromt_sfincs)": [[76, "hydromt_sfincs.read_structures"]], "read_timeseries() (in module hydromt_sfincs)": [[77, "hydromt_sfincs.read_timeseries"]], "read_xy() (in module hydromt_sfincs)": [[78, "hydromt_sfincs.read_xy"]], "gdf2structures() (in module hydromt_sfincs.utils)": [[79, "hydromt_sfincs.utils.gdf2structures"]], "get_spatial_attrs() (in module hydromt_sfincs.utils)": [[80, "hydromt_sfincs.utils.get_spatial_attrs"]], "mask_bounds() (in module hydromt_sfincs.utils)": [[81, "hydromt_sfincs.utils.mask_bounds"]], "mask_topobathy() (in module hydromt_sfincs.utils)": [[82, "hydromt_sfincs.utils.mask_topobathy"]], "parse_datetime() (in module hydromt_sfincs.utils)": [[83, "hydromt_sfincs.utils.parse_datetime"]], "structures2gdf() (in module hydromt_sfincs.utils)": [[84, "hydromt_sfincs.utils.structures2gdf"]], "burn_river_zb() (in module hydromt_sfincs.workflows)": [[85, "hydromt_sfincs.workflows.burn_river_zb"]], "cn_to_s() (in module hydromt_sfincs.workflows)": [[86, "hydromt_sfincs.workflows.cn_to_s"]], "get_rivbank_dz() (in module hydromt_sfincs.workflows)": [[87, "hydromt_sfincs.workflows.get_rivbank_dz"]], "get_river_bathymetry() (in module hydromt_sfincs.workflows)": [[88, "hydromt_sfincs.workflows.get_river_bathymetry"]], "landuse() (in module hydromt_sfincs.workflows)": [[89, "hydromt_sfincs.workflows.landuse"]], "merge_topobathy() (in module hydromt_sfincs.workflows)": [[90, "hydromt_sfincs.workflows.merge_topobathy"]], "river_boundary_points() (in module hydromt_sfincs.workflows)": [[91, "hydromt_sfincs.workflows.river_boundary_points"]], "snap_discharge() (in module hydromt_sfincs.workflows)": [[92, "hydromt_sfincs.workflows.snap_discharge"]], "write_ascii_map() (in module hydromt_sfincs)": [[93, "hydromt_sfincs.write_ascii_map"]], "write_binary_map() (in module hydromt_sfincs)": [[94, "hydromt_sfincs.write_binary_map"]], "write_binary_map_index() (in module hydromt_sfincs)": [[95, "hydromt_sfincs.write_binary_map_index"]], "write_inp() (in module hydromt_sfincs)": [[96, "hydromt_sfincs.write_inp"]], "write_structures() (in module hydromt_sfincs)": [[97, "hydromt_sfincs.write_structures"]], "write_timeseries() (in module hydromt_sfincs)": [[98, "hydromt_sfincs.write_timeseries"]], "write_xy() (in module hydromt_sfincs)": [[99, "hydromt_sfincs.write_xy"]]}})