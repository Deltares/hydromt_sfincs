name: Build Documentation

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - .github/workflows/docs.yml
      - hydromt_sfincs/*
      - docs/*
      - examples/*
      - pyproject.toml
  pull_request:
    branches: [main]
    paths:
      - .github/workflows/docs.yml
      - hydromt_sfincs/*
      - docs/*
      - examples/*
      - pyproject.toml

jobs:
  # Build docs on Linux
  test-docs:
    env:
      DOC_VERSION: dev
      PYDEVD_DISABLE_FILE_VALIDATION: 1
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-python@v5
        id: pip
        with:
          # caching, see https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#caching-packages
          cache: 'pip'
          python-version: '3.11'
          cache-dependency-path: pyproject.toml

      # true if cache-hit occurred on the primary key
      - name: Cache hit
        run: echo '${{ steps.pip.outputs.cache-hit }}'

      # build environment with pip
      - name: Install hydromt-sfincs
        run: |
          pip install --upgrade pip
          pip install .[doc,examples]
          pip list

      # if we're not publishing we don't have to write them, so we might as well
      # save ourself a bunch of IO time
      - name: Build dummy docs
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          sphinx-build ./docs ./docs/_build -b dummy -W

      - name: Build html docs
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          sphinx-build -M html ./docs ./docs/_build -W
          echo "DOC_VERSION=$(python -c 'from hydromt_sfincs import __version__ as v; print("dev" if "dev" in v else "v"+v)')" >> $GITHUB_ENV

      - name: Upload to GitHub Pages
        if: ${{ github.event_name != 'pull_request'}}
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html
          exclude_assets: '.buildinfo,_sources/*,_examples/*.ipynb'
          destination_dir: ./${{ env.DOC_VERSION }}
          keep_files: false
          full_commit_message: Deploy ${{ env.DOC_VERSION }} to GitHub Pages
